{"ast":null,"code":"import React from \"react\";\nimport { EmptyState } from \"../../../components\";\nimport { colors } from \"../../../theme\";\nimport { DemoDivider } from \"../DemoDivider\";\nimport { DemoUseCase } from \"../DemoUseCase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var DemoEmptyState = {\n  name: \"EmptyState\",\n  description: \"A component to use when there is no data to display. It can be utilized to direct the user what to do next\",\n  data: [_jsx(DemoUseCase, {\n    name: \"Presets\",\n    description: \"You can create different text/image sets. One is predefined called `generic`. Note, there's no default in case you want to have a completely custom EmptyState.\",\n    children: _jsx(EmptyState, {\n      preset: \"generic\"\n    })\n  }), _jsxs(DemoUseCase, {\n    name: \"Passing Content\",\n    description: \"There are a few different ways to pass content.\",\n    children: [_jsx(EmptyState, {\n      imageSource: require(\"../../../../assets/images/logo.png\"),\n      heading: \"Customize Image\",\n      content: \"You can pass in any image source.\"\n    }), _jsx(DemoDivider, {\n      size: 30,\n      line: true\n    }), _jsx(EmptyState, {\n      heading: \"Via `heading` Prop\",\n      content: \"Via `content` prop.\",\n      button: \"Via `button` Prop\"\n    }), _jsx(DemoDivider, {\n      size: 30,\n      line: true\n    }), _jsx(EmptyState, {\n      headingTx: \"demoShowroomScreen.demoViaSpecifiedTxProp\",\n      headingTxOptions: {\n        prop: \"heading\"\n      },\n      contentTx: \"demoShowroomScreen.demoViaSpecifiedTxProp\",\n      contentTxOptions: {\n        prop: \"content\"\n      },\n      buttonTx: \"demoShowroomScreen.demoViaSpecifiedTxProp\",\n      buttonTxOptions: {\n        prop: \"button\"\n      }\n    })]\n  }), _jsx(DemoUseCase, {\n    name: \"Styling\",\n    description: \"The component can be styled easily.\",\n    children: _jsx(EmptyState, {\n      preset: \"generic\",\n      style: {\n        backgroundColor: colors.error,\n        paddingVertical: 20\n      },\n      imageStyle: {\n        height: 75,\n        tintColor: colors.palette.neutral100\n      },\n      ImageProps: {\n        resizeMode: \"contain\"\n      },\n      headingStyle: {\n        color: colors.palette.neutral100,\n        textDecorationLine: \"underline\",\n        textDecorationColor: colors.palette.neutral100\n      },\n      contentStyle: {\n        color: colors.palette.neutral100,\n        textDecorationLine: \"underline\",\n        textDecorationColor: colors.palette.neutral100\n      },\n      buttonStyle: {\n        alignSelf: \"center\",\n        backgroundColor: colors.palette.neutral100\n      },\n      buttonTextStyle: {\n        color: colors.error\n      },\n      ButtonProps: {\n        preset: \"reversed\"\n      }\n    })\n  })]\n};","map":{"version":3,"names":["React","EmptyState","colors","DemoDivider","DemoUseCase","jsx","_jsx","jsxs","_jsxs","DemoEmptyState","name","description","data","children","preset","imageSource","require","heading","content","size","line","button","headingTx","headingTxOptions","prop","contentTx","contentTxOptions","buttonTx","buttonTxOptions","style","backgroundColor","error","paddingVertical","imageStyle","height","tintColor","palette","neutral100","ImageProps","resizeMode","headingStyle","color","textDecorationLine","textDecorationColor","contentStyle","buttonStyle","alignSelf","buttonTextStyle","ButtonProps"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoShowroomScreen/demos/DemoEmptyState.tsx"],"sourcesContent":["/* eslint-disable react/jsx-key, react-native/no-inline-styles */\nimport React from \"react\"\nimport { EmptyState } from \"../../../components\"\nimport { colors } from \"../../../theme\"\nimport { DemoDivider } from \"../DemoDivider\"\nimport { Demo } from \"../DemoShowroomScreen\"\nimport { DemoUseCase } from \"../DemoUseCase\"\n\nexport const DemoEmptyState: Demo = {\n  name: \"EmptyState\",\n  description:\n    \"A component to use when there is no data to display. It can be utilized to direct the user what to do next\",\n  data: [\n    <DemoUseCase\n      name=\"Presets\"\n      description=\"You can create different text/image sets. One is predefined called `generic`. Note, there's no default in case you want to have a completely custom EmptyState.\"\n    >\n      <EmptyState preset=\"generic\" />\n    </DemoUseCase>,\n\n    <DemoUseCase\n      name=\"Passing Content\"\n      description=\"There are a few different ways to pass content.\"\n    >\n      <EmptyState\n        imageSource={require(\"../../../../assets/images/logo.png\")}\n        heading=\"Customize Image\"\n        content=\"You can pass in any image source.\"\n      />\n\n      <DemoDivider size={30} line />\n\n      <EmptyState\n        heading=\"Via `heading` Prop\"\n        content=\"Via `content` prop.\"\n        button=\"Via `button` Prop\"\n      />\n\n      <DemoDivider size={30} line />\n\n      <EmptyState\n        headingTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        headingTxOptions={{ prop: \"heading\" }}\n        contentTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        contentTxOptions={{ prop: \"content\" }}\n        buttonTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        buttonTxOptions={{ prop: \"button\" }}\n      />\n    </DemoUseCase>,\n\n    <DemoUseCase name=\"Styling\" description=\"The component can be styled easily.\">\n      <EmptyState\n        preset=\"generic\"\n        style={{ backgroundColor: colors.error, paddingVertical: 20 }}\n        imageStyle={{ height: 75, tintColor: colors.palette.neutral100 }}\n        ImageProps={{ resizeMode: \"contain\" }}\n        headingStyle={{\n          color: colors.palette.neutral100,\n          textDecorationLine: \"underline\",\n          textDecorationColor: colors.palette.neutral100,\n        }}\n        contentStyle={{\n          color: colors.palette.neutral100,\n          textDecorationLine: \"underline\",\n          textDecorationColor: colors.palette.neutral100,\n        }}\n        buttonStyle={{ alignSelf: \"center\", backgroundColor: colors.palette.neutral100 }}\n        buttonTextStyle={{ color: colors.error }}\n        ButtonProps={{\n          preset: \"reversed\",\n        }}\n      />\n    </DemoUseCase>,\n  ],\n}\n\n// @demo remove-file\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU;AACnB,SAASC,MAAM;AACf,SAASC,WAAW;AAEpB,SAASC,WAAW;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,OAAO,IAAMC,cAAoB,GAAG;EAClCC,IAAI,EAAE,YAAY;EAClBC,WAAW,EACT,4GAA4G;EAC9GC,IAAI,EAAE,CACJN,IAAA,CAACF,WAAW;IACVM,IAAI,EAAC,SAAS;IACdC,WAAW,EAAC,iKAAiK;IAAAE,QAAA,EAE7KP,IAAA,CAACL,UAAU;MAACa,MAAM,EAAC;IAAS,CAAE;EAAC,CACpB,CAAC,EAEdN,KAAA,CAACJ,WAAW;IACVM,IAAI,EAAC,iBAAiB;IACtBC,WAAW,EAAC,iDAAiD;IAAAE,QAAA,GAE7DP,IAAA,CAACL,UAAU;MACTc,WAAW,EAAEC,OAAO,qCAAqC,CAAE;MAC3DC,OAAO,EAAC,iBAAiB;MACzBC,OAAO,EAAC;IAAmC,CAC5C,CAAC,EAEFZ,IAAA,CAACH,WAAW;MAACgB,IAAI,EAAE,EAAG;MAACC,IAAI;IAAA,CAAE,CAAC,EAE9Bd,IAAA,CAACL,UAAU;MACTgB,OAAO,EAAC,oBAAoB;MAC5BC,OAAO,EAAC,qBAAqB;MAC7BG,MAAM,EAAC;IAAmB,CAC3B,CAAC,EAEFf,IAAA,CAACH,WAAW;MAACgB,IAAI,EAAE,EAAG;MAACC,IAAI;IAAA,CAAE,CAAC,EAE9Bd,IAAA,CAACL,UAAU;MACTqB,SAAS,EAAC,2CAA2C;MACrDC,gBAAgB,EAAE;QAAEC,IAAI,EAAE;MAAU,CAAE;MACtCC,SAAS,EAAC,2CAA2C;MACrDC,gBAAgB,EAAE;QAAEF,IAAI,EAAE;MAAU,CAAE;MACtCG,QAAQ,EAAC,2CAA2C;MACpDC,eAAe,EAAE;QAAEJ,IAAI,EAAE;MAAS;IAAE,CACrC,CAAC;EAAA,CACS,CAAC,EAEdlB,IAAA,CAACF,WAAW;IAACM,IAAI,EAAC,SAAS;IAACC,WAAW,EAAC,qCAAqC;IAAAE,QAAA,EAC3EP,IAAA,CAACL,UAAU;MACTa,MAAM,EAAC,SAAS;MAChBe,KAAK,EAAE;QAAEC,eAAe,EAAE5B,MAAM,CAAC6B,KAAK;QAAEC,eAAe,EAAE;MAAG,CAAE;MAC9DC,UAAU,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,SAAS,EAAEjC,MAAM,CAACkC,OAAO,CAACC;MAAW,CAAE;MACjEC,UAAU,EAAE;QAAEC,UAAU,EAAE;MAAU,CAAE;MACtCC,YAAY,EAAE;QACZC,KAAK,EAAEvC,MAAM,CAACkC,OAAO,CAACC,UAAU;QAChCK,kBAAkB,EAAE,WAAW;QAC/BC,mBAAmB,EAAEzC,MAAM,CAACkC,OAAO,CAACC;MACtC,CAAE;MACFO,YAAY,EAAE;QACZH,KAAK,EAAEvC,MAAM,CAACkC,OAAO,CAACC,UAAU;QAChCK,kBAAkB,EAAE,WAAW;QAC/BC,mBAAmB,EAAEzC,MAAM,CAACkC,OAAO,CAACC;MACtC,CAAE;MACFQ,WAAW,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEhB,eAAe,EAAE5B,MAAM,CAACkC,OAAO,CAACC;MAAW,CAAE;MACjFU,eAAe,EAAE;QAAEN,KAAK,EAAEvC,MAAM,CAAC6B;MAAM,CAAE;MACzCiB,WAAW,EAAE;QACXlC,MAAM,EAAE;MACV;IAAE,CACH;EAAC,CACS,CAAC;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}