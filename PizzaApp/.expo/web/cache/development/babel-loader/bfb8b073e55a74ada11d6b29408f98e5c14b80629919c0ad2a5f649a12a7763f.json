{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nexport var AuthenticationStoreModel = types.model(\"AuthenticationStore\").props({\n  authToken: types.maybe(types.string),\n  authEmail: \"\"\n}).views(function (store) {\n  return {\n    get isAuthenticated() {\n      return !!store.authToken;\n    },\n    get validationError() {\n      if (store.authEmail.length === 0) return \"can't be blank\";\n      if (store.authEmail.length < 6) return \"must be at least 6 characters\";\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(store.authEmail)) return \"must be a valid email address\";\n      return \"\";\n    }\n  };\n}).actions(function (store) {\n  return {\n    setAuthToken: function setAuthToken(value) {\n      store.authToken = value;\n    },\n    setAuthEmail: function setAuthEmail(value) {\n      store.authEmail = value.replace(/ /g, \"\");\n    },\n    logout: function logout() {\n      store.authToken = undefined;\n      store.authEmail = \"\";\n    }\n  };\n});","map":{"version":3,"names":["types","AuthenticationStoreModel","model","props","authToken","maybe","string","authEmail","views","store","isAuthenticated","validationError","length","test","actions","setAuthToken","value","setAuthEmail","replace","logout","undefined"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/models/AuthenticationStore.ts"],"sourcesContent":["import { Instance, SnapshotOut, types } from \"mobx-state-tree\"\n\nexport const AuthenticationStoreModel = types\n  .model(\"AuthenticationStore\")\n  .props({\n    authToken: types.maybe(types.string),\n    authEmail: \"\",\n  })\n  .views((store) => ({\n    get isAuthenticated() {\n      return !!store.authToken\n    },\n    get validationError() {\n      if (store.authEmail.length === 0) return \"can't be blank\"\n      if (store.authEmail.length < 6) return \"must be at least 6 characters\"\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(store.authEmail))\n        return \"must be a valid email address\"\n      return \"\"\n    },\n  }))\n  .actions((store) => ({\n    setAuthToken(value?: string) {\n      store.authToken = value\n    },\n    setAuthEmail(value: string) {\n      store.authEmail = value.replace(/ /g, \"\")\n    },\n    logout() {\n      store.authToken = undefined\n      store.authEmail = \"\"\n    },\n  }))\n\nexport interface AuthenticationStore extends Instance<typeof AuthenticationStoreModel> {}\nexport interface AuthenticationStoreSnapshot extends SnapshotOut<typeof AuthenticationStoreModel> {}\n\n// @demo remove-file\n"],"mappings":"AAAA,SAAgCA,KAAK,QAAQ,iBAAiB;AAE9D,OAAO,IAAMC,wBAAwB,GAAGD,KAAK,CAC1CE,KAAK,CAAC,qBAAqB,CAAC,CAC5BC,KAAK,CAAC;EACLC,SAAS,EAAEJ,KAAK,CAACK,KAAK,CAACL,KAAK,CAACM,MAAM,CAAC;EACpCC,SAAS,EAAE;AACb,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK;EAAA,OAAM;IACjB,IAAIC,eAAeA,CAAA,EAAG;MACpB,OAAO,CAAC,CAACD,KAAK,CAACL,SAAS;IAC1B,CAAC;IACD,IAAIO,eAAeA,CAAA,EAAG;MACpB,IAAIF,KAAK,CAACF,SAAS,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO,gBAAgB;MACzD,IAAIH,KAAK,CAACF,SAAS,CAACK,MAAM,GAAG,CAAC,EAAE,OAAO,+BAA+B;MACtE,IAAI,CAAC,4BAA4B,CAACC,IAAI,CAACJ,KAAK,CAACF,SAAS,CAAC,EACrD,OAAO,+BAA+B;MACxC,OAAO,EAAE;IACX;EACF,CAAC;AAAA,CAAC,CAAC,CACFO,OAAO,CAAC,UAACL,KAAK;EAAA,OAAM;IACnBM,YAAY,WAAAA,aAACC,KAAc,EAAE;MAC3BP,KAAK,CAACL,SAAS,GAAGY,KAAK;IACzB,CAAC;IACDC,YAAY,WAAAA,aAACD,KAAa,EAAE;MAC1BP,KAAK,CAACF,SAAS,GAAGS,KAAK,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC3C,CAAC;IACDC,MAAM,WAAAA,OAAA,EAAG;MACPV,KAAK,CAACL,SAAS,GAAGgB,SAAS;MAC3BX,KAAK,CAACF,SAAS,GAAG,EAAE;IACtB;EACF,CAAC;AAAA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}