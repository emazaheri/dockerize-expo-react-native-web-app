{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { types } from \"mobx-state-tree\";\nimport { api } from \"../services/api\";\nimport { EpisodeModel } from \"./Episode\";\nimport { withSetPropAction } from \"./helpers/withSetPropAction\";\nexport var EpisodeStoreModel = types.model(\"EpisodeStore\").props({\n  episodes: types.array(EpisodeModel),\n  favorites: types.array(types.reference(EpisodeModel)),\n  favoritesOnly: false\n}).actions(withSetPropAction).actions(function (store) {\n  return {\n    fetchEpisodes: function () {\n      var _fetchEpisodes = _asyncToGenerator(function* () {\n        var response = yield api.getEpisodes();\n        if (response.kind === \"ok\") {\n          store.setProp(\"episodes\", response.episodes);\n        } else {\n          console.tron.error(\"Error fetching episodes: \" + JSON.stringify(response), []);\n        }\n      });\n      function fetchEpisodes() {\n        return _fetchEpisodes.apply(this, arguments);\n      }\n      return fetchEpisodes;\n    }(),\n    addFavorite: function addFavorite(episode) {\n      store.favorites.push(episode);\n    },\n    removeFavorite: function removeFavorite(episode) {\n      store.favorites.remove(episode);\n    }\n  };\n}).views(function (store) {\n  return {\n    get episodesForList() {\n      return store.favoritesOnly ? store.favorites : store.episodes;\n    },\n    hasFavorite: function hasFavorite(episode) {\n      return store.favorites.includes(episode);\n    }\n  };\n}).actions(function (store) {\n  return {\n    toggleFavorite: function toggleFavorite(episode) {\n      if (store.hasFavorite(episode)) {\n        store.removeFavorite(episode);\n      } else {\n        store.addFavorite(episode);\n      }\n    }\n  };\n});","map":{"version":3,"names":["types","api","EpisodeModel","withSetPropAction","EpisodeStoreModel","model","props","episodes","array","favorites","reference","favoritesOnly","actions","store","fetchEpisodes","_fetchEpisodes","_asyncToGenerator","response","getEpisodes","kind","setProp","console","tron","error","JSON","stringify","apply","arguments","addFavorite","episode","push","removeFavorite","remove","views","episodesForList","hasFavorite","includes","toggleFavorite"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/models/EpisodeStore.ts"],"sourcesContent":["import { Instance, SnapshotOut, types } from \"mobx-state-tree\"\nimport { api } from \"../services/api\"\nimport { Episode, EpisodeModel } from \"./Episode\"\nimport { withSetPropAction } from \"./helpers/withSetPropAction\"\n\nexport const EpisodeStoreModel = types\n  .model(\"EpisodeStore\")\n  .props({\n    episodes: types.array(EpisodeModel),\n    favorites: types.array(types.reference(EpisodeModel)),\n    favoritesOnly: false,\n  })\n  .actions(withSetPropAction)\n  .actions((store) => ({\n    async fetchEpisodes() {\n      const response = await api.getEpisodes()\n      if (response.kind === \"ok\") {\n        store.setProp(\"episodes\", response.episodes)\n      } else {\n        console.tron.error(`Error fetching episodes: ${JSON.stringify(response)}`, [])\n      }\n    },\n    addFavorite(episode: Episode) {\n      store.favorites.push(episode)\n    },\n    removeFavorite(episode: Episode) {\n      store.favorites.remove(episode)\n    },\n  }))\n  .views((store) => ({\n    get episodesForList() {\n      return store.favoritesOnly ? store.favorites : store.episodes\n    },\n\n    hasFavorite(episode: Episode) {\n      return store.favorites.includes(episode)\n    },\n  }))\n  .actions((store) => ({\n    toggleFavorite(episode: Episode) {\n      if (store.hasFavorite(episode)) {\n        store.removeFavorite(episode)\n      } else {\n        store.addFavorite(episode)\n      }\n    },\n  }))\n\nexport interface EpisodeStore extends Instance<typeof EpisodeStoreModel> {}\nexport interface EpisodeStoreSnapshot extends SnapshotOut<typeof EpisodeStoreModel> {}\n\n// @demo remove-file\n"],"mappings":";AAAA,SAAgCA,KAAK,QAAQ,iBAAiB;AAC9D,SAASC,GAAG;AACZ,SAAkBC,YAAY;AAC9B,SAASC,iBAAiB;AAE1B,OAAO,IAAMC,iBAAiB,GAAGJ,KAAK,CACnCK,KAAK,CAAC,cAAc,CAAC,CACrBC,KAAK,CAAC;EACLC,QAAQ,EAAEP,KAAK,CAACQ,KAAK,CAACN,YAAY,CAAC;EACnCO,SAAS,EAAET,KAAK,CAACQ,KAAK,CAACR,KAAK,CAACU,SAAS,CAACR,YAAY,CAAC,CAAC;EACrDS,aAAa,EAAE;AACjB,CAAC,CAAC,CACDC,OAAO,CAACT,iBAAiB,CAAC,CAC1BS,OAAO,CAAC,UAACC,KAAK;EAAA,OAAM;IACbC,aAAa;MAAA,IAAAC,cAAA,GAAAC,iBAAA,cAAG;QACpB,IAAMC,QAAQ,SAAShB,GAAG,CAACiB,WAAW,CAAC,CAAC;QACxC,IAAID,QAAQ,CAACE,IAAI,KAAK,IAAI,EAAE;UAC1BN,KAAK,CAACO,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAACV,QAAQ,CAAC;QAC9C,CAAC,MAAM;UACLc,OAAO,CAACC,IAAI,CAACC,KAAK,+BAA6BC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,EAAI,EAAE,CAAC;QAChF;MACF,CAAC;MAAA,SAAAH,cAAA;QAAA,OAAAC,cAAA,CAAAW,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAb,aAAA;IAAA;IACDc,WAAW,WAAAA,YAACC,OAAgB,EAAE;MAC5BhB,KAAK,CAACJ,SAAS,CAACqB,IAAI,CAACD,OAAO,CAAC;IAC/B,CAAC;IACDE,cAAc,WAAAA,eAACF,OAAgB,EAAE;MAC/BhB,KAAK,CAACJ,SAAS,CAACuB,MAAM,CAACH,OAAO,CAAC;IACjC;EACF,CAAC;AAAA,CAAC,CAAC,CACFI,KAAK,CAAC,UAACpB,KAAK;EAAA,OAAM;IACjB,IAAIqB,eAAeA,CAAA,EAAG;MACpB,OAAOrB,KAAK,CAACF,aAAa,GAAGE,KAAK,CAACJ,SAAS,GAAGI,KAAK,CAACN,QAAQ;IAC/D,CAAC;IAED4B,WAAW,WAAAA,YAACN,OAAgB,EAAE;MAC5B,OAAOhB,KAAK,CAACJ,SAAS,CAAC2B,QAAQ,CAACP,OAAO,CAAC;IAC1C;EACF,CAAC;AAAA,CAAC,CAAC,CACFjB,OAAO,CAAC,UAACC,KAAK;EAAA,OAAM;IACnBwB,cAAc,WAAAA,eAACR,OAAgB,EAAE;MAC/B,IAAIhB,KAAK,CAACsB,WAAW,CAACN,OAAO,CAAC,EAAE;QAC9BhB,KAAK,CAACkB,cAAc,CAACF,OAAO,CAAC;MAC/B,CAAC,MAAM;QACLhB,KAAK,CAACe,WAAW,CAACC,OAAO,CAAC;MAC5B;IACF;EACF,CAAC;AAAA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}