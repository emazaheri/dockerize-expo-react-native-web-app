{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nvar propertySuffixMap = {\n  top: \"Top\",\n  bottom: \"Bottom\",\n  left: \"Start\",\n  right: \"End\",\n  start: \"Start\",\n  end: \"End\"\n};\nvar edgeInsetMap = {\n  start: \"left\",\n  end: \"right\"\n};\nexport function useSafeAreaInsetsStyle() {\n  var safeAreaEdges = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"padding\";\n  var insets = useSafeAreaInsets();\n  return safeAreaEdges.reduce(function (acc, e) {\n    var _edgeInsetMap$e;\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, \"\" + property + propertySuffixMap[e], insets[(_edgeInsetMap$e = edgeInsetMap[e]) != null ? _edgeInsetMap$e : e]));\n  }, {});\n}","map":{"version":3,"names":["useSafeAreaInsets","propertySuffixMap","top","bottom","left","right","start","end","edgeInsetMap","useSafeAreaInsetsStyle","safeAreaEdges","arguments","length","undefined","property","insets","reduce","acc","e","_edgeInsetMap$e","_objectSpread","_defineProperty"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/utils/useSafeAreaInsetsStyle.ts"],"sourcesContent":["import { FlexStyle } from \"react-native\"\nimport { Edge, useSafeAreaInsets } from \"react-native-safe-area-context\"\n\nexport type ExtendedEdge = Edge | \"start\" | \"end\"\n\nconst propertySuffixMap = {\n  top: \"Top\",\n  bottom: \"Bottom\",\n  left: \"Start\",\n  right: \"End\",\n  start: \"Start\",\n  end: \"End\",\n}\n\nconst edgeInsetMap = {\n  start: \"left\",\n  end: \"right\",\n}\n\n/**\n * A hook that can be used to create a safe-area-aware style object that can be passed directly to a View.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Utils-useSafeAreaInsetsStyle.md)\n */\nexport function useSafeAreaInsetsStyle(\n  safeAreaEdges: ExtendedEdge[] = [],\n  property: \"padding\" | \"margin\" = \"padding\",\n): Pick<\n  FlexStyle,\n  | \"marginBottom\"\n  | \"marginEnd\"\n  | \"marginStart\"\n  | \"marginTop\"\n  | \"paddingBottom\"\n  | \"paddingEnd\"\n  | \"paddingStart\"\n  | \"paddingTop\"\n> {\n  const insets = useSafeAreaInsets()\n\n  return safeAreaEdges.reduce((acc, e) => {\n    return { ...acc, [`${property}${propertySuffixMap[e]}`]: insets[edgeInsetMap[e] ?? e] }\n  }, {})\n}\n"],"mappings":";;;AACA,SAAeA,iBAAiB,QAAQ,gCAAgC;AAIxE,IAAMC,iBAAiB,GAAG;EACxBC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,OAAO;EACbC,KAAK,EAAE,KAAK;EACZC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE;AACP,CAAC;AAED,IAAMC,YAAY,GAAG;EACnBF,KAAK,EAAE,MAAM;EACbC,GAAG,EAAE;AACP,CAAC;AAOD,OAAO,SAASE,sBAAsBA,CAAA,EAapC;EAAA,IAZAC,aAA6B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAClCG,QAA8B,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,SAAS;EAY1C,IAAMI,MAAM,GAAGf,iBAAiB,CAAC,CAAC;EAElC,OAAOU,aAAa,CAACM,MAAM,CAAC,UAACC,GAAG,EAAEC,CAAC,EAAK;IAAA,IAAAC,eAAA;IACtC,OAAAC,aAAA,CAAAA,aAAA,KAAYH,GAAG,OAAAI,eAAA,UAAMP,QAAQ,GAAGb,iBAAiB,CAACiB,CAAC,CAAC,EAAKH,MAAM,EAAAI,eAAA,GAACX,YAAY,CAACU,CAAC,CAAC,YAAAC,eAAA,GAAID,CAAC,CAAC;EACvF,CAAC,EAAE,CAAC,CAAC,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}