{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, Toggle } from \"../../../components\";\nimport { colors, spacing } from \"../../../theme\";\nimport { DemoDivider } from \"../DemoDivider\";\nimport { DemoUseCase } from \"../DemoUseCase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ControlledToggle(props) {\n  var _React$useState = React.useState(props.value || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  return _jsx(Toggle, _objectSpread(_objectSpread({}, props), {}, {\n    value: value,\n    onPress: function onPress() {\n      return setValue(!value);\n    }\n  }));\n}\nvar $centeredOneThirdCol = {\n  width: \"33.33333%\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n};\nvar $centeredText = {\n  textAlign: \"center\",\n  width: \"100%\",\n  marginTop: spacing.xs\n};\nexport var DemoToggle = {\n  name: \"Toggle\",\n  description: \"Renders a boolean input. This is a controlled component that requires an onValueChange callback that updates the value prop in order for the component to reflect user actions. If the value prop is not updated, the component will continue to render the supplied value prop instead of the expected result of any user actions.\",\n  data: [_jsxs(DemoUseCase, {\n    name: \"Variants\",\n    description: \"The component supports a few different variants. If heavy customization of a specific variant is needed, it can be easily refactored. The default is `checkbox`.\",\n    children: [_jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      label: \"`checkbox` variant\",\n      helper: \"This can be used for a single on/off input.\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      label: \"`radio` variant\",\n      helper: \"Use this when you have multiple options.\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      label: \"`switch` variant\",\n      helper: \"A more prominent on/off input. Has better accessibility support.\"\n    })]\n  }), _jsxs(DemoUseCase, {\n    name: \"Statuses\",\n    description: \"There is a status prop - similar to `preset` in other components, but affects component functionality as well.\",\n    layout: \"row\",\n    children: [_jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(DemoDivider, {\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      value: true,\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      value: true,\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"No status - this is the default\"\n    }), _jsx(DemoDivider, {\n      size: 24,\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(DemoDivider, {\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      value: true,\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      value: true,\n      status: \"error\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"Error status - use when there is an error\"\n    }), _jsx(DemoDivider, {\n      size: 24,\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(DemoDivider, {\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      value: true,\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      value: true,\n      status: \"disabled\",\n      containerStyle: $centeredOneThirdCol\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"Disabled status - disables the editability and mutes input\"\n    })]\n  }), _jsxs(DemoUseCase, {\n    name: \"Passing Content\",\n    description: \"There are a few different ways to pass content.\",\n    children: [_jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      label: \"Via `label` prop\",\n      helper: \"Via `helper` prop.\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      value: true,\n      labelTx: \"demoShowroomScreen.demoViaSpecifiedTxProp\",\n      labelTxOptions: {\n        prop: \"label\"\n      },\n      helperTx: \"demoShowroomScreen.demoViaSpecifiedTxProp\",\n      helperTxOptions: {\n        prop: \"helper\"\n      }\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      label: \"Supports multiline - Nulla proident consectetur labore sunt ea labore. \",\n      editable: false\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      value: true,\n      label: \"You can change sides - Laborum labore adipisicing in eu ipsum deserunt.\",\n      labelPosition: \"left\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      value: true,\n      status: \"error\",\n      checkboxIcon: \"ladybug\",\n      label: \"Pass in a custom checkbox icon.\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"switch\",\n      switchAccessibilityMode: \"text\",\n      label: \"Switches can be read as text\",\n      status: \"error\",\n      helper: \"By default, this option doesn't use `Text` since depending on the font, the on/off characters might look weird. Customize as needed.\"\n    }), _jsx(DemoDivider, {\n      size: 24\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"switch\",\n      labelPosition: \"left\",\n      switchAccessibilityMode: \"icon\",\n      label: \"Or aided with an icon\"\n    })]\n  }), _jsxs(DemoUseCase, {\n    name: \"Styling\",\n    description: \"The component can be styled easily.\",\n    layout: \"row\",\n    children: [_jsx(ControlledToggle, {\n      variant: \"checkbox\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"radio\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      }\n    }), _jsx(ControlledToggle, {\n      variant: \"switch\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 70,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      }\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"1 - style the input outer wrapper\"\n    }), _jsx(DemoDivider, {\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"checkbox\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.palette.accent500\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"radio\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.palette.accent500\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"switch\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 70,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.palette.accent500,\n        paddingLeft: 10,\n        paddingRight: 10\n      }\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"2 - style the input inner wrapper\"\n    }), _jsx(DemoDivider, {\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"checkbox\",\n      checkboxIcon: \"ladybug\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.palette.accent500\n      },\n      inputDetailStyle: {\n        tintColor: colors.tint,\n        height: 35,\n        width: 35\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"radio\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 50,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.palette.accent500\n      },\n      inputDetailStyle: {\n        backgroundColor: colors.tint,\n        height: 36,\n        width: 36,\n        borderRadius: 18\n      }\n    }), _jsx(ControlledToggle, {\n      value: true,\n      variant: \"switch\",\n      containerStyle: $centeredOneThirdCol,\n      inputOuterStyle: {\n        width: 70,\n        height: 50,\n        borderRadius: 25,\n        backgroundColor: colors.palette.accent300,\n        borderColor: colors.palette.accent500\n      },\n      inputInnerStyle: {\n        backgroundColor: colors.tint,\n        paddingLeft: 10,\n        paddingRight: 10\n      },\n      inputDetailStyle: {\n        backgroundColor: colors.palette.accent300,\n        height: 36,\n        width: 18,\n        borderRadius: 36\n      },\n      switchAccessibilityMode: \"icon\"\n    }), _jsx(Text, {\n      preset: \"formHelper\",\n      style: $centeredText,\n      children: \"3 - style the input detail\"\n    }), _jsx(DemoDivider, {\n      size: 32,\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(View, {\n      style: {\n        width: \"100%\"\n      },\n      children: _jsx(ControlledToggle, {\n        value: true,\n        variant: \"radio\",\n        label: \"You can also style the label\",\n        LabelTextProps: {\n          size: \"xs\",\n          weight: \"bold\"\n        },\n        status: \"error\",\n        labelStyle: {\n          backgroundColor: colors.error,\n          color: colors.palette.neutral100,\n          paddingHorizontal: 5\n        }\n      })\n    }), _jsx(DemoDivider, {\n      size: 24,\n      style: {\n        width: \"100%\"\n      }\n    }), _jsx(View, {\n      style: {\n        width: \"100%\"\n      },\n      children: _jsx(ControlledToggle, {\n        value: true,\n        variant: \"radio\",\n        labelPosition: \"left\",\n        containerStyle: {\n          padding: 10,\n          backgroundColor: colors.error\n        },\n        label: \"Or, style the entire container\",\n        status: \"error\",\n        labelStyle: {\n          color: colors.palette.neutral100\n        }\n      })\n    })]\n  })]\n};","map":{"version":3,"names":["React","View","Text","Toggle","colors","spacing","DemoDivider","DemoUseCase","jsx","_jsx","jsxs","_jsxs","ControlledToggle","props","_React$useState","useState","value","_React$useState2","_slicedToArray","setValue","_objectSpread","onPress","$centeredOneThirdCol","width","alignItems","justifyContent","$centeredText","textAlign","marginTop","xs","DemoToggle","name","description","data","children","variant","label","helper","size","layout","containerStyle","style","preset","status","labelTx","labelTxOptions","prop","helperTx","helperTxOptions","editable","labelPosition","checkboxIcon","switchAccessibilityMode","inputOuterStyle","height","backgroundColor","palette","accent300","borderColor","accent500","borderRadius","inputInnerStyle","paddingLeft","paddingRight","inputDetailStyle","tintColor","tint","LabelTextProps","weight","labelStyle","error","color","neutral100","paddingHorizontal","padding"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoShowroomScreen/demos/DemoToggle.tsx"],"sourcesContent":["/* eslint-disable react/jsx-key, react-native/no-inline-styles */\nimport React from \"react\"\nimport { TextStyle, View, ViewStyle } from \"react-native\"\nimport { Text, Toggle, ToggleProps } from \"../../../components\"\nimport { colors, spacing } from \"../../../theme\"\nimport { Demo } from \"../DemoShowroomScreen\"\nimport { DemoDivider } from \"../DemoDivider\"\nimport { DemoUseCase } from \"../DemoUseCase\"\n\nfunction ControlledToggle(props: ToggleProps) {\n  const [value, setValue] = React.useState(props.value || false)\n  return <Toggle {...props} value={value} onPress={() => setValue(!value)} />\n}\n\nconst $centeredOneThirdCol: ViewStyle = {\n  width: \"33.33333%\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}\nconst $centeredText: TextStyle = {\n  textAlign: \"center\",\n  width: \"100%\",\n  marginTop: spacing.xs,\n}\n\nexport const DemoToggle: Demo = {\n  name: \"Toggle\",\n  description:\n    \"Renders a boolean input. This is a controlled component that requires an onValueChange callback that updates the value prop in order for the component to reflect user actions. If the value prop is not updated, the component will continue to render the supplied value prop instead of the expected result of any user actions.\",\n  data: [\n    <DemoUseCase\n      name=\"Variants\"\n      description=\"The component supports a few different variants. If heavy customization of a specific variant is needed, it can be easily refactored. The default is `checkbox`.\"\n    >\n      <ControlledToggle\n        variant=\"checkbox\"\n        label=\"`checkbox` variant\"\n        helper=\"This can be used for a single on/off input.\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"radio\"\n        label=\"`radio` variant\"\n        helper=\"Use this when you have multiple options.\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"switch\"\n        label=\"`switch` variant\"\n        helper=\"A more prominent on/off input. Has better accessibility support.\"\n      />\n    </DemoUseCase>,\n\n    <DemoUseCase\n      name=\"Statuses\"\n      description=\"There is a status prop - similar to `preset` in other components, but affects component functionality as well.\"\n      layout=\"row\"\n    >\n      <ControlledToggle variant=\"checkbox\" containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"radio\" containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"switch\" containerStyle={$centeredOneThirdCol} />\n      <DemoDivider style={{ width: \"100%\" }} />\n      <ControlledToggle variant=\"checkbox\" value containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"radio\" value containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"switch\" value containerStyle={$centeredOneThirdCol} />\n      <Text preset=\"formHelper\" style={$centeredText}>\n        No status - this is the default\n      </Text>\n\n      <DemoDivider size={24} style={{ width: \"100%\" }} />\n\n      <ControlledToggle variant=\"checkbox\" status=\"error\" containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"radio\" status=\"error\" containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"switch\" status=\"error\" containerStyle={$centeredOneThirdCol} />\n      <DemoDivider style={{ width: \"100%\" }} />\n      <ControlledToggle\n        variant=\"checkbox\"\n        value\n        status=\"error\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <ControlledToggle\n        variant=\"radio\"\n        value\n        status=\"error\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <ControlledToggle\n        variant=\"switch\"\n        value\n        status=\"error\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <Text preset=\"formHelper\" style={$centeredText}>\n        Error status - use when there is an error\n      </Text>\n\n      <DemoDivider size={24} style={{ width: \"100%\" }} />\n\n      <ControlledToggle\n        variant=\"checkbox\"\n        status=\"disabled\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <ControlledToggle variant=\"radio\" status=\"disabled\" containerStyle={$centeredOneThirdCol} />\n      <ControlledToggle variant=\"switch\" status=\"disabled\" containerStyle={$centeredOneThirdCol} />\n      <DemoDivider style={{ width: \"100%\" }} />\n      <ControlledToggle\n        variant=\"checkbox\"\n        value\n        status=\"disabled\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <ControlledToggle\n        variant=\"radio\"\n        value\n        status=\"disabled\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <ControlledToggle\n        variant=\"switch\"\n        value\n        status=\"disabled\"\n        containerStyle={$centeredOneThirdCol}\n      />\n      <Text preset=\"formHelper\" style={$centeredText}>\n        Disabled status - disables the editability and mutes input\n      </Text>\n    </DemoUseCase>,\n\n    <DemoUseCase\n      name=\"Passing Content\"\n      description=\"There are a few different ways to pass content.\"\n    >\n      <ControlledToggle\n        variant=\"checkbox\"\n        value\n        label=\"Via `label` prop\"\n        helper=\"Via `helper` prop.\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"radio\"\n        value\n        labelTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        labelTxOptions={{ prop: \"label\" }}\n        helperTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        helperTxOptions={{ prop: \"helper\" }}\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"checkbox\"\n        value\n        label=\"Supports multiline - Nulla proident consectetur labore sunt ea labore. \"\n        editable={false}\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"radio\"\n        value\n        label=\"You can change sides - Laborum labore adipisicing in eu ipsum deserunt.\"\n        labelPosition=\"left\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        variant=\"checkbox\"\n        value\n        status=\"error\"\n        checkboxIcon=\"ladybug\"\n        label=\"Pass in a custom checkbox icon.\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        value\n        variant=\"switch\"\n        switchAccessibilityMode=\"text\"\n        label=\"Switches can be read as text\"\n        status=\"error\"\n        helper=\"By default, this option doesn't use `Text` since depending on the font, the on/off characters might look weird. Customize as needed.\"\n      />\n      <DemoDivider size={24} />\n      <ControlledToggle\n        value\n        variant=\"switch\"\n        labelPosition=\"left\"\n        switchAccessibilityMode=\"icon\"\n        label=\"Or aided with an icon\"\n      />\n    </DemoUseCase>,\n\n    <DemoUseCase name=\"Styling\" description=\"The component can be styled easily.\" layout=\"row\">\n      <ControlledToggle\n        variant=\"checkbox\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n      />\n      <ControlledToggle\n        variant=\"radio\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n      />\n      <ControlledToggle\n        variant=\"switch\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 70,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n      />\n      <Text preset=\"formHelper\" style={$centeredText}>\n        1 - style the input outer wrapper\n      </Text>\n\n      <DemoDivider style={{ width: \"100%\" }} />\n\n      <ControlledToggle\n        value\n        variant=\"checkbox\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.palette.accent500,\n        }}\n      />\n      <ControlledToggle\n        value\n        variant=\"radio\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.palette.accent500,\n        }}\n      />\n      <ControlledToggle\n        value\n        variant=\"switch\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 70,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.palette.accent500,\n          paddingLeft: 10,\n          paddingRight: 10,\n        }}\n      />\n      <Text preset=\"formHelper\" style={$centeredText}>\n        2 - style the input inner wrapper\n      </Text>\n\n      <DemoDivider style={{ width: \"100%\" }} />\n\n      <ControlledToggle\n        value\n        variant=\"checkbox\"\n        checkboxIcon=\"ladybug\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.palette.accent500,\n        }}\n        inputDetailStyle={{\n          tintColor: colors.tint,\n          height: 35,\n          width: 35,\n        }}\n      />\n      <ControlledToggle\n        value\n        variant=\"radio\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.palette.accent500,\n        }}\n        inputDetailStyle={{\n          backgroundColor: colors.tint,\n          height: 36,\n          width: 36,\n          borderRadius: 18,\n        }}\n      />\n\n      <ControlledToggle\n        value\n        variant=\"switch\"\n        containerStyle={$centeredOneThirdCol}\n        inputOuterStyle={{\n          width: 70,\n          height: 50,\n          borderRadius: 25,\n          backgroundColor: colors.palette.accent300,\n          borderColor: colors.palette.accent500,\n        }}\n        inputInnerStyle={{\n          backgroundColor: colors.tint,\n          paddingLeft: 10,\n          paddingRight: 10,\n        }}\n        inputDetailStyle={{\n          backgroundColor: colors.palette.accent300,\n          height: 36,\n          width: 18,\n          borderRadius: 36,\n        }}\n        switchAccessibilityMode=\"icon\"\n      />\n\n      <Text preset=\"formHelper\" style={$centeredText}>\n        3 - style the input detail\n      </Text>\n\n      <DemoDivider size={32} style={{ width: \"100%\" }} />\n\n      <View style={{ width: \"100%\" }}>\n        <ControlledToggle\n          value\n          variant=\"radio\"\n          label=\"You can also style the label\"\n          LabelTextProps={{ size: \"xs\", weight: \"bold\" }}\n          status=\"error\"\n          labelStyle={{\n            backgroundColor: colors.error,\n            color: colors.palette.neutral100,\n            paddingHorizontal: 5,\n          }}\n        />\n      </View>\n\n      <DemoDivider size={24} style={{ width: \"100%\" }} />\n\n      <View style={{ width: \"100%\" }}>\n        <ControlledToggle\n          value\n          variant=\"radio\"\n          labelPosition=\"left\"\n          containerStyle={{ padding: 10, backgroundColor: colors.error }}\n          label=\"Or, style the entire container\"\n          status=\"error\"\n          labelStyle={{ color: colors.palette.neutral100 }}\n        />\n      </View>\n    </DemoUseCase>,\n  ],\n}\n\n// @demo remove-file\n"],"mappings":";;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAEzB,SAASC,IAAI,EAAEC,MAAM;AACrB,SAASC,MAAM,EAAEC,OAAO;AAExB,SAASC,WAAW;AACpB,SAASC,WAAW;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,SAASC,gBAAgBA,CAACC,KAAkB,EAAE;EAC5C,IAAAC,eAAA,GAA0Bd,KAAK,CAACe,QAAQ,CAACF,KAAK,CAACG,KAAK,IAAI,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAvDE,KAAK,GAAAC,gBAAA;IAAEE,QAAQ,GAAAF,gBAAA;EACtB,OAAOR,IAAA,CAACN,MAAM,EAAAiB,aAAA,CAAAA,aAAA,KAAKP,KAAK;IAAEG,KAAK,EAAEA,KAAM;IAACK,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMF,QAAQ,CAAC,CAACH,KAAK,CAAC;IAAA;EAAC,EAAE,CAAC;AAC7E;AAEA,IAAMM,oBAA+B,GAAG;EACtCC,KAAK,EAAE,WAAW;EAClBC,UAAU,EAAE,QAAQ;EACpBC,cAAc,EAAE;AAClB,CAAC;AACD,IAAMC,aAAwB,GAAG;EAC/BC,SAAS,EAAE,QAAQ;EACnBJ,KAAK,EAAE,MAAM;EACbK,SAAS,EAAEvB,OAAO,CAACwB;AACrB,CAAC;AAED,OAAO,IAAMC,UAAgB,GAAG;EAC9BC,IAAI,EAAE,QAAQ;EACdC,WAAW,EACT,qUAAqU;EACvUC,IAAI,EAAE,CACJtB,KAAA,CAACJ,WAAW;IACVwB,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,kKAAkK;IAAAE,QAAA,GAE9KzB,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAC,oBAAoB;MAC1BC,MAAM,EAAC;IAA6C,CACrD,CAAC,EACF5B,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfC,KAAK,EAAC,iBAAiB;MACvBC,MAAM,EAAC;IAA0C,CAClD,CAAC,EACF5B,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,QAAQ;MAChBC,KAAK,EAAC,kBAAkB;MACxBC,MAAM,EAAC;IAAkE,CAC1E,CAAC;EAAA,CACS,CAAC,EAEd1B,KAAA,CAACJ,WAAW;IACVwB,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,gHAAgH;IAC5HO,MAAM,EAAC,KAAK;IAAAL,QAAA,GAEZzB,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,UAAU;MAACK,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC7Eb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,OAAO;MAACK,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC1Eb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,QAAQ;MAACK,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC3Eb,IAAA,CAACH,WAAW;MAACmC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EACzCd,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,UAAU;MAACnB,KAAK;MAACwB,cAAc,EAAElB;IAAqB,CAAE,CAAC,EACnFb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,OAAO;MAACnB,KAAK;MAACwB,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAChFb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,QAAQ;MAACnB,KAAK;MAACwB,cAAc,EAAElB;IAAqB,CAAE,CAAC,EACjFb,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC,EAEPzB,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE,EAAG;MAACG,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEnDd,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,UAAU;MAACQ,MAAM,EAAC,OAAO;MAACH,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC5Fb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,OAAO;MAACQ,MAAM,EAAC,OAAO;MAACH,cAAc,EAAElB;IAAqB,CAAE,CAAC,EACzFb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,QAAQ;MAACQ,MAAM,EAAC,OAAO;MAACH,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC1Fb,IAAA,CAACH,WAAW;MAACmC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EACzCd,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBnB,KAAK;MACL2B,MAAM,EAAC,OAAO;MACdH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfnB,KAAK;MACL2B,MAAM,EAAC,OAAO;MACdH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,QAAQ;MAChBnB,KAAK;MACL2B,MAAM,EAAC,OAAO;MACdH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC,EAEPzB,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE,EAAG;MAACG,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEnDd,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBQ,MAAM,EAAC,UAAU;MACjBH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,OAAO;MAACQ,MAAM,EAAC,UAAU;MAACH,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC5Fb,IAAA,CAACG,gBAAgB;MAACuB,OAAO,EAAC,QAAQ;MAACQ,MAAM,EAAC,UAAU;MAACH,cAAc,EAAElB;IAAqB,CAAE,CAAC,EAC7Fb,IAAA,CAACH,WAAW;MAACmC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EACzCd,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBnB,KAAK;MACL2B,MAAM,EAAC,UAAU;MACjBH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfnB,KAAK;MACL2B,MAAM,EAAC,UAAU;MACjBH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,QAAQ;MAChBnB,KAAK;MACL2B,MAAM,EAAC,UAAU;MACjBH,cAAc,EAAElB;IAAqB,CACtC,CAAC,EACFb,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC;EAAA,CACI,CAAC,EAEdvB,KAAA,CAACJ,WAAW;IACVwB,IAAI,EAAC,iBAAiB;IACtBC,WAAW,EAAC,iDAAiD;IAAAE,QAAA,GAE7DzB,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBnB,KAAK;MACLoB,KAAK,EAAC,kBAAkB;MACxBC,MAAM,EAAC;IAAoB,CAC5B,CAAC,EACF5B,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfnB,KAAK;MACL4B,OAAO,EAAC,2CAA2C;MACnDC,cAAc,EAAE;QAAEC,IAAI,EAAE;MAAQ,CAAE;MAClCC,QAAQ,EAAC,2CAA2C;MACpDC,eAAe,EAAE;QAAEF,IAAI,EAAE;MAAS;IAAE,CACrC,CAAC,EACFrC,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBnB,KAAK;MACLoB,KAAK,EAAC,yEAAyE;MAC/Ea,QAAQ,EAAE;IAAM,CACjB,CAAC,EACFxC,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfnB,KAAK;MACLoB,KAAK,EAAC,yEAAyE;MAC/Ec,aAAa,EAAC;IAAM,CACrB,CAAC,EACFzC,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBnB,KAAK;MACL2B,MAAM,EAAC,OAAO;MACdQ,YAAY,EAAC,SAAS;MACtBf,KAAK,EAAC;IAAiC,CACxC,CAAC,EACF3B,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,QAAQ;MAChBiB,uBAAuB,EAAC,MAAM;MAC9BhB,KAAK,EAAC,8BAA8B;MACpCO,MAAM,EAAC,OAAO;MACdN,MAAM,EAAC;IAAsI,CAC9I,CAAC,EACF5B,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE;IAAG,CAAE,CAAC,EACzB7B,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,QAAQ;MAChBe,aAAa,EAAC,MAAM;MACpBE,uBAAuB,EAAC,MAAM;MAC9BhB,KAAK,EAAC;IAAuB,CAC9B,CAAC;EAAA,CACS,CAAC,EAEdzB,KAAA,CAACJ,WAAW;IAACwB,IAAI,EAAC,SAAS;IAACC,WAAW,EAAC,qCAAqC;IAACO,MAAM,EAAC,KAAK;IAAAL,QAAA,GACxFzB,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,UAAU;MAClBK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVC,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B;IAAE,CACH,CAAC,EACFlD,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,OAAO;MACfK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B;IAAE,CACH,CAAC,EACFlD,IAAA,CAACG,gBAAgB;MACfuB,OAAO,EAAC,QAAQ;MAChBK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B;IAAE,CACH,CAAC,EACFlD,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC,EAEPzB,IAAA,CAACH,WAAW;MAACmC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEzCd,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,UAAU;MAClBK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVC,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACG;MAClC;IAAE,CACH,CAAC,EACFlD,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,OAAO;MACfK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACG;MAClC;IAAE,CACH,CAAC,EACFlD,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,QAAQ;MAChBK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACG,SAAS;QACzCG,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE;MAChB;IAAE,CACH,CAAC,EACFtD,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC,EAEPzB,IAAA,CAACH,WAAW;MAACmC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEzCd,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,UAAU;MAClBgB,YAAY,EAAC,SAAS;MACtBX,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVC,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACG;MAClC,CAAE;MACFK,gBAAgB,EAAE;QAChBC,SAAS,EAAE7D,MAAM,CAAC8D,IAAI;QACtBZ,MAAM,EAAE,EAAE;QACV/B,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFd,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,OAAO;MACfK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACG;MAClC,CAAE;MACFK,gBAAgB,EAAE;QAChBT,eAAe,EAAEnD,MAAM,CAAC8D,IAAI;QAC5BZ,MAAM,EAAE,EAAE;QACV/B,KAAK,EAAE,EAAE;QACTqC,YAAY,EAAE;MAChB;IAAE,CACH,CAAC,EAEFnD,IAAA,CAACG,gBAAgB;MACfI,KAAK;MACLmB,OAAO,EAAC,QAAQ;MAChBK,cAAc,EAAElB,oBAAqB;MACrC+B,eAAe,EAAE;QACf9B,KAAK,EAAE,EAAE;QACT+B,MAAM,EAAE,EAAE;QACVM,YAAY,EAAE,EAAE;QAChBL,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCC,WAAW,EAAEtD,MAAM,CAACoD,OAAO,CAACG;MAC9B,CAAE;MACFE,eAAe,EAAE;QACfN,eAAe,EAAEnD,MAAM,CAAC8D,IAAI;QAC5BJ,WAAW,EAAE,EAAE;QACfC,YAAY,EAAE;MAChB,CAAE;MACFC,gBAAgB,EAAE;QAChBT,eAAe,EAAEnD,MAAM,CAACoD,OAAO,CAACC,SAAS;QACzCH,MAAM,EAAE,EAAE;QACV/B,KAAK,EAAE,EAAE;QACTqC,YAAY,EAAE;MAChB,CAAE;MACFR,uBAAuB,EAAC;IAAM,CAC/B,CAAC,EAEF3C,IAAA,CAACP,IAAI;MAACwC,MAAM,EAAC,YAAY;MAACD,KAAK,EAAEf,aAAc;MAAAQ,QAAA,EAAC;IAEhD,CAAM,CAAC,EAEPzB,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE,EAAG;MAACG,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEnDd,IAAA,CAACR,IAAI;MAACwC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO,CAAE;MAAAW,QAAA,EAC7BzB,IAAA,CAACG,gBAAgB;QACfI,KAAK;QACLmB,OAAO,EAAC,OAAO;QACfC,KAAK,EAAC,8BAA8B;QACpC+B,cAAc,EAAE;UAAE7B,IAAI,EAAE,IAAI;UAAE8B,MAAM,EAAE;QAAO,CAAE;QAC/CzB,MAAM,EAAC,OAAO;QACd0B,UAAU,EAAE;UACVd,eAAe,EAAEnD,MAAM,CAACkE,KAAK;UAC7BC,KAAK,EAAEnE,MAAM,CAACoD,OAAO,CAACgB,UAAU;UAChCC,iBAAiB,EAAE;QACrB;MAAE,CACH;IAAC,CACE,CAAC,EAEPhE,IAAA,CAACH,WAAW;MAACgC,IAAI,EAAE,EAAG;MAACG,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO;IAAE,CAAE,CAAC,EAEnDd,IAAA,CAACR,IAAI;MAACwC,KAAK,EAAE;QAAElB,KAAK,EAAE;MAAO,CAAE;MAAAW,QAAA,EAC7BzB,IAAA,CAACG,gBAAgB;QACfI,KAAK;QACLmB,OAAO,EAAC,OAAO;QACfe,aAAa,EAAC,MAAM;QACpBV,cAAc,EAAE;UAAEkC,OAAO,EAAE,EAAE;UAAEnB,eAAe,EAAEnD,MAAM,CAACkE;QAAM,CAAE;QAC/DlC,KAAK,EAAC,gCAAgC;QACtCO,MAAM,EAAC,OAAO;QACd0B,UAAU,EAAE;UAAEE,KAAK,EAAEnE,MAAM,CAACoD,OAAO,CAACgB;QAAW;MAAE,CAClD;IAAC,CACE,CAAC;EAAA,CACI,CAAC;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}