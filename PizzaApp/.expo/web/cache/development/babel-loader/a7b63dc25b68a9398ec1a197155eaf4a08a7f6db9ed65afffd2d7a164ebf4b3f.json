{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"maxWidth\", \"maxHeight\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useLayoutEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAutoImage(remoteUri, dimensions) {\n  var _useState = useState([0, 0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    _useState2$ = _slicedToArray(_useState2[0], 2),\n    remoteWidth = _useState2$[0],\n    remoteHeight = _useState2$[1],\n    setRemoteImageDimensions = _useState2[1];\n  var remoteAspectRatio = remoteWidth / remoteHeight;\n  var _ref = dimensions != null ? dimensions : [],\n    _ref2 = _slicedToArray(_ref, 2),\n    maxWidth = _ref2[0],\n    maxHeight = _ref2[1];\n  useLayoutEffect(function () {\n    if (!remoteUri) return;\n    Image.getSize(remoteUri, function (w, h) {\n      return setRemoteImageDimensions([w, h]);\n    });\n  }, [remoteUri]);\n  if (Number.isNaN(remoteAspectRatio)) return [0, 0];\n  if (maxWidth && maxHeight) {\n    var aspectRatio = Math.min(maxWidth / remoteWidth, maxHeight / remoteHeight);\n    return [remoteWidth * aspectRatio, remoteHeight * aspectRatio];\n  } else if (maxWidth) {\n    return [maxWidth, maxWidth / remoteAspectRatio];\n  } else if (maxHeight) {\n    return [maxHeight * remoteAspectRatio, maxHeight];\n  } else {\n    return [remoteWidth, remoteHeight];\n  }\n}\nexport function AutoImage(props) {\n  var _ref3;\n  var maxWidth = props.maxWidth,\n    maxHeight = props.maxHeight,\n    ImageProps = _objectWithoutProperties(props, _excluded);\n  var source = props.source;\n  var _useAutoImage = useAutoImage(Platform.select({\n      web: (_ref3 = source == null ? void 0 : source.uri) != null ? _ref3 : source,\n      default: source == null ? void 0 : source.uri\n    }), [maxWidth, maxHeight]),\n    _useAutoImage2 = _slicedToArray(_useAutoImage, 2),\n    width = _useAutoImage2[0],\n    height = _useAutoImage2[1];\n  return _jsx(Image, _objectSpread(_objectSpread({}, ImageProps), {}, {\n    style: [{\n      width: width,\n      height: height\n    }, props.style]\n  }));\n}","map":{"version":3,"names":["React","useLayoutEffect","useState","Image","Platform","jsx","_jsx","useAutoImage","remoteUri","dimensions","_useState","_useState2","_slicedToArray","_useState2$","remoteWidth","remoteHeight","setRemoteImageDimensions","remoteAspectRatio","_ref","_ref2","maxWidth","maxHeight","getSize","w","h","Number","isNaN","aspectRatio","Math","min","AutoImage","props","_ref3","ImageProps","_objectWithoutProperties","_excluded","source","_useAutoImage","select","web","uri","default","_useAutoImage2","width","height","_objectSpread","style"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/AutoImage.tsx"],"sourcesContent":["import React, { useLayoutEffect, useState } from \"react\"\nimport { Image, ImageProps, ImageURISource, Platform } from \"react-native\"\n\n// TODO: document new props\nexport interface AutoImageProps extends ImageProps {\n  /**\n   * How wide should the image be?\n   */\n  maxWidth?: number\n  /**\n   * How tall should the image be?\n   */\n  maxHeight?: number\n}\n\n/**\n * A hook that will return the scaled dimensions of an image based on the\n * provided dimensions' aspect ratio. If no desired dimensions are provided,\n * it will return the original dimensions of the remote image.\n *\n * How is this different from `resizeMode: 'contain'`? Firstly, you can\n * specify only one side's size (not both). Secondly, the image will scale to fit\n * the desired dimensions instead of just being contained within its image-container.\n *\n */\nexport function useAutoImage(\n  remoteUri: string,\n  dimensions?: [maxWidth: number, maxHeight: number],\n): [width: number, height: number] {\n  const [[remoteWidth, remoteHeight], setRemoteImageDimensions] = useState([0, 0])\n  const remoteAspectRatio = remoteWidth / remoteHeight\n  const [maxWidth, maxHeight] = dimensions ?? []\n\n  useLayoutEffect(() => {\n    if (!remoteUri) return\n\n    Image.getSize(remoteUri, (w, h) => setRemoteImageDimensions([w, h]))\n  }, [remoteUri])\n\n  if (Number.isNaN(remoteAspectRatio)) return [0, 0]\n\n  if (maxWidth && maxHeight) {\n    const aspectRatio = Math.min(maxWidth / remoteWidth, maxHeight / remoteHeight)\n    return [remoteWidth * aspectRatio, remoteHeight * aspectRatio]\n  } else if (maxWidth) {\n    return [maxWidth, maxWidth / remoteAspectRatio]\n  } else if (maxHeight) {\n    return [maxHeight * remoteAspectRatio, maxHeight]\n  } else {\n    return [remoteWidth, remoteHeight]\n  }\n}\n\n/**\n * An Image component that automatically sizes a remote or data-uri image.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-AutoImage.md)\n */\nexport function AutoImage(props: AutoImageProps) {\n  const { maxWidth, maxHeight, ...ImageProps } = props\n  const source = props.source as ImageURISource\n\n  const [width, height] = useAutoImage(\n    Platform.select({\n      web: (source?.uri as string) ?? (source as string),\n      default: source?.uri as string,\n    }),\n    [maxWidth, maxHeight],\n  )\n\n  return <Image {...ImageProps} style={[{ width, height }, props.style]} />\n}\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAyBxD,OAAO,SAASC,YAAYA,CAC1BC,SAAiB,EACjBC,UAAkD,EACjB;EACjC,IAAAC,SAAA,GAAgER,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAAG,WAAA,GAAAD,cAAA,CAAAD,UAAA;IAAxEG,WAAW,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;IAAGG,wBAAwB,GAAAL,UAAA;EAC5D,IAAMM,iBAAiB,GAAGH,WAAW,GAAGC,YAAY;EACpD,IAAAG,IAAA,GAA8BT,UAAU,WAAVA,UAAU,GAAI,EAAE;IAAAU,KAAA,GAAAP,cAAA,CAAAM,IAAA;IAAvCE,QAAQ,GAAAD,KAAA;IAAEE,SAAS,GAAAF,KAAA;EAE1BlB,eAAe,CAAC,YAAM;IACpB,IAAI,CAACO,SAAS,EAAE;IAEhBL,KAAK,CAACmB,OAAO,CAACd,SAAS,EAAE,UAACe,CAAC,EAAEC,CAAC;MAAA,OAAKR,wBAAwB,CAAC,CAACO,CAAC,EAAEC,CAAC,CAAC,CAAC;IAAA,EAAC;EACtE,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;EAEf,IAAIiB,MAAM,CAACC,KAAK,CAACT,iBAAiB,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EAElD,IAAIG,QAAQ,IAAIC,SAAS,EAAE;IACzB,IAAMM,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACT,QAAQ,GAAGN,WAAW,EAAEO,SAAS,GAAGN,YAAY,CAAC;IAC9E,OAAO,CAACD,WAAW,GAAGa,WAAW,EAAEZ,YAAY,GAAGY,WAAW,CAAC;EAChE,CAAC,MAAM,IAAIP,QAAQ,EAAE;IACnB,OAAO,CAACA,QAAQ,EAAEA,QAAQ,GAAGH,iBAAiB,CAAC;EACjD,CAAC,MAAM,IAAII,SAAS,EAAE;IACpB,OAAO,CAACA,SAAS,GAAGJ,iBAAiB,EAAEI,SAAS,CAAC;EACnD,CAAC,MAAM;IACL,OAAO,CAACP,WAAW,EAAEC,YAAY,CAAC;EACpC;AACF;AAOA,OAAO,SAASe,SAASA,CAACC,KAAqB,EAAE;EAAA,IAAAC,KAAA;EAC/C,IAAQZ,QAAQ,GAA+BW,KAAK,CAA5CX,QAAQ;IAAEC,SAAS,GAAoBU,KAAK,CAAlCV,SAAS;IAAKY,UAAU,GAAAC,wBAAA,CAAKH,KAAK,EAAAI,SAAA;EACpD,IAAMC,MAAM,GAAGL,KAAK,CAACK,MAAwB;EAE7C,IAAAC,aAAA,GAAwB9B,YAAY,CAClCH,QAAQ,CAACkC,MAAM,CAAC;MACdC,GAAG,GAAAP,KAAA,GAAGI,MAAM,oBAANA,MAAM,CAAEI,GAAG,YAAAR,KAAA,GAAgBI,MAAiB;MAClDK,OAAO,EAAEL,MAAM,oBAANA,MAAM,CAAEI;IACnB,CAAC,CAAC,EACF,CAACpB,QAAQ,EAAEC,SAAS,CACtB,CAAC;IAAAqB,cAAA,GAAA9B,cAAA,CAAAyB,aAAA;IANMM,KAAK,GAAAD,cAAA;IAAEE,MAAM,GAAAF,cAAA;EAQpB,OAAOpC,IAAA,CAACH,KAAK,EAAA0C,aAAA,CAAAA,aAAA,KAAKZ,UAAU;IAAEa,KAAK,EAAE,CAAC;MAAEH,KAAK,EAALA,KAAK;MAAEC,MAAM,EAANA;IAAO,CAAC,EAAEb,KAAK,CAACe,KAAK;EAAE,EAAE,CAAC;AAC3E"},"metadata":{},"sourceType":"module","externalDependencies":[]}