{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Icon, Screen, Text, TextField } from \"../components\";\nimport { useStores } from \"../models\";\nimport { colors, spacing } from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var LoginScreen = observer(function LoginScreen(_props) {\n  var authPasswordInput = useRef();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    authPassword = _useState2[0],\n    setAuthPassword = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isAuthPasswordHidden = _useState4[0],\n    setIsAuthPasswordHidden = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isSubmitted = _useState6[0],\n    setIsSubmitted = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    attemptsCount = _useState8[0],\n    setAttemptsCount = _useState8[1];\n  var _useStores = useStores(),\n    _useStores$authentica = _useStores.authenticationStore,\n    authEmail = _useStores$authentica.authEmail,\n    setAuthEmail = _useStores$authentica.setAuthEmail,\n    setAuthToken = _useStores$authentica.setAuthToken,\n    validationError = _useStores$authentica.validationError;\n  useEffect(function () {\n    setAuthEmail(\"ignite@infinite.red\");\n    setAuthPassword(\"ign1teIsAwes0m3\");\n    return function () {\n      setAuthPassword(\"\");\n      setAuthEmail(\"\");\n    };\n  }, []);\n  var error = isSubmitted ? validationError : \"\";\n  function login() {\n    setIsSubmitted(true);\n    setAttemptsCount(attemptsCount + 1);\n    if (validationError) return;\n    setIsSubmitted(false);\n    setAuthPassword(\"\");\n    setAuthEmail(\"\");\n    setAuthToken(String(Date.now()));\n  }\n  var PasswordRightAccessory = useMemo(function () {\n    return function PasswordRightAccessory(props) {\n      return _jsx(Icon, {\n        icon: isAuthPasswordHidden ? \"view\" : \"hidden\",\n        color: colors.palette.neutral800,\n        containerStyle: props.style,\n        size: 20,\n        onPress: function onPress() {\n          return setIsAuthPasswordHidden(!isAuthPasswordHidden);\n        }\n      });\n    };\n  }, [isAuthPasswordHidden]);\n  return _jsxs(Screen, {\n    preset: \"auto\",\n    contentContainerStyle: $screenContentContainer,\n    safeAreaEdges: [\"top\", \"bottom\"],\n    children: [_jsx(Text, {\n      testID: \"login-heading\",\n      tx: \"loginScreen.signIn\",\n      preset: \"heading\",\n      style: $signIn\n    }), _jsx(Text, {\n      tx: \"loginScreen.enterDetails\",\n      preset: \"subheading\",\n      style: $enterDetails\n    }), attemptsCount > 2 && _jsx(Text, {\n      tx: \"loginScreen.hint\",\n      size: \"sm\",\n      weight: \"light\",\n      style: $hint\n    }), _jsx(TextField, {\n      value: authEmail,\n      onChangeText: setAuthEmail,\n      containerStyle: $textField,\n      autoCapitalize: \"none\",\n      autoComplete: \"email\",\n      autoCorrect: false,\n      keyboardType: \"email-address\",\n      labelTx: \"loginScreen.emailFieldLabel\",\n      placeholderTx: \"loginScreen.emailFieldPlaceholder\",\n      helper: error,\n      status: error ? \"error\" : undefined,\n      onSubmitEditing: function onSubmitEditing() {\n        var _authPasswordInput$cu;\n        return (_authPasswordInput$cu = authPasswordInput.current) == null ? void 0 : _authPasswordInput$cu.focus();\n      }\n    }), _jsx(TextField, {\n      ref: authPasswordInput,\n      value: authPassword,\n      onChangeText: setAuthPassword,\n      containerStyle: $textField,\n      autoCapitalize: \"none\",\n      autoComplete: \"password\",\n      autoCorrect: false,\n      secureTextEntry: isAuthPasswordHidden,\n      labelTx: \"loginScreen.passwordFieldLabel\",\n      placeholderTx: \"loginScreen.passwordFieldPlaceholder\",\n      onSubmitEditing: login,\n      RightAccessory: PasswordRightAccessory\n    }), _jsx(Button, {\n      testID: \"login-button\",\n      tx: \"loginScreen.tapToSignIn\",\n      style: $tapButton,\n      preset: \"reversed\",\n      onPress: login\n    })]\n  });\n});\nvar $screenContentContainer = {\n  paddingVertical: spacing.xxl,\n  paddingHorizontal: spacing.lg\n};\nvar $signIn = {\n  marginBottom: spacing.sm\n};\nvar $enterDetails = {\n  marginBottom: spacing.lg\n};\nvar $hint = {\n  color: colors.tint,\n  marginBottom: spacing.md\n};\nvar $textField = {\n  marginBottom: spacing.lg\n};\nvar $tapButton = {\n  marginTop: spacing.xs\n};","map":{"version":3,"names":["observer","React","useEffect","useMemo","useRef","useState","Button","Icon","Screen","Text","TextField","useStores","colors","spacing","jsx","_jsx","jsxs","_jsxs","LoginScreen","_props","authPasswordInput","_useState","_useState2","_slicedToArray","authPassword","setAuthPassword","_useState3","_useState4","isAuthPasswordHidden","setIsAuthPasswordHidden","_useState5","_useState6","isSubmitted","setIsSubmitted","_useState7","_useState8","attemptsCount","setAttemptsCount","_useStores","_useStores$authentica","authenticationStore","authEmail","setAuthEmail","setAuthToken","validationError","error","login","String","Date","now","PasswordRightAccessory","props","icon","color","palette","neutral800","containerStyle","style","size","onPress","preset","contentContainerStyle","$screenContentContainer","safeAreaEdges","children","testID","tx","$signIn","$enterDetails","weight","$hint","value","onChangeText","$textField","autoCapitalize","autoComplete","autoCorrect","keyboardType","labelTx","placeholderTx","helper","status","undefined","onSubmitEditing","_authPasswordInput$cu","current","focus","ref","secureTextEntry","RightAccessory","$tapButton","paddingVertical","xxl","paddingHorizontal","lg","marginBottom","sm","tint","md","marginTop","xs"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/LoginScreen.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\nimport React, { FC, useEffect, useMemo, useRef, useState } from \"react\"\nimport { TextInput, TextStyle, ViewStyle } from \"react-native\"\nimport { Button, Icon, Screen, Text, TextField, TextFieldAccessoryProps } from \"../components\"\nimport { useStores } from \"../models\"\nimport { AppStackScreenProps } from \"../navigators\"\nimport { colors, spacing } from \"../theme\"\n\ninterface LoginScreenProps extends AppStackScreenProps<\"Login\"> {}\n\nexport const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_props) {\n  const authPasswordInput = useRef<TextInput>()\n\n  const [authPassword, setAuthPassword] = useState(\"\")\n  const [isAuthPasswordHidden, setIsAuthPasswordHidden] = useState(true)\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [attemptsCount, setAttemptsCount] = useState(0)\n  const {\n    authenticationStore: { authEmail, setAuthEmail, setAuthToken, validationError },\n  } = useStores()\n\n  useEffect(() => {\n    // Here is where you could fetch credentials from keychain or storage\n    // and pre-fill the form fields.\n    setAuthEmail(\"ignite@infinite.red\")\n    setAuthPassword(\"ign1teIsAwes0m3\")\n\n    // Return a \"cleanup\" function that React will run when the component unmounts\n    return () => {\n      setAuthPassword(\"\")\n      setAuthEmail(\"\")\n    }\n  }, [])\n\n  const error = isSubmitted ? validationError : \"\"\n\n  function login() {\n    setIsSubmitted(true)\n    setAttemptsCount(attemptsCount + 1)\n\n    if (validationError) return\n\n    // Make a request to your server to get an authentication token.\n    // If successful, reset the fields and set the token.\n    setIsSubmitted(false)\n    setAuthPassword(\"\")\n    setAuthEmail(\"\")\n\n    // We'll mock this with a fake token.\n    setAuthToken(String(Date.now()))\n  }\n\n  const PasswordRightAccessory = useMemo(\n    () =>\n      function PasswordRightAccessory(props: TextFieldAccessoryProps) {\n        return (\n          <Icon\n            icon={isAuthPasswordHidden ? \"view\" : \"hidden\"}\n            color={colors.palette.neutral800}\n            containerStyle={props.style}\n            size={20}\n            onPress={() => setIsAuthPasswordHidden(!isAuthPasswordHidden)}\n          />\n        )\n      },\n    [isAuthPasswordHidden],\n  )\n\n  return (\n    <Screen\n      preset=\"auto\"\n      contentContainerStyle={$screenContentContainer}\n      safeAreaEdges={[\"top\", \"bottom\"]}\n    >\n      <Text testID=\"login-heading\" tx=\"loginScreen.signIn\" preset=\"heading\" style={$signIn} />\n      <Text tx=\"loginScreen.enterDetails\" preset=\"subheading\" style={$enterDetails} />\n      {attemptsCount > 2 && <Text tx=\"loginScreen.hint\" size=\"sm\" weight=\"light\" style={$hint} />}\n\n      <TextField\n        value={authEmail}\n        onChangeText={setAuthEmail}\n        containerStyle={$textField}\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        labelTx=\"loginScreen.emailFieldLabel\"\n        placeholderTx=\"loginScreen.emailFieldPlaceholder\"\n        helper={error}\n        status={error ? \"error\" : undefined}\n        onSubmitEditing={() => authPasswordInput.current?.focus()}\n      />\n\n      <TextField\n        ref={authPasswordInput}\n        value={authPassword}\n        onChangeText={setAuthPassword}\n        containerStyle={$textField}\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        secureTextEntry={isAuthPasswordHidden}\n        labelTx=\"loginScreen.passwordFieldLabel\"\n        placeholderTx=\"loginScreen.passwordFieldPlaceholder\"\n        onSubmitEditing={login}\n        RightAccessory={PasswordRightAccessory}\n      />\n\n      <Button\n        testID=\"login-button\"\n        tx=\"loginScreen.tapToSignIn\"\n        style={$tapButton}\n        preset=\"reversed\"\n        onPress={login}\n      />\n    </Screen>\n  )\n})\n\nconst $screenContentContainer: ViewStyle = {\n  paddingVertical: spacing.xxl,\n  paddingHorizontal: spacing.lg,\n}\n\nconst $signIn: TextStyle = {\n  marginBottom: spacing.sm,\n}\n\nconst $enterDetails: TextStyle = {\n  marginBottom: spacing.lg,\n}\n\nconst $hint: TextStyle = {\n  color: colors.tint,\n  marginBottom: spacing.md,\n}\n\nconst $textField: ViewStyle = {\n  marginBottom: spacing.lg,\n}\n\nconst $tapButton: ViewStyle = {\n  marginTop: spacing.xs,\n}\n\n// @demo remove-file\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}