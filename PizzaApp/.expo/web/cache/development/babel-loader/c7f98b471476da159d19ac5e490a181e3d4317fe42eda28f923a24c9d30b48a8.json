{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React from \"react\";\nimport * as Application from \"expo-application\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, ListItem, Screen, Text } from \"../components\";\nimport { colors, spacing } from \"../theme\";\nimport { isRTL } from \"../i18n\";\nimport { useStores } from \"../models\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction openLinkInBrowser(url) {\n  Linking.canOpenURL(url).then(function (canOpen) {\n    return canOpen && Linking.openURL(url);\n  });\n}\nexport var DemoDebugScreen = function DemoDebugScreen(_props) {\n  var _useStores = useStores(),\n    logout = _useStores.authenticationStore.logout;\n  var usingHermes = typeof HermesInternal === \"object\" && HermesInternal !== null;\n  var demoReactotron = React.useMemo(function () {\n    return _asyncToGenerator(function* () {\n      if (__DEV__) {\n        console.tron.display({\n          name: \"DISPLAY\",\n          value: {\n            appId: Application.applicationId,\n            appName: Application.applicationName,\n            appVersion: Application.nativeApplicationVersion,\n            appBuildVersion: Application.nativeBuildVersion,\n            hermesEnabled: usingHermes\n          },\n          important: true\n        });\n      }\n    });\n  }, []);\n  return _jsxs(Screen, {\n    preset: \"scroll\",\n    safeAreaEdges: [\"top\"],\n    contentContainerStyle: $container,\n    children: [_jsx(Text, {\n      style: $reportBugsLink,\n      tx: \"demoDebugScreen.reportBugs\",\n      onPress: function onPress() {\n        return openLinkInBrowser(\"https://github.com/infinitered/ignite/issues\");\n      }\n    }), _jsx(Text, {\n      style: $title,\n      preset: \"heading\",\n      tx: \"demoDebugScreen.title\"\n    }), _jsxs(View, {\n      style: $itemsContainer,\n      children: [_jsx(ListItem, {\n        LeftComponent: _jsxs(View, {\n          style: $item,\n          children: [_jsx(Text, {\n            preset: \"bold\",\n            children: \"App Id\"\n          }), _jsx(Text, {\n            children: Application.applicationId\n          })]\n        })\n      }), _jsx(ListItem, {\n        LeftComponent: _jsxs(View, {\n          style: $item,\n          children: [_jsx(Text, {\n            preset: \"bold\",\n            children: \"App Name\"\n          }), _jsx(Text, {\n            children: Application.applicationName\n          })]\n        })\n      }), _jsx(ListItem, {\n        LeftComponent: _jsxs(View, {\n          style: $item,\n          children: [_jsx(Text, {\n            preset: \"bold\",\n            children: \"App Version\"\n          }), _jsx(Text, {\n            children: Application.nativeApplicationVersion\n          })]\n        })\n      }), _jsx(ListItem, {\n        LeftComponent: _jsxs(View, {\n          style: $item,\n          children: [_jsx(Text, {\n            preset: \"bold\",\n            children: \"App Build Version\"\n          }), _jsx(Text, {\n            children: Application.nativeBuildVersion\n          })]\n        })\n      }), _jsx(ListItem, {\n        LeftComponent: _jsxs(View, {\n          style: $item,\n          children: [_jsx(Text, {\n            preset: \"bold\",\n            children: \"Hermes Enabled\"\n          }), _jsx(Text, {\n            children: String(usingHermes)\n          })]\n        })\n      })]\n    }), _jsxs(View, {\n      style: $buttonContainer,\n      children: [_jsx(Button, {\n        style: $button,\n        tx: \"demoDebugScreen.reactotron\",\n        onPress: demoReactotron\n      }), _jsx(Text, {\n        style: $hint,\n        tx: \"demoDebugScreen.\" + Platform.OS + \"ReactotronHint\"\n      })]\n    }), _jsx(View, {\n      style: $buttonContainer,\n      children: _jsx(Button, {\n        style: $button,\n        tx: \"common.logOut\",\n        onPress: logout\n      })\n    })]\n  });\n};\nvar $container = {\n  paddingTop: spacing.lg + spacing.xl,\n  paddingBottom: spacing.xxl,\n  paddingHorizontal: spacing.lg\n};\nvar $title = {\n  marginBottom: spacing.xxl\n};\nvar $reportBugsLink = {\n  color: colors.tint,\n  marginBottom: spacing.lg,\n  alignSelf: isRTL ? \"flex-start\" : \"flex-end\"\n};\nvar $item = {\n  marginBottom: spacing.md\n};\nvar $itemsContainer = {\n  marginBottom: spacing.xl\n};\nvar $button = {\n  marginBottom: spacing.xs\n};\nvar $buttonContainer = {\n  marginBottom: spacing.md\n};\nvar $hint = {\n  color: colors.palette.neutral600,\n  fontSize: 12,\n  lineHeight: 15,\n  paddingBottom: spacing.lg\n};","map":{"version":3,"names":["React","Application","Linking","Platform","View","Button","ListItem","Screen","Text","colors","spacing","isRTL","useStores","jsx","_jsx","jsxs","_jsxs","openLinkInBrowser","url","canOpenURL","then","canOpen","openURL","DemoDebugScreen","_props","_useStores","logout","authenticationStore","usingHermes","HermesInternal","demoReactotron","useMemo","_asyncToGenerator","__DEV__","console","tron","display","name","value","appId","applicationId","appName","applicationName","appVersion","nativeApplicationVersion","appBuildVersion","nativeBuildVersion","hermesEnabled","important","preset","safeAreaEdges","contentContainerStyle","$container","children","style","$reportBugsLink","tx","onPress","$title","$itemsContainer","LeftComponent","$item","String","$buttonContainer","$button","$hint","OS","paddingTop","lg","xl","paddingBottom","xxl","paddingHorizontal","marginBottom","color","tint","alignSelf","md","xs","palette","neutral600","fontSize","lineHeight"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoDebugScreen.tsx"],"sourcesContent":["import React, { FC } from \"react\"\nimport * as Application from \"expo-application\"\nimport { Linking, Platform, TextStyle, View, ViewStyle } from \"react-native\"\nimport { Button, ListItem, Screen, Text } from \"../components\"\nimport { DemoTabScreenProps } from \"../navigators/DemoNavigator\"\nimport { colors, spacing } from \"../theme\"\nimport { isRTL } from \"../i18n\"\nimport { useStores } from \"../models\"\n\nfunction openLinkInBrowser(url: string) {\n  Linking.canOpenURL(url).then((canOpen) => canOpen && Linking.openURL(url))\n}\n\nexport const DemoDebugScreen: FC<DemoTabScreenProps<\"DemoDebug\">> = function DemoDebugScreen(\n  _props,\n) {\n  const {\n    authenticationStore: { logout },\n  } = useStores()\n\n  const usingHermes = typeof HermesInternal === \"object\" && HermesInternal !== null\n\n  const demoReactotron = React.useMemo(\n    () => async () => {\n      if (__DEV__) {\n        console.tron.display({\n          name: \"DISPLAY\",\n          value: {\n            appId: Application.applicationId,\n            appName: Application.applicationName,\n            appVersion: Application.nativeApplicationVersion,\n            appBuildVersion: Application.nativeBuildVersion,\n            hermesEnabled: usingHermes,\n          },\n          important: true,\n        })\n      }\n    },\n    [],\n  )\n\n  return (\n    <Screen preset=\"scroll\" safeAreaEdges={[\"top\"]} contentContainerStyle={$container}>\n      <Text\n        style={$reportBugsLink}\n        tx=\"demoDebugScreen.reportBugs\"\n        onPress={() => openLinkInBrowser(\"https://github.com/infinitered/ignite/issues\")}\n      />\n      <Text style={$title} preset=\"heading\" tx=\"demoDebugScreen.title\" />\n      <View style={$itemsContainer}>\n        <ListItem\n          LeftComponent={\n            <View style={$item}>\n              <Text preset=\"bold\">App Id</Text>\n              <Text>{Application.applicationId}</Text>\n            </View>\n          }\n        />\n        <ListItem\n          LeftComponent={\n            <View style={$item}>\n              <Text preset=\"bold\">App Name</Text>\n              <Text>{Application.applicationName}</Text>\n            </View>\n          }\n        />\n        <ListItem\n          LeftComponent={\n            <View style={$item}>\n              <Text preset=\"bold\">App Version</Text>\n              <Text>{Application.nativeApplicationVersion}</Text>\n            </View>\n          }\n        />\n        <ListItem\n          LeftComponent={\n            <View style={$item}>\n              <Text preset=\"bold\">App Build Version</Text>\n              <Text>{Application.nativeBuildVersion}</Text>\n            </View>\n          }\n        />\n        <ListItem\n          LeftComponent={\n            <View style={$item}>\n              <Text preset=\"bold\">Hermes Enabled</Text>\n              <Text>{String(usingHermes)}</Text>\n            </View>\n          }\n        />\n      </View>\n      <View style={$buttonContainer}>\n        <Button style={$button} tx=\"demoDebugScreen.reactotron\" onPress={demoReactotron} />\n        <Text style={$hint} tx={`demoDebugScreen.${Platform.OS}ReactotronHint` as const} />\n      </View>\n      <View style={$buttonContainer}>\n        <Button style={$button} tx=\"common.logOut\" onPress={logout} />\n      </View>\n    </Screen>\n  )\n}\n\nconst $container: ViewStyle = {\n  paddingTop: spacing.lg + spacing.xl,\n  paddingBottom: spacing.xxl,\n  paddingHorizontal: spacing.lg,\n}\n\nconst $title: TextStyle = {\n  marginBottom: spacing.xxl,\n}\n\nconst $reportBugsLink: TextStyle = {\n  color: colors.tint,\n  marginBottom: spacing.lg,\n  alignSelf: isRTL ? \"flex-start\" : \"flex-end\",\n}\n\nconst $item: ViewStyle = {\n  marginBottom: spacing.md,\n}\n\nconst $itemsContainer: ViewStyle = {\n  marginBottom: spacing.xl,\n}\n\nconst $button: ViewStyle = {\n  marginBottom: spacing.xs,\n}\n\nconst $buttonContainer: ViewStyle = {\n  marginBottom: spacing.md,\n}\n\nconst $hint: TextStyle = {\n  color: colors.palette.neutral600,\n  fontSize: 12,\n  lineHeight: 15,\n  paddingBottom: spacing.lg,\n}\n\n// @demo remove-file\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}