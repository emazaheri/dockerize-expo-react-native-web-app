{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { SpaceGrotesk_300Light as spaceGroteskLight, SpaceGrotesk_400Regular as spaceGroteskRegular, SpaceGrotesk_500Medium as spaceGroteskMedium, SpaceGrotesk_600SemiBold as spaceGroteskSemiBold, SpaceGrotesk_700Bold as spaceGroteskBold } from \"@expo-google-fonts/space-grotesk\";\nexport var customFontsToLoad = {\n  spaceGroteskLight: spaceGroteskLight,\n  spaceGroteskRegular: spaceGroteskRegular,\n  spaceGroteskMedium: spaceGroteskMedium,\n  spaceGroteskSemiBold: spaceGroteskSemiBold,\n  spaceGroteskBold: spaceGroteskBold\n};\nvar fonts = {\n  spaceGrotesk: {\n    light: \"spaceGroteskLight\",\n    normal: \"spaceGroteskRegular\",\n    medium: \"spaceGroteskMedium\",\n    semiBold: \"spaceGroteskSemiBold\",\n    bold: \"spaceGroteskBold\"\n  },\n  helveticaNeue: {\n    thin: \"HelveticaNeue-Thin\",\n    light: \"HelveticaNeue-Light\",\n    normal: \"Helvetica Neue\",\n    medium: \"HelveticaNeue-Medium\"\n  },\n  courier: {\n    normal: \"Courier\"\n  },\n  sansSerif: {\n    thin: \"sans-serif-thin\",\n    light: \"sans-serif-light\",\n    normal: \"sans-serif\",\n    medium: \"sans-serif-medium\"\n  },\n  monospace: {\n    normal: \"monospace\"\n  }\n};\nexport var typography = {\n  fonts: fonts,\n  primary: fonts.spaceGrotesk,\n  secondary: Platform.select({\n    ios: fonts.helveticaNeue,\n    android: fonts.sansSerif\n  }),\n  code: Platform.select({\n    ios: fonts.courier,\n    android: fonts.monospace\n  })\n};","map":{"version":3,"names":["SpaceGrotesk_300Light","spaceGroteskLight","SpaceGrotesk_400Regular","spaceGroteskRegular","SpaceGrotesk_500Medium","spaceGroteskMedium","SpaceGrotesk_600SemiBold","spaceGroteskSemiBold","SpaceGrotesk_700Bold","spaceGroteskBold","customFontsToLoad","fonts","spaceGrotesk","light","normal","medium","semiBold","bold","helveticaNeue","thin","courier","sansSerif","monospace","typography","primary","secondary","Platform","select","ios","android","code"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/theme/typography.ts"],"sourcesContent":["// TODO: write documentation about fonts and typography along with guides on how to add custom fonts in own\n// markdown file and add links from here\n\nimport { Platform } from \"react-native\"\nimport {\n  SpaceGrotesk_300Light as spaceGroteskLight,\n  SpaceGrotesk_400Regular as spaceGroteskRegular,\n  SpaceGrotesk_500Medium as spaceGroteskMedium,\n  SpaceGrotesk_600SemiBold as spaceGroteskSemiBold,\n  SpaceGrotesk_700Bold as spaceGroteskBold,\n} from \"@expo-google-fonts/space-grotesk\"\n\nexport const customFontsToLoad = {\n  spaceGroteskLight,\n  spaceGroteskRegular,\n  spaceGroteskMedium,\n  spaceGroteskSemiBold,\n  spaceGroteskBold,\n}\n\nconst fonts = {\n  spaceGrotesk: {\n    // Cross-platform Google font.\n    light: \"spaceGroteskLight\",\n    normal: \"spaceGroteskRegular\",\n    medium: \"spaceGroteskMedium\",\n    semiBold: \"spaceGroteskSemiBold\",\n    bold: \"spaceGroteskBold\",\n  },\n  helveticaNeue: {\n    // iOS only font.\n    thin: \"HelveticaNeue-Thin\",\n    light: \"HelveticaNeue-Light\",\n    normal: \"Helvetica Neue\",\n    medium: \"HelveticaNeue-Medium\",\n  },\n  courier: {\n    // iOS only font.\n    normal: \"Courier\",\n  },\n  sansSerif: {\n    // Android only font.\n    thin: \"sans-serif-thin\",\n    light: \"sans-serif-light\",\n    normal: \"sans-serif\",\n    medium: \"sans-serif-medium\",\n  },\n  monospace: {\n    // Android only font.\n    normal: \"monospace\",\n  },\n}\n\nexport const typography = {\n  /**\n   * The fonts are available to use, but prefer using the semantic name.\n   */\n  fonts,\n  /**\n   * The primary font. Used in most places.\n   */\n  primary: fonts.spaceGrotesk,\n  /**\n   * An alternate font used for perhaps titles and stuff.\n   */\n  secondary: Platform.select({ ios: fonts.helveticaNeue, android: fonts.sansSerif }),\n  /**\n   * Lets get fancy with a monospace font!\n   */\n  code: Platform.select({ ios: fonts.courier, android: fonts.monospace }),\n}\n"],"mappings":";AAIA,SACEA,qBAAqB,IAAIC,iBAAiB,EAC1CC,uBAAuB,IAAIC,mBAAmB,EAC9CC,sBAAsB,IAAIC,kBAAkB,EAC5CC,wBAAwB,IAAIC,oBAAoB,EAChDC,oBAAoB,IAAIC,gBAAgB,QACnC,kCAAkC;AAEzC,OAAO,IAAMC,iBAAiB,GAAG;EAC/BT,iBAAiB,EAAjBA,iBAAiB;EACjBE,mBAAmB,EAAnBA,mBAAmB;EACnBE,kBAAkB,EAAlBA,kBAAkB;EAClBE,oBAAoB,EAApBA,oBAAoB;EACpBE,gBAAgB,EAAhBA;AACF,CAAC;AAED,IAAME,KAAK,GAAG;EACZC,YAAY,EAAE;IAEZC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,qBAAqB;IAC7BC,MAAM,EAAE,oBAAoB;IAC5BC,QAAQ,EAAE,sBAAsB;IAChCC,IAAI,EAAE;EACR,CAAC;EACDC,aAAa,EAAE;IAEbC,IAAI,EAAE,oBAAoB;IAC1BN,KAAK,EAAE,qBAAqB;IAC5BC,MAAM,EAAE,gBAAgB;IACxBC,MAAM,EAAE;EACV,CAAC;EACDK,OAAO,EAAE;IAEPN,MAAM,EAAE;EACV,CAAC;EACDO,SAAS,EAAE;IAETF,IAAI,EAAE,iBAAiB;IACvBN,KAAK,EAAE,kBAAkB;IACzBC,MAAM,EAAE,YAAY;IACpBC,MAAM,EAAE;EACV,CAAC;EACDO,SAAS,EAAE;IAETR,MAAM,EAAE;EACV;AACF,CAAC;AAED,OAAO,IAAMS,UAAU,GAAG;EAIxBZ,KAAK,EAALA,KAAK;EAILa,OAAO,EAAEb,KAAK,CAACC,YAAY;EAI3Ba,SAAS,EAAEC,QAAQ,CAACC,MAAM,CAAC;IAAEC,GAAG,EAAEjB,KAAK,CAACO,aAAa;IAAEW,OAAO,EAAElB,KAAK,CAACU;EAAU,CAAC,CAAC;EAIlFS,IAAI,EAAEJ,QAAQ,CAACC,MAAM,CAAC;IAAEC,GAAG,EAAEjB,KAAK,CAACS,OAAO;IAAES,OAAO,EAAElB,KAAK,CAACW;EAAU,CAAC;AACxE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}