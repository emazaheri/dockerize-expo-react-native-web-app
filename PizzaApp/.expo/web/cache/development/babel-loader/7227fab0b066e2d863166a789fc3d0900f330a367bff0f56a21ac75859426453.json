{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useMemo } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle, useSharedValue, withSpring } from \"react-native-reanimated\";\nimport { Button, Card, EmptyState, Icon, Screen, Text, Toggle } from \"../components\";\nimport { isRTL, translate } from \"../i18n\";\nimport { useStores } from \"../models\";\nimport { colors, spacing } from \"../theme\";\nimport { delay } from \"../utils/delay\";\nimport { openLinkInBrowser } from \"../utils/openLinkInBrowser\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ICON_SIZE = 14;\nvar rnrImage1 = require(\"../../assets/images/rnr-image-1.png\");\nvar rnrImage2 = require(\"../../assets/images/rnr-image-2.png\");\nvar rnrImage3 = require(\"../../assets/images/rnr-image-3.png\");\nvar rnrImages = [rnrImage1, rnrImage2, rnrImage3];\nexport var DemoPodcastListScreen = observer(function DemoPodcastListScreen(_props) {\n  var _useStores = useStores(),\n    episodeStore = _useStores.episodeStore;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    refreshing = _React$useState2[0],\n    setRefreshing = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    isLoading = _React$useState4[0],\n    setIsLoading = _React$useState4[1];\n  useEffect(function () {\n    ;\n    (function () {\n      var _load = _asyncToGenerator(function* () {\n        setIsLoading(true);\n        yield episodeStore.fetchEpisodes();\n        setIsLoading(false);\n      });\n      function load() {\n        return _load.apply(this, arguments);\n      }\n      return load;\n    })()();\n  }, [episodeStore]);\n  function manualRefresh() {\n    return _manualRefresh.apply(this, arguments);\n  }\n  function _manualRefresh() {\n    _manualRefresh = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield Promise.all([episodeStore.fetchEpisodes(), delay(750)]);\n      setRefreshing(false);\n    });\n    return _manualRefresh.apply(this, arguments);\n  }\n  return _jsx(Screen, {\n    preset: \"fixed\",\n    safeAreaEdges: [\"top\"],\n    contentContainerStyle: $screenContentContainer,\n    children: _jsx(FlatList, {\n      data: episodeStore.episodesForList,\n      extraData: episodeStore.favorites.length + episodeStore.episodes.length,\n      contentContainerStyle: $flatListContentContainer,\n      refreshing: refreshing,\n      onRefresh: manualRefresh,\n      ListEmptyComponent: isLoading ? _jsx(ActivityIndicator, {}) : _jsx(EmptyState, {\n        preset: \"generic\",\n        style: $emptyState,\n        headingTx: episodeStore.favoritesOnly ? \"demoPodcastListScreen.noFavoritesEmptyState.heading\" : undefined,\n        contentTx: episodeStore.favoritesOnly ? \"demoPodcastListScreen.noFavoritesEmptyState.content\" : undefined,\n        button: episodeStore.favoritesOnly ? null : undefined,\n        buttonOnPress: manualRefresh,\n        imageStyle: $emptyStateImage,\n        ImageProps: {\n          resizeMode: \"contain\"\n        }\n      }),\n      ListHeaderComponent: _jsxs(View, {\n        style: $heading,\n        children: [_jsx(Text, {\n          preset: \"heading\",\n          tx: \"demoPodcastListScreen.title\"\n        }), (episodeStore.favoritesOnly || episodeStore.episodesForList.length > 0) && _jsx(View, {\n          style: $toggle,\n          children: _jsx(Toggle, {\n            value: episodeStore.favoritesOnly,\n            onValueChange: function onValueChange() {\n              return episodeStore.setProp(\"favoritesOnly\", !episodeStore.favoritesOnly);\n            },\n            variant: \"switch\",\n            labelTx: \"demoPodcastListScreen.onlyFavorites\",\n            labelPosition: \"left\",\n            labelStyle: $labelStyle,\n            accessibilityLabel: translate(\"demoPodcastListScreen.accessibility.switch\")\n          })\n        })]\n      }),\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(EpisodeCard, {\n          episode: item,\n          isFavorite: episodeStore.hasFavorite(item),\n          onPressFavorite: function onPressFavorite() {\n            return episodeStore.toggleFavorite(item);\n          }\n        }, item.guid);\n      }\n    })\n  });\n});\nvar EpisodeCard = observer(function EpisodeCard(_ref2) {\n  var episode = _ref2.episode,\n    isFavorite = _ref2.isFavorite,\n    onPressFavorite = _ref2.onPressFavorite;\n  var liked = useSharedValue(isFavorite ? 1 : 0);\n  var imageUri = useMemo(function () {\n    return rnrImages[Math.floor(Math.random() * rnrImages.length)];\n  }, []);\n  var animatedLikeButtonStyles = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: [{\n          scale: interpolate(liked.value, [0, 1], [1, 0], Extrapolate.EXTEND)\n        }],\n        opacity: interpolate(liked.value, [0, 1], [1, 0], Extrapolate.CLAMP)\n      };\n    };\n    _f._closure = {\n      interpolate: interpolate,\n      liked: liked,\n      Extrapolate: {\n        EXTEND: Extrapolate.EXTEND,\n        CLAMP: Extrapolate.CLAMP\n      }\n    };\n    _f.asString = \"function _f(){const{interpolate,liked,Extrapolate}=jsThis._closure;{return{transform:[{scale:interpolate(liked.value,[0,1],[1,0],Extrapolate.EXTEND)}],opacity:interpolate(liked.value,[0,1],[1,0],Extrapolate.CLAMP)};}}\";\n    _f.__workletHash = 9107074315375;\n    _f.__location = \"/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoPodcastListScreen.tsx (149:52)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var animatedUnlikeButtonStyles = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        transform: [{\n          scale: liked.value\n        }],\n        opacity: liked.value\n      };\n    };\n    _f._closure = {\n      liked: liked\n    };\n    _f.asString = \"function _f(){const{liked}=jsThis._closure;{return{transform:[{scale:liked.value}],opacity:liked.value};}}\";\n    _f.__workletHash = 10115220395012;\n    _f.__location = \"/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoPodcastListScreen.tsx (161:54)\";\n    _f.__optimalization = 3;\n    return _f;\n  }());\n  var accessibilityHintProps = useMemo(function () {\n    return Platform.select({\n      ios: {\n        accessibilityLabel: episode.title,\n        accessibilityHint: translate(\"demoPodcastListScreen.accessibility.cardHint\", {\n          action: isFavorite ? \"unfavorite\" : \"favorite\"\n        })\n      },\n      android: {\n        accessibilityLabel: episode.title,\n        accessibilityActions: [{\n          name: \"longpress\",\n          label: translate(\"demoPodcastListScreen.accessibility.favoriteAction\")\n        }],\n        onAccessibilityAction: function onAccessibilityAction(_ref3) {\n          var nativeEvent = _ref3.nativeEvent;\n          if (nativeEvent.actionName === \"longpress\") {\n            handlePressFavorite();\n          }\n        }\n      }\n    });\n  }, [episode, isFavorite]);\n  var handlePressFavorite = function handlePressFavorite() {\n    onPressFavorite();\n    liked.value = withSpring(liked.value ? 0 : 1);\n  };\n  var handlePressCard = function handlePressCard() {\n    openLinkInBrowser(episode.enclosure.link);\n  };\n  var ButtonLeftAccessory = useMemo(function () {\n    return function ButtonLeftAccessory() {\n      return _jsxs(View, {\n        children: [_jsx(Animated.View, {\n          style: [$iconContainer, StyleSheet.absoluteFill, animatedLikeButtonStyles],\n          children: _jsx(Icon, {\n            icon: \"heart\",\n            size: ICON_SIZE,\n            color: colors.palette.neutral800\n          })\n        }), _jsx(Animated.View, {\n          style: [$iconContainer, animatedUnlikeButtonStyles],\n          children: _jsx(Icon, {\n            icon: \"heart\",\n            size: ICON_SIZE,\n            color: colors.palette.primary400\n          })\n        })]\n      });\n    };\n  }, []);\n  return _jsx(Card, _objectSpread(_objectSpread({\n    style: $item,\n    verticalAlignment: \"force-footer-bottom\",\n    onPress: handlePressCard,\n    onLongPress: handlePressFavorite,\n    HeadingComponent: _jsxs(View, {\n      style: $metadata,\n      children: [_jsx(Text, {\n        style: $metadataText,\n        size: \"xxs\",\n        accessibilityLabel: episode.datePublished.accessibilityLabel,\n        children: episode.datePublished.textLabel\n      }), _jsx(Text, {\n        style: $metadataText,\n        size: \"xxs\",\n        accessibilityLabel: episode.duration.accessibilityLabel,\n        children: episode.duration.textLabel\n      })]\n    }),\n    content: episode.parsedTitleAndSubtitle.title + \" - \" + episode.parsedTitleAndSubtitle.subtitle\n  }, accessibilityHintProps), {}, {\n    RightComponent: _jsx(Image, {\n      source: imageUri,\n      style: $itemThumbnail\n    }),\n    FooterComponent: _jsx(Button, {\n      onPress: handlePressFavorite,\n      onLongPress: handlePressFavorite,\n      style: [$favoriteButton, isFavorite && $unFavoriteButton],\n      accessibilityLabel: isFavorite ? translate(\"demoPodcastListScreen.accessibility.unfavoriteIcon\") : translate(\"demoPodcastListScreen.accessibility.favoriteIcon\"),\n      LeftAccessory: ButtonLeftAccessory,\n      children: _jsx(Text, {\n        size: \"xxs\",\n        accessibilityLabel: episode.duration.accessibilityLabel,\n        weight: \"medium\",\n        text: isFavorite ? translate(\"demoPodcastListScreen.unfavoriteButton\") : translate(\"demoPodcastListScreen.favoriteButton\")\n      })\n    })\n  }));\n});\nvar $screenContentContainer = {\n  flex: 1\n};\nvar $flatListContentContainer = {\n  paddingHorizontal: spacing.lg,\n  paddingTop: spacing.lg + spacing.xl,\n  paddingBottom: spacing.lg\n};\nvar $heading = {\n  marginBottom: spacing.md\n};\nvar $item = {\n  padding: spacing.md,\n  marginTop: spacing.md,\n  minHeight: 120\n};\nvar $itemThumbnail = {\n  marginTop: spacing.sm,\n  borderRadius: 50,\n  alignSelf: \"flex-start\"\n};\nvar $toggle = {\n  marginTop: spacing.md\n};\nvar $labelStyle = {\n  textAlign: \"left\"\n};\nvar $iconContainer = {\n  height: ICON_SIZE,\n  width: ICON_SIZE,\n  flexDirection: \"row\",\n  marginEnd: spacing.sm\n};\nvar $metadata = {\n  color: colors.textDim,\n  marginTop: spacing.xs,\n  flexDirection: \"row\"\n};\nvar $metadataText = {\n  color: colors.textDim,\n  marginEnd: spacing.md,\n  marginBottom: spacing.xs\n};\nvar $favoriteButton = {\n  borderRadius: 17,\n  marginTop: spacing.md,\n  justifyContent: \"flex-start\",\n  backgroundColor: colors.palette.neutral300,\n  borderColor: colors.palette.neutral300,\n  paddingHorizontal: spacing.md,\n  paddingTop: spacing.xxxs,\n  paddingBottom: 0,\n  minHeight: 32,\n  alignSelf: \"flex-start\"\n};\nvar $unFavoriteButton = {\n  borderColor: colors.palette.primary100,\n  backgroundColor: colors.palette.primary100\n};\nvar $emptyState = {\n  marginTop: spacing.xxl\n};\nvar $emptyStateImage = {\n  transform: [{\n    scaleX: isRTL ? -1 : 1\n  }]\n};","map":{"version":3,"names":["observer","React","useEffect","useMemo","ActivityIndicator","FlatList","Image","Platform","StyleSheet","View","Animated","Extrapolate","interpolate","useAnimatedStyle","useSharedValue","withSpring","Button","Card","EmptyState","Icon","Screen","Text","Toggle","isRTL","translate","useStores","colors","spacing","delay","openLinkInBrowser","jsx","_jsx","jsxs","_jsxs","ICON_SIZE","rnrImage1","require","rnrImage2","rnrImage3","rnrImages","DemoPodcastListScreen","_props","_useStores","episodeStore","_React$useState","useState","_React$useState2","_slicedToArray","refreshing","setRefreshing","_React$useState3","_React$useState4","isLoading","setIsLoading","_load","_asyncToGenerator","fetchEpisodes","load","apply","arguments","manualRefresh","_manualRefresh","Promise","all","preset","safeAreaEdges","contentContainerStyle","$screenContentContainer","children","data","episodesForList","extraData","favorites","length","episodes","$flatListContentContainer","onRefresh","ListEmptyComponent","style","$emptyState","headingTx","favoritesOnly","undefined","contentTx","button","buttonOnPress","imageStyle","$emptyStateImage","ImageProps","resizeMode","ListHeaderComponent","$heading","tx","$toggle","value","onValueChange","setProp","variant","labelTx","labelPosition","labelStyle","$labelStyle","accessibilityLabel","renderItem","_ref","item","EpisodeCard","episode","isFavorite","hasFavorite","onPressFavorite","toggleFavorite","guid","_ref2","liked","imageUri","Math","floor","random","animatedLikeButtonStyles","_f","transform","scale","EXTEND","opacity","CLAMP","_closure","asString","__workletHash","__location","__optimalization","animatedUnlikeButtonStyles","accessibilityHintProps","select","ios","title","accessibilityHint","action","android","accessibilityActions","name","label","onAccessibilityAction","_ref3","nativeEvent","actionName","handlePressFavorite","handlePressCard","enclosure","link","ButtonLeftAccessory","$iconContainer","absoluteFill","icon","size","color","palette","neutral800","primary400","_objectSpread","$item","verticalAlignment","onPress","onLongPress","HeadingComponent","$metadata","$metadataText","datePublished","textLabel","duration","content","parsedTitleAndSubtitle","subtitle","RightComponent","source","$itemThumbnail","FooterComponent","$favoriteButton","$unFavoriteButton","LeftAccessory","weight","text","flex","paddingHorizontal","lg","paddingTop","xl","paddingBottom","marginBottom","md","padding","marginTop","minHeight","sm","borderRadius","alignSelf","textAlign","height","width","flexDirection","marginEnd","textDim","xs","justifyContent","backgroundColor","neutral300","borderColor","xxxs","primary100","xxl","scaleX"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoPodcastListScreen.tsx"],"sourcesContent":["// Interested in migrating from FlatList to FlashList? Check out the recipe in our Ignite Cookbook\n// https://ignitecookbook.com/docs/recipes/MigratingToFlashList\nimport { observer } from \"mobx-react-lite\"\nimport React, { FC, useEffect, useMemo } from \"react\"\nimport {\n  AccessibilityProps,\n  ActivityIndicator,\n  FlatList,\n  Image,\n  ImageStyle,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from \"react-native\"\nimport Animated, {\n  Extrapolate,\n  interpolate,\n  useAnimatedStyle,\n  useSharedValue,\n  withSpring,\n} from \"react-native-reanimated\"\nimport { Button, Card, EmptyState, Icon, Screen, Text, Toggle } from \"../components\"\nimport { isRTL, translate } from \"../i18n\"\nimport { useStores } from \"../models\"\nimport { Episode } from \"../models/Episode\"\nimport { DemoTabScreenProps } from \"../navigators/DemoNavigator\"\nimport { colors, spacing } from \"../theme\"\nimport { delay } from \"../utils/delay\"\nimport { openLinkInBrowser } from \"../utils/openLinkInBrowser\"\n\nconst ICON_SIZE = 14\n\nconst rnrImage1 = require(\"../../assets/images/rnr-image-1.png\")\nconst rnrImage2 = require(\"../../assets/images/rnr-image-2.png\")\nconst rnrImage3 = require(\"../../assets/images/rnr-image-3.png\")\nconst rnrImages = [rnrImage1, rnrImage2, rnrImage3]\n\nexport const DemoPodcastListScreen: FC<DemoTabScreenProps<\"DemoPodcastList\">> = observer(\n  function DemoPodcastListScreen(_props) {\n    const { episodeStore } = useStores()\n\n    const [refreshing, setRefreshing] = React.useState(false)\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    // initially, kick off a background refresh without the refreshing UI\n    useEffect(() => {\n      ;(async function load() {\n        setIsLoading(true)\n        await episodeStore.fetchEpisodes()\n        setIsLoading(false)\n      })()\n    }, [episodeStore])\n\n    // simulate a longer refresh, if the refresh is too fast for UX\n    async function manualRefresh() {\n      setRefreshing(true)\n      await Promise.all([episodeStore.fetchEpisodes(), delay(750)])\n      setRefreshing(false)\n    }\n\n    return (\n      <Screen\n        preset=\"fixed\"\n        safeAreaEdges={[\"top\"]}\n        contentContainerStyle={$screenContentContainer}\n      >\n        <FlatList<Episode>\n          data={episodeStore.episodesForList}\n          extraData={episodeStore.favorites.length + episodeStore.episodes.length}\n          contentContainerStyle={$flatListContentContainer}\n          refreshing={refreshing}\n          onRefresh={manualRefresh}\n          ListEmptyComponent={\n            isLoading ? (\n              <ActivityIndicator />\n            ) : (\n              <EmptyState\n                preset=\"generic\"\n                style={$emptyState}\n                headingTx={\n                  episodeStore.favoritesOnly\n                    ? \"demoPodcastListScreen.noFavoritesEmptyState.heading\"\n                    : undefined\n                }\n                contentTx={\n                  episodeStore.favoritesOnly\n                    ? \"demoPodcastListScreen.noFavoritesEmptyState.content\"\n                    : undefined\n                }\n                button={episodeStore.favoritesOnly ? null : undefined}\n                buttonOnPress={manualRefresh}\n                imageStyle={$emptyStateImage}\n                ImageProps={{ resizeMode: \"contain\" }}\n              />\n            )\n          }\n          ListHeaderComponent={\n            <View style={$heading}>\n              <Text preset=\"heading\" tx=\"demoPodcastListScreen.title\" />\n              {(episodeStore.favoritesOnly || episodeStore.episodesForList.length > 0) && (\n                <View style={$toggle}>\n                  <Toggle\n                    value={episodeStore.favoritesOnly}\n                    onValueChange={() =>\n                      episodeStore.setProp(\"favoritesOnly\", !episodeStore.favoritesOnly)\n                    }\n                    variant=\"switch\"\n                    labelTx=\"demoPodcastListScreen.onlyFavorites\"\n                    labelPosition=\"left\"\n                    labelStyle={$labelStyle}\n                    accessibilityLabel={translate(\"demoPodcastListScreen.accessibility.switch\")}\n                  />\n                </View>\n              )}\n            </View>\n          }\n          renderItem={({ item }) => (\n            <EpisodeCard\n              key={item.guid}\n              episode={item}\n              isFavorite={episodeStore.hasFavorite(item)}\n              onPressFavorite={() => episodeStore.toggleFavorite(item)}\n            />\n          )}\n        />\n      </Screen>\n    )\n  },\n)\n\nconst EpisodeCard = observer(function EpisodeCard({\n  episode,\n  isFavorite,\n  onPressFavorite,\n}: {\n  episode: Episode\n  onPressFavorite: () => void\n  isFavorite: boolean\n}) {\n  const liked = useSharedValue(isFavorite ? 1 : 0)\n\n  const imageUri = useMemo(() => {\n    return rnrImages[Math.floor(Math.random() * rnrImages.length)]\n  }, [])\n\n  // Grey heart\n  const animatedLikeButtonStyles = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          scale: interpolate(liked.value, [0, 1], [1, 0], Extrapolate.EXTEND),\n        },\n      ],\n      opacity: interpolate(liked.value, [0, 1], [1, 0], Extrapolate.CLAMP),\n    }\n  })\n\n  // Pink heart\n  const animatedUnlikeButtonStyles = useAnimatedStyle(() => {\n    return {\n      transform: [\n        {\n          scale: liked.value,\n        },\n      ],\n      opacity: liked.value,\n    }\n  })\n\n  /**\n   * Android has a \"longpress\" accessibility action. iOS does not, so we just have to use a hint.\n   * @see https://reactnative.dev/docs/accessibility#accessibilityactions\n   */\n  const accessibilityHintProps = useMemo(\n    () =>\n      Platform.select<AccessibilityProps>({\n        ios: {\n          accessibilityLabel: episode.title,\n          accessibilityHint: translate(\"demoPodcastListScreen.accessibility.cardHint\", {\n            action: isFavorite ? \"unfavorite\" : \"favorite\",\n          }),\n        },\n        android: {\n          accessibilityLabel: episode.title,\n          accessibilityActions: [\n            {\n              name: \"longpress\",\n              label: translate(\"demoPodcastListScreen.accessibility.favoriteAction\"),\n            },\n          ],\n          onAccessibilityAction: ({ nativeEvent }) => {\n            if (nativeEvent.actionName === \"longpress\") {\n              handlePressFavorite()\n            }\n          },\n        },\n      }),\n    [episode, isFavorite],\n  )\n\n  const handlePressFavorite = () => {\n    onPressFavorite()\n    liked.value = withSpring(liked.value ? 0 : 1)\n  }\n\n  const handlePressCard = () => {\n    openLinkInBrowser(episode.enclosure.link)\n  }\n\n  const ButtonLeftAccessory = useMemo(\n    () =>\n      function ButtonLeftAccessory() {\n        return (\n          <View>\n            <Animated.View\n              style={[$iconContainer, StyleSheet.absoluteFill, animatedLikeButtonStyles]}\n            >\n              <Icon\n                icon=\"heart\"\n                size={ICON_SIZE}\n                color={colors.palette.neutral800} // dark grey\n              />\n            </Animated.View>\n            <Animated.View style={[$iconContainer, animatedUnlikeButtonStyles]}>\n              <Icon\n                icon=\"heart\"\n                size={ICON_SIZE}\n                color={colors.palette.primary400} // pink\n              />\n            </Animated.View>\n          </View>\n        )\n      },\n    [],\n  )\n\n  return (\n    <Card\n      style={$item}\n      verticalAlignment=\"force-footer-bottom\"\n      onPress={handlePressCard}\n      onLongPress={handlePressFavorite}\n      HeadingComponent={\n        <View style={$metadata}>\n          <Text\n            style={$metadataText}\n            size=\"xxs\"\n            accessibilityLabel={episode.datePublished.accessibilityLabel}\n          >\n            {episode.datePublished.textLabel}\n          </Text>\n          <Text\n            style={$metadataText}\n            size=\"xxs\"\n            accessibilityLabel={episode.duration.accessibilityLabel}\n          >\n            {episode.duration.textLabel}\n          </Text>\n        </View>\n      }\n      content={`${episode.parsedTitleAndSubtitle.title} - ${episode.parsedTitleAndSubtitle.subtitle}`}\n      {...accessibilityHintProps}\n      RightComponent={<Image source={imageUri} style={$itemThumbnail} />}\n      FooterComponent={\n        <Button\n          onPress={handlePressFavorite}\n          onLongPress={handlePressFavorite}\n          style={[$favoriteButton, isFavorite && $unFavoriteButton]}\n          accessibilityLabel={\n            isFavorite\n              ? translate(\"demoPodcastListScreen.accessibility.unfavoriteIcon\")\n              : translate(\"demoPodcastListScreen.accessibility.favoriteIcon\")\n          }\n          LeftAccessory={ButtonLeftAccessory}\n        >\n          <Text\n            size=\"xxs\"\n            accessibilityLabel={episode.duration.accessibilityLabel}\n            weight=\"medium\"\n            text={\n              isFavorite\n                ? translate(\"demoPodcastListScreen.unfavoriteButton\")\n                : translate(\"demoPodcastListScreen.favoriteButton\")\n            }\n          />\n        </Button>\n      }\n    />\n  )\n})\n\n// #region Styles\nconst $screenContentContainer: ViewStyle = {\n  flex: 1,\n}\n\nconst $flatListContentContainer: ViewStyle = {\n  paddingHorizontal: spacing.lg,\n  paddingTop: spacing.lg + spacing.xl,\n  paddingBottom: spacing.lg,\n}\n\nconst $heading: ViewStyle = {\n  marginBottom: spacing.md,\n}\n\nconst $item: ViewStyle = {\n  padding: spacing.md,\n  marginTop: spacing.md,\n  minHeight: 120,\n}\n\nconst $itemThumbnail: ImageStyle = {\n  marginTop: spacing.sm,\n  borderRadius: 50,\n  alignSelf: \"flex-start\",\n}\n\nconst $toggle: ViewStyle = {\n  marginTop: spacing.md,\n}\n\nconst $labelStyle: TextStyle = {\n  textAlign: \"left\",\n}\n\nconst $iconContainer: ViewStyle = {\n  height: ICON_SIZE,\n  width: ICON_SIZE,\n  flexDirection: \"row\",\n  marginEnd: spacing.sm,\n}\n\nconst $metadata: TextStyle = {\n  color: colors.textDim,\n  marginTop: spacing.xs,\n  flexDirection: \"row\",\n}\n\nconst $metadataText: TextStyle = {\n  color: colors.textDim,\n  marginEnd: spacing.md,\n  marginBottom: spacing.xs,\n}\n\nconst $favoriteButton: ViewStyle = {\n  borderRadius: 17,\n  marginTop: spacing.md,\n  justifyContent: \"flex-start\",\n  backgroundColor: colors.palette.neutral300,\n  borderColor: colors.palette.neutral300,\n  paddingHorizontal: spacing.md,\n  paddingTop: spacing.xxxs,\n  paddingBottom: 0,\n  minHeight: 32,\n  alignSelf: \"flex-start\",\n}\n\nconst $unFavoriteButton: ViewStyle = {\n  borderColor: colors.palette.primary100,\n  backgroundColor: colors.palette.primary100,\n}\n\nconst $emptyState: ViewStyle = {\n  marginTop: spacing.xxl,\n}\n\nconst $emptyStateImage: ImageStyle = {\n  transform: [{ scaleX: isRTL ? -1 : 1 }],\n}\n// #endregion\n\n// @demo remove-file\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}