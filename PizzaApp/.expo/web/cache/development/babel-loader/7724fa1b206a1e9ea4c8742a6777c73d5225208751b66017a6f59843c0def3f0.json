{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { translate } from \"../i18n\";\nimport { spacing } from \"../theme\";\nimport { Button } from \"./Button\";\nimport { Text } from \"./Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar sadFace = require(\"../../assets/images/sad-face.png\");\nvar EmptyStatePresets = {\n  generic: {\n    imageSource: sadFace,\n    heading: translate(\"emptyStateComponent.generic.heading\"),\n    content: translate(\"emptyStateComponent.generic.content\"),\n    button: translate(\"emptyStateComponent.generic.button\")\n  }\n};\nexport function EmptyState(props) {\n  var preset = EmptyStatePresets[props.preset] ? EmptyStatePresets[props.preset] : undefined;\n  var _props$button = props.button,\n    button = _props$button === void 0 ? preset == null ? void 0 : preset.button : _props$button,\n    buttonTx = props.buttonTx,\n    buttonOnPress = props.buttonOnPress,\n    buttonTxOptions = props.buttonTxOptions,\n    _props$content = props.content,\n    content = _props$content === void 0 ? preset == null ? void 0 : preset.content : _props$content,\n    contentTx = props.contentTx,\n    contentTxOptions = props.contentTxOptions,\n    _props$heading = props.heading,\n    heading = _props$heading === void 0 ? preset == null ? void 0 : preset.heading : _props$heading,\n    headingTx = props.headingTx,\n    headingTxOptions = props.headingTxOptions,\n    _props$imageSource = props.imageSource,\n    imageSource = _props$imageSource === void 0 ? preset == null ? void 0 : preset.imageSource : _props$imageSource,\n    $containerStyleOverride = props.style,\n    $buttonStyleOverride = props.buttonStyle,\n    $buttonTextStyleOverride = props.buttonTextStyle,\n    $contentStyleOverride = props.contentStyle,\n    $headingStyleOverride = props.headingStyle,\n    $imageStyleOverride = props.imageStyle,\n    ButtonProps = props.ButtonProps,\n    ContentTextProps = props.ContentTextProps,\n    HeadingTextProps = props.HeadingTextProps,\n    ImageProps = props.ImageProps;\n  var isImagePresent = !!imageSource;\n  var isHeadingPresent = !!(heading || headingTx);\n  var isContentPresent = !!(content || contentTx);\n  var isButtonPresent = !!(button || buttonTx);\n  var $containerStyles = [$containerStyleOverride];\n  var $imageStyles = [$image, (isHeadingPresent || isContentPresent || isButtonPresent) && {\n    marginBottom: spacing.xxxs\n  }, $imageStyleOverride, ImageProps == null ? void 0 : ImageProps.style];\n  var $headingStyles = [$heading, isImagePresent && {\n    marginTop: spacing.xxxs\n  }, (isContentPresent || isButtonPresent) && {\n    marginBottom: spacing.xxxs\n  }, $headingStyleOverride, HeadingTextProps == null ? void 0 : HeadingTextProps.style];\n  var $contentStyles = [$content, (isImagePresent || isHeadingPresent) && {\n    marginTop: spacing.xxxs\n  }, isButtonPresent && {\n    marginBottom: spacing.xxxs\n  }, $contentStyleOverride, ContentTextProps == null ? void 0 : ContentTextProps.style];\n  var $buttonStyles = [(isImagePresent || isHeadingPresent || isContentPresent) && {\n    marginTop: spacing.xl\n  }, $buttonStyleOverride, ButtonProps == null ? void 0 : ButtonProps.style];\n  return _jsxs(View, {\n    style: $containerStyles,\n    children: [isImagePresent && _jsx(Image, _objectSpread(_objectSpread({\n      source: imageSource\n    }, ImageProps), {}, {\n      style: $imageStyles\n    })), isHeadingPresent && _jsx(Text, _objectSpread(_objectSpread({\n      preset: \"subheading\",\n      text: heading,\n      tx: headingTx,\n      txOptions: headingTxOptions\n    }, HeadingTextProps), {}, {\n      style: $headingStyles\n    })), isContentPresent && _jsx(Text, _objectSpread(_objectSpread({\n      text: content,\n      tx: contentTx,\n      txOptions: contentTxOptions\n    }, ContentTextProps), {}, {\n      style: $contentStyles\n    })), isButtonPresent && _jsx(Button, _objectSpread(_objectSpread({\n      onPress: buttonOnPress,\n      text: button,\n      tx: buttonTx,\n      txOptions: buttonTxOptions,\n      textStyle: $buttonTextStyleOverride\n    }, ButtonProps), {}, {\n      style: $buttonStyles\n    }))]\n  });\n}\nvar $image = {\n  alignSelf: \"center\"\n};\nvar $heading = {\n  textAlign: \"center\",\n  paddingHorizontal: spacing.lg\n};\nvar $content = {\n  textAlign: \"center\",\n  paddingHorizontal: spacing.lg\n};","map":{"version":3,"names":["React","Image","View","translate","spacing","Button","Text","jsx","_jsx","jsxs","_jsxs","sadFace","require","EmptyStatePresets","generic","imageSource","heading","content","button","EmptyState","props","preset","undefined","_props$button","buttonTx","buttonOnPress","buttonTxOptions","_props$content","contentTx","contentTxOptions","_props$heading","headingTx","headingTxOptions","_props$imageSource","$containerStyleOverride","style","$buttonStyleOverride","buttonStyle","$buttonTextStyleOverride","buttonTextStyle","$contentStyleOverride","contentStyle","$headingStyleOverride","headingStyle","$imageStyleOverride","imageStyle","ButtonProps","ContentTextProps","HeadingTextProps","ImageProps","isImagePresent","isHeadingPresent","isContentPresent","isButtonPresent","$containerStyles","$imageStyles","$image","marginBottom","xxxs","$headingStyles","$heading","marginTop","$contentStyles","$content","$buttonStyles","xl","children","_objectSpread","source","text","tx","txOptions","onPress","textStyle","alignSelf","textAlign","paddingHorizontal","lg"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/EmptyState.tsx"],"sourcesContent":["import React from \"react\"\nimport { Image, ImageProps, ImageStyle, StyleProp, TextStyle, View, ViewStyle } from \"react-native\"\nimport { translate } from \"../i18n\"\nimport { spacing } from \"../theme\"\nimport { Button, ButtonProps } from \"./Button\"\nimport { Text, TextProps } from \"./Text\"\n\nconst sadFace = require(\"../../assets/images/sad-face.png\")\n\ninterface EmptyStateProps {\n  /**\n   * An optional prop that specifies the text/image set to use for the empty state.\n   */\n  preset?: keyof typeof EmptyStatePresets\n  /**\n   * Style override for the container.\n   */\n  style?: StyleProp<ViewStyle>\n  /**\n   * An Image source to be displayed above the heading.\n   */\n  imageSource?: ImageProps[\"source\"]\n  /**\n   * Style overrides for image.\n   */\n  imageStyle?: StyleProp<ImageStyle>\n  /**\n   * Pass any additional props directly to the Image component.\n   */\n  ImageProps?: Omit<ImageProps, \"source\">\n  /**\n   * The heading text to display if not using `headingTx`.\n   */\n  heading?: TextProps[\"text\"]\n  /**\n   * Heading text which is looked up via i18n.\n   */\n  headingTx?: TextProps[\"tx\"]\n  /**\n   * Optional heading options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  headingTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for heading text.\n   */\n  headingStyle?: StyleProp<TextStyle>\n  /**\n   * Pass any additional props directly to the heading Text component.\n   */\n  HeadingTextProps?: TextProps\n  /**\n   * The content text to display if not using `contentTx`.\n   */\n  content?: TextProps[\"text\"]\n  /**\n   * Content text which is looked up via i18n.\n   */\n  contentTx?: TextProps[\"tx\"]\n  /**\n   * Optional content options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  contentTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for content text.\n   */\n  contentStyle?: StyleProp<TextStyle>\n  /**\n   * Pass any additional props directly to the content Text component.\n   */\n  ContentTextProps?: TextProps\n  /**\n   * The button text to display if not using `buttonTx`.\n   */\n  button?: TextProps[\"text\"]\n  /**\n   * Button text which is looked up via i18n.\n   */\n  buttonTx?: TextProps[\"tx\"]\n  /**\n   * Optional button options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  buttonTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for button.\n   */\n  buttonStyle?: ButtonProps[\"style\"]\n  /**\n   * Style overrides for button text.\n   */\n  buttonTextStyle?: ButtonProps[\"textStyle\"]\n  /**\n   * Called when the button is pressed.\n   */\n  buttonOnPress?: ButtonProps[\"onPress\"]\n  /**\n   * Pass any additional props directly to the Button component.\n   */\n  ButtonProps?: ButtonProps\n}\n\nconst EmptyStatePresets = {\n  generic: {\n    imageSource: sadFace,\n    heading: translate(\"emptyStateComponent.generic.heading\"),\n    content: translate(\"emptyStateComponent.generic.content\"),\n    button: translate(\"emptyStateComponent.generic.button\"),\n  },\n} as const\n\n/**\n * A component to use when there is no data to display. It can be utilized to direct the user what to do next.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-EmptyState.md)\n */\nexport function EmptyState(props: EmptyStateProps) {\n  const preset = EmptyStatePresets[props.preset] ? EmptyStatePresets[props.preset] : undefined\n\n  const {\n    button = preset?.button,\n    buttonTx,\n    buttonOnPress,\n    buttonTxOptions,\n    content = preset?.content,\n    contentTx,\n    contentTxOptions,\n    heading = preset?.heading,\n    headingTx,\n    headingTxOptions,\n    imageSource = preset?.imageSource,\n    style: $containerStyleOverride,\n    buttonStyle: $buttonStyleOverride,\n    buttonTextStyle: $buttonTextStyleOverride,\n    contentStyle: $contentStyleOverride,\n    headingStyle: $headingStyleOverride,\n    imageStyle: $imageStyleOverride,\n    ButtonProps,\n    ContentTextProps,\n    HeadingTextProps,\n    ImageProps,\n  } = props\n\n  const isImagePresent = !!imageSource\n  const isHeadingPresent = !!(heading || headingTx)\n  const isContentPresent = !!(content || contentTx)\n  const isButtonPresent = !!(button || buttonTx)\n\n  const $containerStyles = [$containerStyleOverride]\n  const $imageStyles = [\n    $image,\n    (isHeadingPresent || isContentPresent || isButtonPresent) && { marginBottom: spacing.xxxs },\n    $imageStyleOverride,\n    ImageProps?.style,\n  ]\n  const $headingStyles = [\n    $heading,\n    isImagePresent && { marginTop: spacing.xxxs },\n    (isContentPresent || isButtonPresent) && { marginBottom: spacing.xxxs },\n    $headingStyleOverride,\n    HeadingTextProps?.style,\n  ]\n  const $contentStyles = [\n    $content,\n    (isImagePresent || isHeadingPresent) && { marginTop: spacing.xxxs },\n    isButtonPresent && { marginBottom: spacing.xxxs },\n    $contentStyleOverride,\n    ContentTextProps?.style,\n  ]\n  const $buttonStyles = [\n    (isImagePresent || isHeadingPresent || isContentPresent) && { marginTop: spacing.xl },\n    $buttonStyleOverride,\n    ButtonProps?.style,\n  ]\n\n  return (\n    <View style={$containerStyles}>\n      {isImagePresent && <Image source={imageSource} {...ImageProps} style={$imageStyles} />}\n\n      {isHeadingPresent && (\n        <Text\n          preset=\"subheading\"\n          text={heading}\n          tx={headingTx}\n          txOptions={headingTxOptions}\n          {...HeadingTextProps}\n          style={$headingStyles}\n        />\n      )}\n\n      {isContentPresent && (\n        <Text\n          text={content}\n          tx={contentTx}\n          txOptions={contentTxOptions}\n          {...ContentTextProps}\n          style={$contentStyles}\n        />\n      )}\n\n      {isButtonPresent && (\n        <Button\n          onPress={buttonOnPress}\n          text={button}\n          tx={buttonTx}\n          txOptions={buttonTxOptions}\n          textStyle={$buttonTextStyleOverride}\n          {...ButtonProps}\n          style={$buttonStyles}\n        />\n      )}\n    </View>\n  )\n}\n\nconst $image: ImageStyle = { alignSelf: \"center\" }\nconst $heading: TextStyle = { textAlign: \"center\", paddingHorizontal: spacing.lg }\nconst $content: TextStyle = { textAlign: \"center\", paddingHorizontal: spacing.lg }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}