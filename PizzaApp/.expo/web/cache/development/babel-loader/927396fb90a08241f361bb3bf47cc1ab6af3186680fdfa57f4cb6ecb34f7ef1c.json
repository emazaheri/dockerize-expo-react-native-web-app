{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"weight\", \"size\", \"tx\", \"txOptions\", \"text\", \"children\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport { isRTL, translate } from \"../i18n\";\nimport { colors, typography } from \"../theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Text(props) {\n  var weight = props.weight,\n    size = props.size,\n    tx = props.tx,\n    txOptions = props.txOptions,\n    text = props.text,\n    children = props.children,\n    $styleOverride = props.style,\n    rest = _objectWithoutProperties(props, _excluded);\n  var i18nText = tx && translate(tx, txOptions);\n  var content = i18nText || text || children;\n  var preset = $presets[props.preset] ? props.preset : \"default\";\n  var $styles = [$rtlStyle, $presets[preset], $fontWeightStyles[weight], $sizeStyles[size], $styleOverride];\n  return _jsx(RNText, _objectSpread(_objectSpread({}, rest), {}, {\n    style: $styles,\n    children: content\n  }));\n}\nvar $sizeStyles = {\n  xxl: {\n    fontSize: 36,\n    lineHeight: 44\n  },\n  xl: {\n    fontSize: 24,\n    lineHeight: 34\n  },\n  lg: {\n    fontSize: 20,\n    lineHeight: 32\n  },\n  md: {\n    fontSize: 18,\n    lineHeight: 26\n  },\n  sm: {\n    fontSize: 16,\n    lineHeight: 24\n  },\n  xs: {\n    fontSize: 14,\n    lineHeight: 21\n  },\n  xxs: {\n    fontSize: 12,\n    lineHeight: 18\n  }\n};\nvar $fontWeightStyles = Object.entries(typography.primary).reduce(function (acc, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    weight = _ref2[0],\n    fontFamily = _ref2[1];\n  return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, weight, {\n    fontFamily: fontFamily\n  }));\n}, {});\nvar $baseStyle = [$sizeStyles.sm, $fontWeightStyles.normal, {\n  color: colors.text\n}];\nvar $presets = {\n  default: $baseStyle,\n  bold: [$baseStyle, $fontWeightStyles.bold],\n  heading: [$baseStyle, $sizeStyles.xxl, $fontWeightStyles.bold],\n  subheading: [$baseStyle, $sizeStyles.lg, $fontWeightStyles.medium],\n  formLabel: [$baseStyle, $fontWeightStyles.medium],\n  formHelper: [$baseStyle, $sizeStyles.sm, $fontWeightStyles.normal]\n};\nvar $rtlStyle = isRTL ? {\n  writingDirection: \"rtl\"\n} : {};","map":{"version":3,"names":["React","RNText","isRTL","translate","colors","typography","jsx","_jsx","Text","props","weight","size","tx","txOptions","text","children","$styleOverride","style","rest","_objectWithoutProperties","_excluded","i18nText","content","preset","$presets","$styles","$rtlStyle","$fontWeightStyles","$sizeStyles","_objectSpread","xxl","fontSize","lineHeight","xl","lg","md","sm","xs","xxs","Object","entries","primary","reduce","acc","_ref","_ref2","_slicedToArray","fontFamily","_defineProperty","$baseStyle","normal","color","default","bold","heading","subheading","medium","formLabel","formHelper","writingDirection"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/Text.tsx"],"sourcesContent":["import i18n from \"i18n-js\"\nimport React from \"react\"\nimport { StyleProp, Text as RNText, TextProps as RNTextProps, TextStyle } from \"react-native\"\nimport { isRTL, translate, TxKeyPath } from \"../i18n\"\nimport { colors, typography } from \"../theme\"\n\ntype Sizes = keyof typeof $sizeStyles\ntype Weights = keyof typeof typography.primary\ntype Presets = keyof typeof $presets\n\nexport interface TextProps extends RNTextProps {\n  /**\n   * Text which is looked up via i18n.\n   */\n  tx?: TxKeyPath\n  /**\n   * The text to display if not using `tx` or nested components.\n   */\n  text?: string\n  /**\n   * Optional options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  txOptions?: i18n.TranslateOptions\n  /**\n   * An optional style override useful for padding & margin.\n   */\n  style?: StyleProp<TextStyle>\n  /**\n   * One of the different types of text presets.\n   */\n  preset?: Presets\n  /**\n   * Text weight modifier.\n   */\n  weight?: Weights\n  /**\n   * Text size modifier.\n   */\n  size?: Sizes\n  /**\n   * Children components.\n   */\n  children?: React.ReactNode\n}\n\n/**\n * For your text displaying needs.\n * This component is a HOC over the built-in React Native one.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-Text.md)\n */\nexport function Text(props: TextProps) {\n  const { weight, size, tx, txOptions, text, children, style: $styleOverride, ...rest } = props\n\n  const i18nText = tx && translate(tx, txOptions)\n  const content = i18nText || text || children\n\n  const preset: Presets = $presets[props.preset] ? props.preset : \"default\"\n  const $styles = [\n    $rtlStyle,\n    $presets[preset],\n    $fontWeightStyles[weight],\n    $sizeStyles[size],\n    $styleOverride,\n  ]\n\n  return (\n    <RNText {...rest} style={$styles}>\n      {content}\n    </RNText>\n  )\n}\n\nconst $sizeStyles = {\n  xxl: { fontSize: 36, lineHeight: 44 } satisfies TextStyle,\n  xl: { fontSize: 24, lineHeight: 34 } satisfies TextStyle,\n  lg: { fontSize: 20, lineHeight: 32 } satisfies TextStyle,\n  md: { fontSize: 18, lineHeight: 26 } satisfies TextStyle,\n  sm: { fontSize: 16, lineHeight: 24 } satisfies TextStyle,\n  xs: { fontSize: 14, lineHeight: 21 } satisfies TextStyle,\n  xxs: { fontSize: 12, lineHeight: 18 } satisfies TextStyle,\n}\n\nconst $fontWeightStyles = Object.entries(typography.primary).reduce((acc, [weight, fontFamily]) => {\n  return { ...acc, [weight]: { fontFamily } }\n}, {}) as Record<Weights, TextStyle>\n\nconst $baseStyle: StyleProp<TextStyle> = [\n  $sizeStyles.sm,\n  $fontWeightStyles.normal,\n  { color: colors.text },\n]\n\nconst $presets = {\n  default: $baseStyle,\n\n  bold: [$baseStyle, $fontWeightStyles.bold] as StyleProp<TextStyle>,\n\n  heading: [$baseStyle, $sizeStyles.xxl, $fontWeightStyles.bold] as StyleProp<TextStyle>,\n\n  subheading: [$baseStyle, $sizeStyles.lg, $fontWeightStyles.medium] as StyleProp<TextStyle>,\n\n  formLabel: [$baseStyle, $fontWeightStyles.medium] as StyleProp<TextStyle>,\n\n  formHelper: [$baseStyle, $sizeStyles.sm, $fontWeightStyles.normal] as StyleProp<TextStyle>,\n}\n\nconst $rtlStyle: TextStyle = isRTL ? { writingDirection: \"rtl\" } : {}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}