{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Icon, Text } from \"../../../components\";\nimport { colors, typography } from \"../../../theme\";\nimport { DemoDivider } from \"../DemoDivider\";\nimport { DemoUseCase } from \"../DemoUseCase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar $iconStyle = {\n  width: 30,\n  height: 30\n};\nvar $customButtonStyle = {\n  backgroundColor: colors.error,\n  height: 100\n};\nvar $customButtonPressedStyle = {\n  backgroundColor: colors.error\n};\nvar $customButtonTextStyle = {\n  color: colors.error,\n  fontFamily: typography.primary.bold,\n  textDecorationLine: \"underline\",\n  textDecorationColor: colors.error\n};\nvar $customButtonPressedTextStyle = {\n  color: colors.palette.neutral100\n};\nvar $customButtonRightAccessoryStyle = {\n  width: \"53%\",\n  height: \"200%\",\n  backgroundColor: colors.error,\n  position: \"absolute\",\n  top: 0,\n  right: 0\n};\nvar $customButtonPressedRightAccessoryStyle = {\n  tintColor: colors.palette.neutral100\n};\nexport var DemoButton = {\n  name: \"Button\",\n  description: \"A component that allows users to take actions and make choices. Wraps the Text component with a Pressable component.\",\n  data: [_jsxs(DemoUseCase, {\n    name: \"Presets\",\n    description: \"There are a few presets that are preconfigured.\",\n    children: [_jsx(Button, {\n      children: \"Default - Laboris In Labore\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"filled\",\n      children: \"Filled - Laboris Ex\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"reversed\",\n      children: \"Reversed - Ad Ipsum\"\n    })]\n  }), _jsxs(DemoUseCase, {\n    name: \"Passing Content\",\n    description: \"There are a few different ways to pass content.\",\n    children: [_jsx(Button, {\n      text: \"Via `text` Prop - Billum In\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      tx: \"demoShowroomScreen.demoViaTxProp\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      children: \"Children - Irure Reprehenderit\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"filled\",\n      RightAccessory: function RightAccessory(props) {\n        return _jsx(Icon, {\n          containerStyle: props.style,\n          style: $iconStyle,\n          icon: \"ladybug\"\n        });\n      },\n      children: \"RightAccessory - Duis Quis\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"filled\",\n      LeftAccessory: function LeftAccessory(props) {\n        return _jsx(Icon, {\n          containerStyle: props.style,\n          style: $iconStyle,\n          icon: \"ladybug\"\n        });\n      },\n      children: \"LeftAccessory - Duis Proident\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      children: _jsxs(Text, {\n        children: [_jsx(Text, {\n          preset: \"bold\",\n          children: \"Nested children - proident veniam.\"\n        }), \" \", _jsx(Text, {\n          preset: \"default\",\n          children: \"Ullamco cupidatat officia exercitation velit non ullamco nisi..\"\n        }), \" \", _jsx(Text, {\n          preset: \"bold\",\n          children: \"Occaecat aliqua irure proident veniam.\"\n        })]\n      })\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"reversed\",\n      RightAccessory: function RightAccessory(props) {\n        return _jsx(Icon, {\n          containerStyle: props.style,\n          style: $iconStyle,\n          icon: \"ladybug\"\n        });\n      },\n      LeftAccessory: function LeftAccessory(props) {\n        return _jsx(Icon, {\n          containerStyle: props.style,\n          style: $iconStyle,\n          icon: \"ladybug\"\n        });\n      },\n      children: \"Multiline - consequat veniam veniam reprehenderit. Fugiat id nisi quis duis sunt proident mollit dolor mollit adipisicing proident deserunt.\"\n    })]\n  }), _jsxs(DemoUseCase, {\n    name: \"Styling\",\n    description: \"The component can be styled easily.\",\n    children: [_jsx(Button, {\n      style: $customButtonStyle,\n      children: \"Style Container - Exercitation\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"filled\",\n      textStyle: $customButtonTextStyle,\n      children: \"Style Text - Ea Anim\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      preset: \"reversed\",\n      RightAccessory: function RightAccessory() {\n        return _jsx(View, {\n          style: $customButtonRightAccessoryStyle\n        });\n      },\n      children: \"Style Accessories - enim ea id fugiat anim ad.\"\n    }), _jsx(DemoDivider, {}), _jsx(Button, {\n      pressedStyle: $customButtonPressedStyle,\n      pressedTextStyle: $customButtonPressedTextStyle,\n      RightAccessory: function RightAccessory(props) {\n        return _jsx(Icon, {\n          containerStyle: props.style,\n          style: [$iconStyle, props.pressableState.pressed && $customButtonPressedRightAccessoryStyle],\n          icon: \"ladybug\"\n        });\n      },\n      children: \"Style Pressed State - fugiat anim\"\n    })]\n  })]\n};","map":{"version":3,"names":["React","View","Button","Icon","Text","colors","typography","DemoDivider","DemoUseCase","jsx","_jsx","jsxs","_jsxs","$iconStyle","width","height","$customButtonStyle","backgroundColor","error","$customButtonPressedStyle","$customButtonTextStyle","color","fontFamily","primary","bold","textDecorationLine","textDecorationColor","$customButtonPressedTextStyle","palette","neutral100","$customButtonRightAccessoryStyle","position","top","right","$customButtonPressedRightAccessoryStyle","tintColor","DemoButton","name","description","data","children","preset","text","tx","RightAccessory","props","containerStyle","style","icon","LeftAccessory","textStyle","pressedStyle","pressedTextStyle","pressableState","pressed"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoShowroomScreen/demos/DemoButton.tsx"],"sourcesContent":["/* eslint-disable react/jsx-key */\nimport React from \"react\"\nimport { ImageStyle, TextStyle, View, ViewStyle } from \"react-native\"\nimport { Button, Icon, Text } from \"../../../components\"\nimport { colors, typography } from \"../../../theme\"\nimport { Demo } from \"../DemoShowroomScreen\"\nimport { DemoDivider } from \"../DemoDivider\"\nimport { DemoUseCase } from \"../DemoUseCase\"\n\nconst $iconStyle: ImageStyle = { width: 30, height: 30 }\nconst $customButtonStyle: ViewStyle = { backgroundColor: colors.error, height: 100 }\nconst $customButtonPressedStyle: ViewStyle = { backgroundColor: colors.error }\nconst $customButtonTextStyle: TextStyle = {\n  color: colors.error,\n  fontFamily: typography.primary.bold,\n  textDecorationLine: \"underline\",\n  textDecorationColor: colors.error,\n}\nconst $customButtonPressedTextStyle: TextStyle = { color: colors.palette.neutral100 }\nconst $customButtonRightAccessoryStyle: ViewStyle = {\n  width: \"53%\",\n  height: \"200%\",\n  backgroundColor: colors.error,\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n}\nconst $customButtonPressedRightAccessoryStyle: ImageStyle = { tintColor: colors.palette.neutral100 }\n\nexport const DemoButton: Demo = {\n  name: \"Button\",\n  description:\n    \"A component that allows users to take actions and make choices. Wraps the Text component with a Pressable component.\",\n  data: [\n    <DemoUseCase name=\"Presets\" description=\"There are a few presets that are preconfigured.\">\n      <Button>Default - Laboris In Labore</Button>\n      <DemoDivider />\n\n      <Button preset=\"filled\">Filled - Laboris Ex</Button>\n      <DemoDivider />\n\n      <Button preset=\"reversed\">Reversed - Ad Ipsum</Button>\n    </DemoUseCase>,\n\n    <DemoUseCase\n      name=\"Passing Content\"\n      description=\"There are a few different ways to pass content.\"\n    >\n      <Button text=\"Via `text` Prop - Billum In\" />\n      <DemoDivider />\n\n      <Button tx=\"demoShowroomScreen.demoViaTxProp\" />\n      <DemoDivider />\n\n      <Button>Children - Irure Reprehenderit</Button>\n      <DemoDivider />\n\n      <Button\n        preset=\"filled\"\n        RightAccessory={(props) => (\n          <Icon containerStyle={props.style} style={$iconStyle} icon=\"ladybug\" />\n        )}\n      >\n        RightAccessory - Duis Quis\n      </Button>\n      <DemoDivider />\n\n      <Button\n        preset=\"filled\"\n        LeftAccessory={(props) => (\n          <Icon containerStyle={props.style} style={$iconStyle} icon=\"ladybug\" />\n        )}\n      >\n        LeftAccessory - Duis Proident\n      </Button>\n      <DemoDivider />\n\n      <Button>\n        <Text>\n          <Text preset=\"bold\">Nested children - proident veniam.</Text>\n          {` `}\n          <Text preset=\"default\">\n            Ullamco cupidatat officia exercitation velit non ullamco nisi..\n          </Text>\n          {` `}\n          <Text preset=\"bold\">Occaecat aliqua irure proident veniam.</Text>\n        </Text>\n      </Button>\n      <DemoDivider />\n\n      <Button\n        preset=\"reversed\"\n        RightAccessory={(props) => (\n          <Icon containerStyle={props.style} style={$iconStyle} icon=\"ladybug\" />\n        )}\n        LeftAccessory={(props) => (\n          <Icon containerStyle={props.style} style={$iconStyle} icon=\"ladybug\" />\n        )}\n      >\n        Multiline - consequat veniam veniam reprehenderit. Fugiat id nisi quis duis sunt proident\n        mollit dolor mollit adipisicing proident deserunt.\n      </Button>\n    </DemoUseCase>,\n\n    <DemoUseCase name=\"Styling\" description=\"The component can be styled easily.\">\n      <Button style={$customButtonStyle}>Style Container - Exercitation</Button>\n      <DemoDivider />\n\n      <Button preset=\"filled\" textStyle={$customButtonTextStyle}>\n        Style Text - Ea Anim\n      </Button>\n      <DemoDivider />\n\n      <Button\n        preset=\"reversed\"\n        RightAccessory={() => <View style={$customButtonRightAccessoryStyle} />}\n      >\n        Style Accessories - enim ea id fugiat anim ad.\n      </Button>\n      <DemoDivider />\n\n      <Button\n        pressedStyle={$customButtonPressedStyle}\n        pressedTextStyle={$customButtonPressedTextStyle}\n        RightAccessory={(props) => (\n          <Icon\n            containerStyle={props.style}\n            style={[\n              $iconStyle,\n              props.pressableState.pressed && $customButtonPressedRightAccessoryStyle,\n            ]}\n            icon=\"ladybug\"\n          />\n        )}\n      >\n        Style Pressed State - fugiat anim\n      </Button>\n    </DemoUseCase>,\n  ],\n}\n\n// @demo remove-file\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}