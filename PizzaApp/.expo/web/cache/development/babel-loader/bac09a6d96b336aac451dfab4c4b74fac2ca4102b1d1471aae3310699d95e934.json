{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"bottomSeparator\", \"children\", \"height\", \"LeftComponent\", \"leftIcon\", \"leftIconColor\", \"RightComponent\", \"rightIcon\", \"rightIconColor\", \"style\", \"text\", \"TextProps\", \"topSeparator\", \"tx\", \"txOptions\", \"textStyle\", \"containerStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, spacing } from \"../theme\";\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ListItem(props) {\n  var bottomSeparator = props.bottomSeparator,\n    children = props.children,\n    _props$height = props.height,\n    height = _props$height === void 0 ? 56 : _props$height,\n    LeftComponent = props.LeftComponent,\n    leftIcon = props.leftIcon,\n    leftIconColor = props.leftIconColor,\n    RightComponent = props.RightComponent,\n    rightIcon = props.rightIcon,\n    rightIconColor = props.rightIconColor,\n    style = props.style,\n    text = props.text,\n    TextProps = props.TextProps,\n    topSeparator = props.topSeparator,\n    tx = props.tx,\n    txOptions = props.txOptions,\n    $textStyleOverride = props.textStyle,\n    $containerStyleOverride = props.containerStyle,\n    TouchableOpacityProps = _objectWithoutProperties(props, _excluded);\n  var $textStyles = [$textStyle, $textStyleOverride, TextProps == null ? void 0 : TextProps.style];\n  var $containerStyles = [topSeparator && $separatorTop, bottomSeparator && $separatorBottom, $containerStyleOverride];\n  var $touchableStyles = [$touchableStyle, {\n    minHeight: height\n  }, style];\n  return _jsx(View, {\n    style: $containerStyles,\n    children: _jsxs(TouchableOpacity, _objectSpread(_objectSpread({}, TouchableOpacityProps), {}, {\n      style: $touchableStyles,\n      children: [_jsx(ListItemAction, {\n        side: \"left\",\n        size: height,\n        icon: leftIcon,\n        iconColor: leftIconColor,\n        Component: LeftComponent\n      }), _jsx(Text, _objectSpread(_objectSpread({}, TextProps), {}, {\n        tx: tx,\n        text: text,\n        txOptions: txOptions,\n        style: $textStyles,\n        children: children\n      })), _jsx(ListItemAction, {\n        side: \"right\",\n        size: height,\n        icon: rightIcon,\n        iconColor: rightIconColor,\n        Component: RightComponent\n      })]\n    }))\n  });\n}\nfunction ListItemAction(props) {\n  var icon = props.icon,\n    Component = props.Component,\n    iconColor = props.iconColor,\n    size = props.size,\n    side = props.side;\n  var $iconContainerStyles = [$iconContainer];\n  if (Component) return Component;\n  if (icon) {\n    return _jsx(Icon, {\n      size: 24,\n      icon: icon,\n      color: iconColor,\n      containerStyle: [$iconContainerStyles, side === \"left\" && $iconContainerLeft, side === \"right\" && $iconContainerRight, {\n        height: size\n      }]\n    });\n  }\n  return null;\n}\nvar $separatorTop = {\n  borderTopWidth: 1,\n  borderTopColor: colors.separator\n};\nvar $separatorBottom = {\n  borderBottomWidth: 1,\n  borderBottomColor: colors.separator\n};\nvar $textStyle = {\n  paddingVertical: spacing.xs,\n  alignSelf: \"center\",\n  flexGrow: 1,\n  flexShrink: 1\n};\nvar $touchableStyle = {\n  flexDirection: \"row\",\n  alignItems: \"flex-start\"\n};\nvar $iconContainer = {\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexGrow: 0\n};\nvar $iconContainerLeft = {\n  marginEnd: spacing.md\n};\nvar $iconContainerRight = {\n  marginStart: spacing.md\n};","map":{"version":3,"names":["React","TouchableOpacity","View","colors","spacing","Icon","Text","jsx","_jsx","jsxs","_jsxs","ListItem","props","bottomSeparator","children","_props$height","height","LeftComponent","leftIcon","leftIconColor","RightComponent","rightIcon","rightIconColor","style","text","TextProps","topSeparator","tx","txOptions","$textStyleOverride","textStyle","$containerStyleOverride","containerStyle","TouchableOpacityProps","_objectWithoutProperties","_excluded","$textStyles","$textStyle","$containerStyles","$separatorTop","$separatorBottom","$touchableStyles","$touchableStyle","minHeight","_objectSpread","ListItemAction","side","size","icon","iconColor","Component","$iconContainerStyles","$iconContainer","color","$iconContainerLeft","$iconContainerRight","borderTopWidth","borderTopColor","separator","borderBottomWidth","borderBottomColor","paddingVertical","xs","alignSelf","flexGrow","flexShrink","flexDirection","alignItems","justifyContent","marginEnd","md","marginStart"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/ListItem.tsx"],"sourcesContent":["import React, { ReactElement } from \"react\"\nimport {\n  StyleProp,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from \"react-native\"\nimport { colors, spacing } from \"../theme\"\nimport { Icon, IconTypes } from \"./Icon\"\nimport { Text, TextProps } from \"./Text\"\n\nexport interface ListItemProps extends TouchableOpacityProps {\n  /**\n   * How tall the list item should be.\n   * Default: 56\n   */\n  height?: number\n  /**\n   * Whether to show the top separator.\n   * Default: false\n   */\n  topSeparator?: boolean\n  /**\n   * Whether to show the bottom separator.\n   * Default: false\n   */\n  bottomSeparator?: boolean\n  /**\n   * Text to display if not using `tx` or nested components.\n   */\n  text?: TextProps[\"text\"]\n  /**\n   * Text which is looked up via i18n.\n   */\n  tx?: TextProps[\"tx\"]\n  /**\n   * Children components.\n   */\n  children?: TextProps[\"children\"]\n  /**\n   * Optional options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  txOptions?: TextProps[\"txOptions\"]\n  /**\n   * Optional text style override.\n   */\n  textStyle?: StyleProp<TextStyle>\n  /**\n   * Pass any additional props directly to the Text component.\n   */\n  TextProps?: TextProps\n  /**\n   * Optional View container style override.\n   */\n  containerStyle?: StyleProp<ViewStyle>\n  /**\n   * Optional TouchableOpacity style override.\n   */\n  style?: StyleProp<ViewStyle>\n  /**\n   * Icon that should appear on the left.\n   */\n  leftIcon?: IconTypes\n  /**\n   * An optional tint color for the left icon\n   */\n  leftIconColor?: string\n  /**\n   * Icon that should appear on the right.\n   */\n  rightIcon?: IconTypes\n  /**\n   * An optional tint color for the right icon\n   */\n  rightIconColor?: string\n  /**\n   * Right action custom ReactElement.\n   * Overrides `rightIcon`.\n   */\n  RightComponent?: ReactElement\n  /**\n   * Left action custom ReactElement.\n   * Overrides `leftIcon`.\n   */\n  LeftComponent?: ReactElement\n}\n\ninterface ListItemActionProps {\n  icon: IconTypes\n  iconColor?: string\n  Component?: ReactElement\n  size: number\n  side: \"left\" | \"right\"\n}\n\n/**\n * A styled row component that can be used in FlatList, SectionList, or by itself.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-ListItem.md)\n */\nexport function ListItem(props: ListItemProps) {\n  const {\n    bottomSeparator,\n    children,\n    height = 56,\n    LeftComponent,\n    leftIcon,\n    leftIconColor,\n    RightComponent,\n    rightIcon,\n    rightIconColor,\n    style,\n    text,\n    TextProps,\n    topSeparator,\n    tx,\n    txOptions,\n    textStyle: $textStyleOverride,\n    containerStyle: $containerStyleOverride,\n    ...TouchableOpacityProps\n  } = props\n\n  const $textStyles = [$textStyle, $textStyleOverride, TextProps?.style]\n\n  const $containerStyles = [\n    topSeparator && $separatorTop,\n    bottomSeparator && $separatorBottom,\n    $containerStyleOverride,\n  ]\n\n  const $touchableStyles = [$touchableStyle, { minHeight: height }, style]\n\n  return (\n    <View style={$containerStyles}>\n      <TouchableOpacity {...TouchableOpacityProps} style={$touchableStyles}>\n        <ListItemAction\n          side=\"left\"\n          size={height}\n          icon={leftIcon}\n          iconColor={leftIconColor}\n          Component={LeftComponent}\n        />\n\n        <Text {...TextProps} tx={tx} text={text} txOptions={txOptions} style={$textStyles}>\n          {children}\n        </Text>\n\n        <ListItemAction\n          side=\"right\"\n          size={height}\n          icon={rightIcon}\n          iconColor={rightIconColor}\n          Component={RightComponent}\n        />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nfunction ListItemAction(props: ListItemActionProps) {\n  const { icon, Component, iconColor, size, side } = props\n\n  const $iconContainerStyles = [$iconContainer]\n\n  if (Component) return Component\n\n  if (icon) {\n    return (\n      <Icon\n        size={24}\n        icon={icon}\n        color={iconColor}\n        containerStyle={[\n          $iconContainerStyles,\n          side === \"left\" && $iconContainerLeft,\n          side === \"right\" && $iconContainerRight,\n          { height: size },\n        ]}\n      />\n    )\n  }\n\n  return null\n}\n\nconst $separatorTop: ViewStyle = {\n  borderTopWidth: 1,\n  borderTopColor: colors.separator,\n}\n\nconst $separatorBottom: ViewStyle = {\n  borderBottomWidth: 1,\n  borderBottomColor: colors.separator,\n}\n\nconst $textStyle: TextStyle = {\n  paddingVertical: spacing.xs,\n  alignSelf: \"center\",\n  flexGrow: 1,\n  flexShrink: 1,\n}\n\nconst $touchableStyle: ViewStyle = {\n  flexDirection: \"row\",\n  alignItems: \"flex-start\",\n}\n\nconst $iconContainer: ViewStyle = {\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexGrow: 0,\n}\nconst $iconContainerLeft: ViewStyle = {\n  marginEnd: spacing.md,\n}\n\nconst $iconContainerRight: ViewStyle = {\n  marginStart: spacing.md,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}