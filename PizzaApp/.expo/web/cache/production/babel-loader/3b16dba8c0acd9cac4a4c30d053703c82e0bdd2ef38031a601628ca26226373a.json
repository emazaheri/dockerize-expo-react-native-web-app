{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{useSafeAreaInsets}from\"react-native-safe-area-context\";var propertySuffixMap={top:\"Top\",bottom:\"Bottom\",left:\"Start\",right:\"End\",start:\"Start\",end:\"End\"};var edgeInsetMap={start:\"left\",end:\"right\"};export function useSafeAreaInsetsStyle(){var safeAreaEdges=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var property=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"padding\";var insets=useSafeAreaInsets();return safeAreaEdges.reduce(function(acc,e){var _edgeInsetMap$e;return _objectSpread(_objectSpread({},acc),{},_defineProperty({},\"\"+property+propertySuffixMap[e],insets[(_edgeInsetMap$e=edgeInsetMap[e])!=null?_edgeInsetMap$e:e]));},{});}","map":{"version":3,"names":["useSafeAreaInsets","propertySuffixMap","top","bottom","left","right","start","end","edgeInsetMap","useSafeAreaInsetsStyle","safeAreaEdges","arguments","length","undefined","property","insets","reduce","acc","e","_edgeInsetMap$e","_objectSpread","_defineProperty"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/utils/useSafeAreaInsetsStyle.ts"],"sourcesContent":["import { FlexStyle } from \"react-native\"\nimport { Edge, useSafeAreaInsets } from \"react-native-safe-area-context\"\n\nexport type ExtendedEdge = Edge | \"start\" | \"end\"\n\nconst propertySuffixMap = {\n  top: \"Top\",\n  bottom: \"Bottom\",\n  left: \"Start\",\n  right: \"End\",\n  start: \"Start\",\n  end: \"End\",\n}\n\nconst edgeInsetMap = {\n  start: \"left\",\n  end: \"right\",\n}\n\n/**\n * A hook that can be used to create a safe-area-aware style object that can be passed directly to a View.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Utils-useSafeAreaInsetsStyle.md)\n */\nexport function useSafeAreaInsetsStyle(\n  safeAreaEdges: ExtendedEdge[] = [],\n  property: \"padding\" | \"margin\" = \"padding\",\n): Pick<\n  FlexStyle,\n  | \"marginBottom\"\n  | \"marginEnd\"\n  | \"marginStart\"\n  | \"marginTop\"\n  | \"paddingBottom\"\n  | \"paddingEnd\"\n  | \"paddingStart\"\n  | \"paddingTop\"\n> {\n  const insets = useSafeAreaInsets()\n\n  return safeAreaEdges.reduce((acc, e) => {\n    return { ...acc, [`${property}${propertySuffixMap[e]}`]: insets[edgeInsetMap[e] ?? e] }\n  }, {})\n}\n"],"mappings":"+qBACA,OAAeA,iBAAiB,KAAQ,gCAAgC,CAIxE,GAAM,CAAAC,iBAAiB,CAAG,CACxBC,GAAG,CAAE,KAAK,CACVC,MAAM,CAAE,QAAQ,CAChBC,IAAI,CAAE,OAAO,CACbC,KAAK,CAAE,KAAK,CACZC,KAAK,CAAE,OAAO,CACdC,GAAG,CAAE,KACP,CAAC,CAED,GAAM,CAAAC,YAAY,CAAG,CACnBF,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,OACP,CAAC,CAOD,MAAO,SAAS,CAAAE,sBAAsBA,CAAA,CAapC,IAZA,CAAAC,aAA6B,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAClC,CAAAG,QAA8B,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CAY1C,GAAM,CAAAI,MAAM,CAAGf,iBAAiB,CAAC,CAAC,CAElC,MAAO,CAAAU,aAAa,CAACM,MAAM,CAAC,SAACC,GAAG,CAAEC,CAAC,CAAK,KAAAC,eAAA,CACtC,OAAAC,aAAA,CAAAA,aAAA,IAAYH,GAAG,KAAAI,eAAA,OAAMP,QAAQ,CAAGb,iBAAiB,CAACiB,CAAC,CAAC,CAAKH,MAAM,EAAAI,eAAA,CAACX,YAAY,CAACU,CAAC,CAAC,QAAAC,eAAA,CAAID,CAAC,CAAC,GACvF,CAAC,CAAE,CAAC,CAAC,CAAC,CACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}