{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{observer}from\"mobx-react-lite\";import React,{useEffect,useMemo,useRef,useState}from\"react\";import{Button,Icon,Screen,Text,TextField}from\"../components\";import{useStores}from\"../models\";import{colors,spacing}from\"../theme\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var LoginScreen=observer(function LoginScreen(_props){var authPasswordInput=useRef();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),authPassword=_useState2[0],setAuthPassword=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isAuthPasswordHidden=_useState4[0],setIsAuthPasswordHidden=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSubmitted=_useState6[0],setIsSubmitted=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),attemptsCount=_useState8[0],setAttemptsCount=_useState8[1];var _useStores=useStores(),_useStores$authentica=_useStores.authenticationStore,authEmail=_useStores$authentica.authEmail,setAuthEmail=_useStores$authentica.setAuthEmail,setAuthToken=_useStores$authentica.setAuthToken,validationError=_useStores$authentica.validationError;useEffect(function(){setAuthEmail(\"ignite@infinite.red\");setAuthPassword(\"ign1teIsAwes0m3\");return function(){setAuthPassword(\"\");setAuthEmail(\"\");};},[]);var error=isSubmitted?validationError:\"\";function login(){setIsSubmitted(true);setAttemptsCount(attemptsCount+1);if(validationError)return;setIsSubmitted(false);setAuthPassword(\"\");setAuthEmail(\"\");setAuthToken(String(Date.now()));}var PasswordRightAccessory=useMemo(function(){return function PasswordRightAccessory(props){return _jsx(Icon,{icon:isAuthPasswordHidden?\"view\":\"hidden\",color:colors.palette.neutral800,containerStyle:props.style,size:20,onPress:function onPress(){return setIsAuthPasswordHidden(!isAuthPasswordHidden);}});};},[isAuthPasswordHidden]);return _jsxs(Screen,{preset:\"auto\",contentContainerStyle:$screenContentContainer,safeAreaEdges:[\"top\",\"bottom\"],children:[_jsx(Text,{testID:\"login-heading\",tx:\"loginScreen.signIn\",preset:\"heading\",style:$signIn}),_jsx(Text,{tx:\"loginScreen.enterDetails\",preset:\"subheading\",style:$enterDetails}),attemptsCount>2&&_jsx(Text,{tx:\"loginScreen.hint\",size:\"sm\",weight:\"light\",style:$hint}),_jsx(TextField,{value:authEmail,onChangeText:setAuthEmail,containerStyle:$textField,autoCapitalize:\"none\",autoComplete:\"email\",autoCorrect:false,keyboardType:\"email-address\",labelTx:\"loginScreen.emailFieldLabel\",placeholderTx:\"loginScreen.emailFieldPlaceholder\",helper:error,status:error?\"error\":undefined,onSubmitEditing:function onSubmitEditing(){var _authPasswordInput$cu;return(_authPasswordInput$cu=authPasswordInput.current)==null?void 0:_authPasswordInput$cu.focus();}}),_jsx(TextField,{ref:authPasswordInput,value:authPassword,onChangeText:setAuthPassword,containerStyle:$textField,autoCapitalize:\"none\",autoComplete:\"password\",autoCorrect:false,secureTextEntry:isAuthPasswordHidden,labelTx:\"loginScreen.passwordFieldLabel\",placeholderTx:\"loginScreen.passwordFieldPlaceholder\",onSubmitEditing:login,RightAccessory:PasswordRightAccessory}),_jsx(Button,{testID:\"login-button\",tx:\"loginScreen.tapToSignIn\",style:$tapButton,preset:\"reversed\",onPress:login})]});});var $screenContentContainer={paddingVertical:spacing.xxl,paddingHorizontal:spacing.lg};var $signIn={marginBottom:spacing.sm};var $enterDetails={marginBottom:spacing.lg};var $hint={color:colors.tint,marginBottom:spacing.md};var $textField={marginBottom:spacing.lg};var $tapButton={marginTop:spacing.xs};","map":{"version":3,"names":["observer","React","useEffect","useMemo","useRef","useState","Button","Icon","Screen","Text","TextField","useStores","colors","spacing","jsx","_jsx","jsxs","_jsxs","LoginScreen","_props","authPasswordInput","_useState","_useState2","_slicedToArray","authPassword","setAuthPassword","_useState3","_useState4","isAuthPasswordHidden","setIsAuthPasswordHidden","_useState5","_useState6","isSubmitted","setIsSubmitted","_useState7","_useState8","attemptsCount","setAttemptsCount","_useStores","_useStores$authentica","authenticationStore","authEmail","setAuthEmail","setAuthToken","validationError","error","login","String","Date","now","PasswordRightAccessory","props","icon","color","palette","neutral800","containerStyle","style","size","onPress","preset","contentContainerStyle","$screenContentContainer","safeAreaEdges","children","testID","tx","$signIn","$enterDetails","weight","$hint","value","onChangeText","$textField","autoCapitalize","autoComplete","autoCorrect","keyboardType","labelTx","placeholderTx","helper","status","undefined","onSubmitEditing","_authPasswordInput$cu","current","focus","ref","secureTextEntry","RightAccessory","$tapButton","paddingVertical","xxl","paddingHorizontal","lg","marginBottom","sm","tint","md","marginTop","xs"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/LoginScreen.tsx"],"sourcesContent":["import { observer } from \"mobx-react-lite\"\nimport React, { FC, useEffect, useMemo, useRef, useState } from \"react\"\nimport { TextInput, TextStyle, ViewStyle } from \"react-native\"\nimport { Button, Icon, Screen, Text, TextField, TextFieldAccessoryProps } from \"../components\"\nimport { useStores } from \"../models\"\nimport { AppStackScreenProps } from \"../navigators\"\nimport { colors, spacing } from \"../theme\"\n\ninterface LoginScreenProps extends AppStackScreenProps<\"Login\"> {}\n\nexport const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_props) {\n  const authPasswordInput = useRef<TextInput>()\n\n  const [authPassword, setAuthPassword] = useState(\"\")\n  const [isAuthPasswordHidden, setIsAuthPasswordHidden] = useState(true)\n  const [isSubmitted, setIsSubmitted] = useState(false)\n  const [attemptsCount, setAttemptsCount] = useState(0)\n  const {\n    authenticationStore: { authEmail, setAuthEmail, setAuthToken, validationError },\n  } = useStores()\n\n  useEffect(() => {\n    // Here is where you could fetch credentials from keychain or storage\n    // and pre-fill the form fields.\n    setAuthEmail(\"ignite@infinite.red\")\n    setAuthPassword(\"ign1teIsAwes0m3\")\n\n    // Return a \"cleanup\" function that React will run when the component unmounts\n    return () => {\n      setAuthPassword(\"\")\n      setAuthEmail(\"\")\n    }\n  }, [])\n\n  const error = isSubmitted ? validationError : \"\"\n\n  function login() {\n    setIsSubmitted(true)\n    setAttemptsCount(attemptsCount + 1)\n\n    if (validationError) return\n\n    // Make a request to your server to get an authentication token.\n    // If successful, reset the fields and set the token.\n    setIsSubmitted(false)\n    setAuthPassword(\"\")\n    setAuthEmail(\"\")\n\n    // We'll mock this with a fake token.\n    setAuthToken(String(Date.now()))\n  }\n\n  const PasswordRightAccessory = useMemo(\n    () =>\n      function PasswordRightAccessory(props: TextFieldAccessoryProps) {\n        return (\n          <Icon\n            icon={isAuthPasswordHidden ? \"view\" : \"hidden\"}\n            color={colors.palette.neutral800}\n            containerStyle={props.style}\n            size={20}\n            onPress={() => setIsAuthPasswordHidden(!isAuthPasswordHidden)}\n          />\n        )\n      },\n    [isAuthPasswordHidden],\n  )\n\n  return (\n    <Screen\n      preset=\"auto\"\n      contentContainerStyle={$screenContentContainer}\n      safeAreaEdges={[\"top\", \"bottom\"]}\n    >\n      <Text testID=\"login-heading\" tx=\"loginScreen.signIn\" preset=\"heading\" style={$signIn} />\n      <Text tx=\"loginScreen.enterDetails\" preset=\"subheading\" style={$enterDetails} />\n      {attemptsCount > 2 && <Text tx=\"loginScreen.hint\" size=\"sm\" weight=\"light\" style={$hint} />}\n\n      <TextField\n        value={authEmail}\n        onChangeText={setAuthEmail}\n        containerStyle={$textField}\n        autoCapitalize=\"none\"\n        autoComplete=\"email\"\n        autoCorrect={false}\n        keyboardType=\"email-address\"\n        labelTx=\"loginScreen.emailFieldLabel\"\n        placeholderTx=\"loginScreen.emailFieldPlaceholder\"\n        helper={error}\n        status={error ? \"error\" : undefined}\n        onSubmitEditing={() => authPasswordInput.current?.focus()}\n      />\n\n      <TextField\n        ref={authPasswordInput}\n        value={authPassword}\n        onChangeText={setAuthPassword}\n        containerStyle={$textField}\n        autoCapitalize=\"none\"\n        autoComplete=\"password\"\n        autoCorrect={false}\n        secureTextEntry={isAuthPasswordHidden}\n        labelTx=\"loginScreen.passwordFieldLabel\"\n        placeholderTx=\"loginScreen.passwordFieldPlaceholder\"\n        onSubmitEditing={login}\n        RightAccessory={PasswordRightAccessory}\n      />\n\n      <Button\n        testID=\"login-button\"\n        tx=\"loginScreen.tapToSignIn\"\n        style={$tapButton}\n        preset=\"reversed\"\n        onPress={login}\n      />\n    </Screen>\n  )\n})\n\nconst $screenContentContainer: ViewStyle = {\n  paddingVertical: spacing.xxl,\n  paddingHorizontal: spacing.lg,\n}\n\nconst $signIn: TextStyle = {\n  marginBottom: spacing.sm,\n}\n\nconst $enterDetails: TextStyle = {\n  marginBottom: spacing.lg,\n}\n\nconst $hint: TextStyle = {\n  color: colors.tint,\n  marginBottom: spacing.md,\n}\n\nconst $textField: ViewStyle = {\n  marginBottom: spacing.lg,\n}\n\nconst $tapButton: ViewStyle = {\n  marginTop: spacing.xs,\n}\n\n// @demo remove-file\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}