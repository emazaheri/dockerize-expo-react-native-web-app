{"ast":null,"code":"import React from\"react\";import{EmptyState}from\"../../../components\";import{colors}from\"../../../theme\";import{DemoDivider}from\"../DemoDivider\";import{DemoUseCase}from\"../DemoUseCase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var DemoEmptyState={name:\"EmptyState\",description:\"A component to use when there is no data to display. It can be utilized to direct the user what to do next\",data:[_jsx(DemoUseCase,{name:\"Presets\",description:\"You can create different text/image sets. One is predefined called `generic`. Note, there's no default in case you want to have a completely custom EmptyState.\",children:_jsx(EmptyState,{preset:\"generic\"})}),_jsxs(DemoUseCase,{name:\"Passing Content\",description:\"There are a few different ways to pass content.\",children:[_jsx(EmptyState,{imageSource:require(\"../../../../assets/images/logo.png\"),heading:\"Customize Image\",content:\"You can pass in any image source.\"}),_jsx(DemoDivider,{size:30,line:true}),_jsx(EmptyState,{heading:\"Via `heading` Prop\",content:\"Via `content` prop.\",button:\"Via `button` Prop\"}),_jsx(DemoDivider,{size:30,line:true}),_jsx(EmptyState,{headingTx:\"demoShowroomScreen.demoViaSpecifiedTxProp\",headingTxOptions:{prop:\"heading\"},contentTx:\"demoShowroomScreen.demoViaSpecifiedTxProp\",contentTxOptions:{prop:\"content\"},buttonTx:\"demoShowroomScreen.demoViaSpecifiedTxProp\",buttonTxOptions:{prop:\"button\"}})]}),_jsx(DemoUseCase,{name:\"Styling\",description:\"The component can be styled easily.\",children:_jsx(EmptyState,{preset:\"generic\",style:{backgroundColor:colors.error,paddingVertical:20},imageStyle:{height:75,tintColor:colors.palette.neutral100},ImageProps:{resizeMode:\"contain\"},headingStyle:{color:colors.palette.neutral100,textDecorationLine:\"underline\",textDecorationColor:colors.palette.neutral100},contentStyle:{color:colors.palette.neutral100,textDecorationLine:\"underline\",textDecorationColor:colors.palette.neutral100},buttonStyle:{alignSelf:\"center\",backgroundColor:colors.palette.neutral100},buttonTextStyle:{color:colors.error},ButtonProps:{preset:\"reversed\"}})})]};","map":{"version":3,"names":["React","EmptyState","colors","DemoDivider","DemoUseCase","jsx","_jsx","jsxs","_jsxs","DemoEmptyState","name","description","data","children","preset","imageSource","require","heading","content","size","line","button","headingTx","headingTxOptions","prop","contentTx","contentTxOptions","buttonTx","buttonTxOptions","style","backgroundColor","error","paddingVertical","imageStyle","height","tintColor","palette","neutral100","ImageProps","resizeMode","headingStyle","color","textDecorationLine","textDecorationColor","contentStyle","buttonStyle","alignSelf","buttonTextStyle","ButtonProps"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/screens/DemoShowroomScreen/demos/DemoEmptyState.tsx"],"sourcesContent":["/* eslint-disable react/jsx-key, react-native/no-inline-styles */\nimport React from \"react\"\nimport { EmptyState } from \"../../../components\"\nimport { colors } from \"../../../theme\"\nimport { DemoDivider } from \"../DemoDivider\"\nimport { Demo } from \"../DemoShowroomScreen\"\nimport { DemoUseCase } from \"../DemoUseCase\"\n\nexport const DemoEmptyState: Demo = {\n  name: \"EmptyState\",\n  description:\n    \"A component to use when there is no data to display. It can be utilized to direct the user what to do next\",\n  data: [\n    <DemoUseCase\n      name=\"Presets\"\n      description=\"You can create different text/image sets. One is predefined called `generic`. Note, there's no default in case you want to have a completely custom EmptyState.\"\n    >\n      <EmptyState preset=\"generic\" />\n    </DemoUseCase>,\n\n    <DemoUseCase\n      name=\"Passing Content\"\n      description=\"There are a few different ways to pass content.\"\n    >\n      <EmptyState\n        imageSource={require(\"../../../../assets/images/logo.png\")}\n        heading=\"Customize Image\"\n        content=\"You can pass in any image source.\"\n      />\n\n      <DemoDivider size={30} line />\n\n      <EmptyState\n        heading=\"Via `heading` Prop\"\n        content=\"Via `content` prop.\"\n        button=\"Via `button` Prop\"\n      />\n\n      <DemoDivider size={30} line />\n\n      <EmptyState\n        headingTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        headingTxOptions={{ prop: \"heading\" }}\n        contentTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        contentTxOptions={{ prop: \"content\" }}\n        buttonTx=\"demoShowroomScreen.demoViaSpecifiedTxProp\"\n        buttonTxOptions={{ prop: \"button\" }}\n      />\n    </DemoUseCase>,\n\n    <DemoUseCase name=\"Styling\" description=\"The component can be styled easily.\">\n      <EmptyState\n        preset=\"generic\"\n        style={{ backgroundColor: colors.error, paddingVertical: 20 }}\n        imageStyle={{ height: 75, tintColor: colors.palette.neutral100 }}\n        ImageProps={{ resizeMode: \"contain\" }}\n        headingStyle={{\n          color: colors.palette.neutral100,\n          textDecorationLine: \"underline\",\n          textDecorationColor: colors.palette.neutral100,\n        }}\n        contentStyle={{\n          color: colors.palette.neutral100,\n          textDecorationLine: \"underline\",\n          textDecorationColor: colors.palette.neutral100,\n        }}\n        buttonStyle={{ alignSelf: \"center\", backgroundColor: colors.palette.neutral100 }}\n        buttonTextStyle={{ color: colors.error }}\n        ButtonProps={{\n          preset: \"reversed\",\n        }}\n      />\n    </DemoUseCase>,\n  ],\n}\n\n// @demo remove-file\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,2BACnB,OAASC,MAAM,sBACf,OAASC,WAAW,sBAEpB,OAASC,WAAW,sBAAwB,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5C,MAAO,IAAM,CAAAC,cAAoB,CAAG,CAClCC,IAAI,CAAE,YAAY,CAClBC,WAAW,CACT,4GAA4G,CAC9GC,IAAI,CAAE,CACJN,IAAA,CAACF,WAAW,EACVM,IAAI,CAAC,SAAS,CACdC,WAAW,CAAC,iKAAiK,CAAAE,QAAA,CAE7KP,IAAA,CAACL,UAAU,EAACa,MAAM,CAAC,SAAS,CAAE,CAAC,CACpB,CAAC,CAEdN,KAAA,CAACJ,WAAW,EACVM,IAAI,CAAC,iBAAiB,CACtBC,WAAW,CAAC,iDAAiD,CAAAE,QAAA,EAE7DP,IAAA,CAACL,UAAU,EACTc,WAAW,CAAEC,OAAO,qCAAqC,CAAE,CAC3DC,OAAO,CAAC,iBAAiB,CACzBC,OAAO,CAAC,mCAAmC,CAC5C,CAAC,CAEFZ,IAAA,CAACH,WAAW,EAACgB,IAAI,CAAE,EAAG,CAACC,IAAI,MAAE,CAAC,CAE9Bd,IAAA,CAACL,UAAU,EACTgB,OAAO,CAAC,oBAAoB,CAC5BC,OAAO,CAAC,qBAAqB,CAC7BG,MAAM,CAAC,mBAAmB,CAC3B,CAAC,CAEFf,IAAA,CAACH,WAAW,EAACgB,IAAI,CAAE,EAAG,CAACC,IAAI,MAAE,CAAC,CAE9Bd,IAAA,CAACL,UAAU,EACTqB,SAAS,CAAC,2CAA2C,CACrDC,gBAAgB,CAAE,CAAEC,IAAI,CAAE,SAAU,CAAE,CACtCC,SAAS,CAAC,2CAA2C,CACrDC,gBAAgB,CAAE,CAAEF,IAAI,CAAE,SAAU,CAAE,CACtCG,QAAQ,CAAC,2CAA2C,CACpDC,eAAe,CAAE,CAAEJ,IAAI,CAAE,QAAS,CAAE,CACrC,CAAC,EACS,CAAC,CAEdlB,IAAA,CAACF,WAAW,EAACM,IAAI,CAAC,SAAS,CAACC,WAAW,CAAC,qCAAqC,CAAAE,QAAA,CAC3EP,IAAA,CAACL,UAAU,EACTa,MAAM,CAAC,SAAS,CAChBe,KAAK,CAAE,CAAEC,eAAe,CAAE5B,MAAM,CAAC6B,KAAK,CAAEC,eAAe,CAAE,EAAG,CAAE,CAC9DC,UAAU,CAAE,CAAEC,MAAM,CAAE,EAAE,CAAEC,SAAS,CAAEjC,MAAM,CAACkC,OAAO,CAACC,UAAW,CAAE,CACjEC,UAAU,CAAE,CAAEC,UAAU,CAAE,SAAU,CAAE,CACtCC,YAAY,CAAE,CACZC,KAAK,CAAEvC,MAAM,CAACkC,OAAO,CAACC,UAAU,CAChCK,kBAAkB,CAAE,WAAW,CAC/BC,mBAAmB,CAAEzC,MAAM,CAACkC,OAAO,CAACC,UACtC,CAAE,CACFO,YAAY,CAAE,CACZH,KAAK,CAAEvC,MAAM,CAACkC,OAAO,CAACC,UAAU,CAChCK,kBAAkB,CAAE,WAAW,CAC/BC,mBAAmB,CAAEzC,MAAM,CAACkC,OAAO,CAACC,UACtC,CAAE,CACFQ,WAAW,CAAE,CAAEC,SAAS,CAAE,QAAQ,CAAEhB,eAAe,CAAE5B,MAAM,CAACkC,OAAO,CAACC,UAAW,CAAE,CACjFU,eAAe,CAAE,CAAEN,KAAK,CAAEvC,MAAM,CAAC6B,KAAM,CAAE,CACzCiB,WAAW,CAAE,CACXlC,MAAM,CAAE,UACV,CAAE,CACH,CAAC,CACS,CAAC,CAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}