{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"tx\",\"text\",\"txOptions\",\"style\",\"pressedStyle\",\"textStyle\",\"pressedTextStyle\",\"children\",\"RightAccessory\",\"LeftAccessory\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from\"react\";import Pressable from\"react-native-web/dist/exports/Pressable\";import{colors,spacing,typography}from\"../theme\";import{Text}from\"./Text\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Button(props){var tx=props.tx,text=props.text,txOptions=props.txOptions,$viewStyleOverride=props.style,$pressedViewStyleOverride=props.pressedStyle,$textStyleOverride=props.textStyle,$pressedTextStyleOverride=props.pressedTextStyle,_children=props.children,RightAccessory=props.RightAccessory,LeftAccessory=props.LeftAccessory,rest=_objectWithoutProperties(props,_excluded);var preset=$viewPresets[props.preset]?props.preset:\"default\";function $viewStyle(_ref){var pressed=_ref.pressed;return[$viewPresets[preset],$viewStyleOverride,!!pressed&&[$pressedViewPresets[preset],$pressedViewStyleOverride]];}function $textStyle(_ref2){var pressed=_ref2.pressed;return[$textPresets[preset],$textStyleOverride,!!pressed&&[$pressedTextPresets[preset],$pressedTextStyleOverride]];}return _jsx(Pressable,_objectSpread(_objectSpread({style:$viewStyle,accessibilityRole:\"button\"},rest),{},{children:function children(state){return _jsxs(_Fragment,{children:[!!LeftAccessory&&_jsx(LeftAccessory,{style:$leftAccessoryStyle,pressableState:state}),_jsx(Text,{tx:tx,text:text,txOptions:txOptions,style:$textStyle(state),children:_children}),!!RightAccessory&&_jsx(RightAccessory,{style:$rightAccessoryStyle,pressableState:state})]});}}));}var $baseViewStyle={minHeight:56,borderRadius:4,justifyContent:\"center\",alignItems:\"center\",flexDirection:\"row\",paddingVertical:spacing.sm,paddingHorizontal:spacing.sm,overflow:\"hidden\"};var $baseTextStyle={fontSize:16,lineHeight:20,fontFamily:typography.primary.medium,textAlign:\"center\",flexShrink:1,flexGrow:0,zIndex:2};var $rightAccessoryStyle={marginStart:spacing.xs,zIndex:1};var $leftAccessoryStyle={marginEnd:spacing.xs,zIndex:1};var $viewPresets={default:[$baseViewStyle,{borderWidth:1,borderColor:colors.palette.neutral400,backgroundColor:colors.palette.neutral100}],filled:[$baseViewStyle,{backgroundColor:colors.palette.neutral300}],reversed:[$baseViewStyle,{backgroundColor:colors.palette.neutral800}]};var $textPresets={default:$baseTextStyle,filled:$baseTextStyle,reversed:[$baseTextStyle,{color:colors.palette.neutral100}]};var $pressedViewPresets={default:{backgroundColor:colors.palette.neutral200},filled:{backgroundColor:colors.palette.neutral400},reversed:{backgroundColor:colors.palette.neutral700}};var $pressedTextPresets={default:{opacity:0.9},filled:{opacity:0.9},reversed:{opacity:0.9}};","map":{"version":3,"names":["React","Pressable","colors","spacing","typography","Text","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Button","props","tx","text","txOptions","$viewStyleOverride","style","$pressedViewStyleOverride","pressedStyle","$textStyleOverride","textStyle","$pressedTextStyleOverride","pressedTextStyle","children","RightAccessory","LeftAccessory","rest","_objectWithoutProperties","_excluded","preset","$viewPresets","$viewStyle","_ref","pressed","$pressedViewPresets","$textStyle","_ref2","$textPresets","$pressedTextPresets","_objectSpread","accessibilityRole","state","$leftAccessoryStyle","pressableState","$rightAccessoryStyle","$baseViewStyle","minHeight","borderRadius","justifyContent","alignItems","flexDirection","paddingVertical","sm","paddingHorizontal","overflow","$baseTextStyle","fontSize","lineHeight","fontFamily","primary","medium","textAlign","flexShrink","flexGrow","zIndex","marginStart","xs","marginEnd","default","borderWidth","borderColor","palette","neutral400","backgroundColor","neutral100","filled","neutral300","reversed","neutral800","color","neutral200","neutral700","opacity"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/Button.tsx"],"sourcesContent":["import React, { ComponentType } from \"react\"\nimport {\n  Pressable,\n  PressableProps,\n  PressableStateCallbackType,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\"\nimport { colors, spacing, typography } from \"../theme\"\nimport { Text, TextProps } from \"./Text\"\n\ntype Presets = keyof typeof $viewPresets\n\nexport interface ButtonAccessoryProps {\n  style: StyleProp<any>\n  pressableState: PressableStateCallbackType\n}\n\nexport interface ButtonProps extends PressableProps {\n  /**\n   * Text which is looked up via i18n.\n   */\n  tx?: TextProps[\"tx\"]\n  /**\n   * The text to display if not using `tx` or nested components.\n   */\n  text?: TextProps[\"text\"]\n  /**\n   * Optional options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  txOptions?: TextProps[\"txOptions\"]\n  /**\n   * An optional style override useful for padding & margin.\n   */\n  style?: StyleProp<ViewStyle>\n  /**\n   * An optional style override for the \"pressed\" state.\n   */\n  pressedStyle?: StyleProp<ViewStyle>\n  /**\n   * An optional style override for the button text.\n   */\n  textStyle?: StyleProp<TextStyle>\n  /**\n   * An optional style override for the button text when in the \"pressed\" state.\n   */\n  pressedTextStyle?: StyleProp<TextStyle>\n  /**\n   * One of the different types of button presets.\n   */\n  preset?: Presets\n  /**\n   * An optional component to render on the right side of the text.\n   * Example: `RightAccessory={(props) => <View {...props} />}`\n   */\n  RightAccessory?: ComponentType<ButtonAccessoryProps>\n  /**\n   * An optional component to render on the left side of the text.\n   * Example: `LeftAccessory={(props) => <View {...props} />}`\n   */\n  LeftAccessory?: ComponentType<ButtonAccessoryProps>\n  /**\n   * Children components.\n   */\n  children?: React.ReactNode\n}\n\n/**\n * A component that allows users to take actions and make choices.\n * Wraps the Text component with a Pressable component.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-Button.md)\n */\nexport function Button(props: ButtonProps) {\n  const {\n    tx,\n    text,\n    txOptions,\n    style: $viewStyleOverride,\n    pressedStyle: $pressedViewStyleOverride,\n    textStyle: $textStyleOverride,\n    pressedTextStyle: $pressedTextStyleOverride,\n    children,\n    RightAccessory,\n    LeftAccessory,\n    ...rest\n  } = props\n\n  const preset: Presets = $viewPresets[props.preset] ? props.preset : \"default\"\n  function $viewStyle({ pressed }) {\n    return [\n      $viewPresets[preset],\n      $viewStyleOverride,\n      !!pressed && [$pressedViewPresets[preset], $pressedViewStyleOverride],\n    ]\n  }\n  function $textStyle({ pressed }) {\n    return [\n      $textPresets[preset],\n      $textStyleOverride,\n      !!pressed && [$pressedTextPresets[preset], $pressedTextStyleOverride],\n    ]\n  }\n\n  return (\n    <Pressable style={$viewStyle} accessibilityRole=\"button\" {...rest}>\n      {(state) => (\n        <>\n          {!!LeftAccessory && <LeftAccessory style={$leftAccessoryStyle} pressableState={state} />}\n\n          <Text tx={tx} text={text} txOptions={txOptions} style={$textStyle(state)}>\n            {children}\n          </Text>\n\n          {!!RightAccessory && (\n            <RightAccessory style={$rightAccessoryStyle} pressableState={state} />\n          )}\n        </>\n      )}\n    </Pressable>\n  )\n}\n\nconst $baseViewStyle: ViewStyle = {\n  minHeight: 56,\n  borderRadius: 4,\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  flexDirection: \"row\",\n  paddingVertical: spacing.sm,\n  paddingHorizontal: spacing.sm,\n  overflow: \"hidden\",\n}\n\nconst $baseTextStyle: TextStyle = {\n  fontSize: 16,\n  lineHeight: 20,\n  fontFamily: typography.primary.medium,\n  textAlign: \"center\",\n  flexShrink: 1,\n  flexGrow: 0,\n  zIndex: 2,\n}\n\nconst $rightAccessoryStyle: ViewStyle = { marginStart: spacing.xs, zIndex: 1 }\nconst $leftAccessoryStyle: ViewStyle = { marginEnd: spacing.xs, zIndex: 1 }\n\nconst $viewPresets = {\n  default: [\n    $baseViewStyle,\n    {\n      borderWidth: 1,\n      borderColor: colors.palette.neutral400,\n      backgroundColor: colors.palette.neutral100,\n    },\n  ] as StyleProp<ViewStyle>,\n\n  filled: [$baseViewStyle, { backgroundColor: colors.palette.neutral300 }] as StyleProp<ViewStyle>,\n\n  reversed: [\n    $baseViewStyle,\n    { backgroundColor: colors.palette.neutral800 },\n  ] as StyleProp<ViewStyle>,\n}\n\nconst $textPresets: Record<Presets, StyleProp<TextStyle>> = {\n  default: $baseTextStyle,\n  filled: $baseTextStyle,\n  reversed: [$baseTextStyle, { color: colors.palette.neutral100 }],\n}\n\nconst $pressedViewPresets: Record<Presets, StyleProp<ViewStyle>> = {\n  default: { backgroundColor: colors.palette.neutral200 },\n  filled: { backgroundColor: colors.palette.neutral400 },\n  reversed: { backgroundColor: colors.palette.neutral700 },\n}\n\nconst $pressedTextPresets: Record<Presets, StyleProp<TextStyle>> = {\n  default: { opacity: 0.9 },\n  filled: { opacity: 0.9 },\n  reversed: { opacity: 0.9 },\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}