{"ast":null,"code":"import{types}from\"mobx-state-tree\";export var AuthenticationStoreModel=types.model(\"AuthenticationStore\").props({authToken:types.maybe(types.string),authEmail:\"\"}).views(function(store){return{get isAuthenticated(){return!!store.authToken;},get validationError(){if(store.authEmail.length===0)return\"can't be blank\";if(store.authEmail.length<6)return\"must be at least 6 characters\";if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(store.authEmail))return\"must be a valid email address\";return\"\";}};}).actions(function(store){return{setAuthToken:function setAuthToken(value){store.authToken=value;},setAuthEmail:function setAuthEmail(value){store.authEmail=value.replace(/ /g,\"\");},logout:function logout(){store.authToken=undefined;store.authEmail=\"\";}};});","map":{"version":3,"names":["types","AuthenticationStoreModel","model","props","authToken","maybe","string","authEmail","views","store","isAuthenticated","validationError","length","test","actions","setAuthToken","value","setAuthEmail","replace","logout","undefined"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/models/AuthenticationStore.ts"],"sourcesContent":["import { Instance, SnapshotOut, types } from \"mobx-state-tree\"\n\nexport const AuthenticationStoreModel = types\n  .model(\"AuthenticationStore\")\n  .props({\n    authToken: types.maybe(types.string),\n    authEmail: \"\",\n  })\n  .views((store) => ({\n    get isAuthenticated() {\n      return !!store.authToken\n    },\n    get validationError() {\n      if (store.authEmail.length === 0) return \"can't be blank\"\n      if (store.authEmail.length < 6) return \"must be at least 6 characters\"\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(store.authEmail))\n        return \"must be a valid email address\"\n      return \"\"\n    },\n  }))\n  .actions((store) => ({\n    setAuthToken(value?: string) {\n      store.authToken = value\n    },\n    setAuthEmail(value: string) {\n      store.authEmail = value.replace(/ /g, \"\")\n    },\n    logout() {\n      store.authToken = undefined\n      store.authEmail = \"\"\n    },\n  }))\n\nexport interface AuthenticationStore extends Instance<typeof AuthenticationStoreModel> {}\nexport interface AuthenticationStoreSnapshot extends SnapshotOut<typeof AuthenticationStoreModel> {}\n\n// @demo remove-file\n"],"mappings":"AAAA,OAAgCA,KAAK,KAAQ,iBAAiB,CAE9D,MAAO,IAAM,CAAAC,wBAAwB,CAAGD,KAAK,CAC1CE,KAAK,CAAC,qBAAqB,CAAC,CAC5BC,KAAK,CAAC,CACLC,SAAS,CAAEJ,KAAK,CAACK,KAAK,CAACL,KAAK,CAACM,MAAM,CAAC,CACpCC,SAAS,CAAE,EACb,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,QAAM,CACjB,GAAI,CAAAC,eAAeA,CAAA,CAAG,CACpB,MAAO,CAAC,CAACD,KAAK,CAACL,SAAS,CAC1B,CAAC,CACD,GAAI,CAAAO,eAAeA,CAAA,CAAG,CACpB,GAAIF,KAAK,CAACF,SAAS,CAACK,MAAM,GAAK,CAAC,CAAE,MAAO,gBAAgB,CACzD,GAAIH,KAAK,CAACF,SAAS,CAACK,MAAM,CAAG,CAAC,CAAE,MAAO,+BAA+B,CACtE,GAAI,CAAC,4BAA4B,CAACC,IAAI,CAACJ,KAAK,CAACF,SAAS,CAAC,CACrD,MAAO,+BAA+B,CACxC,MAAO,EAAE,CACX,CACF,CAAC,EAAC,CAAC,CACFO,OAAO,CAAC,SAACL,KAAK,QAAM,CACnBM,YAAY,UAAAA,aAACC,KAAc,CAAE,CAC3BP,KAAK,CAACL,SAAS,CAAGY,KAAK,CACzB,CAAC,CACDC,YAAY,UAAAA,aAACD,KAAa,CAAE,CAC1BP,KAAK,CAACF,SAAS,CAAGS,KAAK,CAACE,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAC3C,CAAC,CACDC,MAAM,UAAAA,OAAA,CAAG,CACPV,KAAK,CAACL,SAAS,CAAGgB,SAAS,CAC3BX,KAAK,CAACF,SAAS,CAAG,EAAE,CACtB,CACF,CAAC,EAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}