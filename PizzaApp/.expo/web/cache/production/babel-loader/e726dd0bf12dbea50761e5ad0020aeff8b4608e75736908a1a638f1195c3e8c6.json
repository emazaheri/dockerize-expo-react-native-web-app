{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from\"react\";import Image from\"react-native-web/dist/exports/Image\";import View from\"react-native-web/dist/exports/View\";import{translate}from\"../i18n\";import{spacing}from\"../theme\";import{Button}from\"./Button\";import{Text}from\"./Text\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sadFace=require(\"../../assets/images/sad-face.png\");var EmptyStatePresets={generic:{imageSource:sadFace,heading:translate(\"emptyStateComponent.generic.heading\"),content:translate(\"emptyStateComponent.generic.content\"),button:translate(\"emptyStateComponent.generic.button\")}};export function EmptyState(props){var preset=EmptyStatePresets[props.preset]?EmptyStatePresets[props.preset]:undefined;var _props$button=props.button,button=_props$button===void 0?preset==null?void 0:preset.button:_props$button,buttonTx=props.buttonTx,buttonOnPress=props.buttonOnPress,buttonTxOptions=props.buttonTxOptions,_props$content=props.content,content=_props$content===void 0?preset==null?void 0:preset.content:_props$content,contentTx=props.contentTx,contentTxOptions=props.contentTxOptions,_props$heading=props.heading,heading=_props$heading===void 0?preset==null?void 0:preset.heading:_props$heading,headingTx=props.headingTx,headingTxOptions=props.headingTxOptions,_props$imageSource=props.imageSource,imageSource=_props$imageSource===void 0?preset==null?void 0:preset.imageSource:_props$imageSource,$containerStyleOverride=props.style,$buttonStyleOverride=props.buttonStyle,$buttonTextStyleOverride=props.buttonTextStyle,$contentStyleOverride=props.contentStyle,$headingStyleOverride=props.headingStyle,$imageStyleOverride=props.imageStyle,ButtonProps=props.ButtonProps,ContentTextProps=props.ContentTextProps,HeadingTextProps=props.HeadingTextProps,ImageProps=props.ImageProps;var isImagePresent=!!imageSource;var isHeadingPresent=!!(heading||headingTx);var isContentPresent=!!(content||contentTx);var isButtonPresent=!!(button||buttonTx);var $containerStyles=[$containerStyleOverride];var $imageStyles=[$image,(isHeadingPresent||isContentPresent||isButtonPresent)&&{marginBottom:spacing.xxxs},$imageStyleOverride,ImageProps==null?void 0:ImageProps.style];var $headingStyles=[$heading,isImagePresent&&{marginTop:spacing.xxxs},(isContentPresent||isButtonPresent)&&{marginBottom:spacing.xxxs},$headingStyleOverride,HeadingTextProps==null?void 0:HeadingTextProps.style];var $contentStyles=[$content,(isImagePresent||isHeadingPresent)&&{marginTop:spacing.xxxs},isButtonPresent&&{marginBottom:spacing.xxxs},$contentStyleOverride,ContentTextProps==null?void 0:ContentTextProps.style];var $buttonStyles=[(isImagePresent||isHeadingPresent||isContentPresent)&&{marginTop:spacing.xl},$buttonStyleOverride,ButtonProps==null?void 0:ButtonProps.style];return _jsxs(View,{style:$containerStyles,children:[isImagePresent&&_jsx(Image,_objectSpread(_objectSpread({source:imageSource},ImageProps),{},{style:$imageStyles})),isHeadingPresent&&_jsx(Text,_objectSpread(_objectSpread({preset:\"subheading\",text:heading,tx:headingTx,txOptions:headingTxOptions},HeadingTextProps),{},{style:$headingStyles})),isContentPresent&&_jsx(Text,_objectSpread(_objectSpread({text:content,tx:contentTx,txOptions:contentTxOptions},ContentTextProps),{},{style:$contentStyles})),isButtonPresent&&_jsx(Button,_objectSpread(_objectSpread({onPress:buttonOnPress,text:button,tx:buttonTx,txOptions:buttonTxOptions,textStyle:$buttonTextStyleOverride},ButtonProps),{},{style:$buttonStyles}))]});}var $image={alignSelf:\"center\"};var $heading={textAlign:\"center\",paddingHorizontal:spacing.lg};var $content={textAlign:\"center\",paddingHorizontal:spacing.lg};","map":{"version":3,"names":["React","Image","View","translate","spacing","Button","Text","jsx","_jsx","jsxs","_jsxs","sadFace","require","EmptyStatePresets","generic","imageSource","heading","content","button","EmptyState","props","preset","undefined","_props$button","buttonTx","buttonOnPress","buttonTxOptions","_props$content","contentTx","contentTxOptions","_props$heading","headingTx","headingTxOptions","_props$imageSource","$containerStyleOverride","style","$buttonStyleOverride","buttonStyle","$buttonTextStyleOverride","buttonTextStyle","$contentStyleOverride","contentStyle","$headingStyleOverride","headingStyle","$imageStyleOverride","imageStyle","ButtonProps","ContentTextProps","HeadingTextProps","ImageProps","isImagePresent","isHeadingPresent","isContentPresent","isButtonPresent","$containerStyles","$imageStyles","$image","marginBottom","xxxs","$headingStyles","$heading","marginTop","$contentStyles","$content","$buttonStyles","xl","children","_objectSpread","source","text","tx","txOptions","onPress","textStyle","alignSelf","textAlign","paddingHorizontal","lg"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/EmptyState.tsx"],"sourcesContent":["import React from \"react\"\nimport { Image, ImageProps, ImageStyle, StyleProp, TextStyle, View, ViewStyle } from \"react-native\"\nimport { translate } from \"../i18n\"\nimport { spacing } from \"../theme\"\nimport { Button, ButtonProps } from \"./Button\"\nimport { Text, TextProps } from \"./Text\"\n\nconst sadFace = require(\"../../assets/images/sad-face.png\")\n\ninterface EmptyStateProps {\n  /**\n   * An optional prop that specifies the text/image set to use for the empty state.\n   */\n  preset?: keyof typeof EmptyStatePresets\n  /**\n   * Style override for the container.\n   */\n  style?: StyleProp<ViewStyle>\n  /**\n   * An Image source to be displayed above the heading.\n   */\n  imageSource?: ImageProps[\"source\"]\n  /**\n   * Style overrides for image.\n   */\n  imageStyle?: StyleProp<ImageStyle>\n  /**\n   * Pass any additional props directly to the Image component.\n   */\n  ImageProps?: Omit<ImageProps, \"source\">\n  /**\n   * The heading text to display if not using `headingTx`.\n   */\n  heading?: TextProps[\"text\"]\n  /**\n   * Heading text which is looked up via i18n.\n   */\n  headingTx?: TextProps[\"tx\"]\n  /**\n   * Optional heading options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  headingTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for heading text.\n   */\n  headingStyle?: StyleProp<TextStyle>\n  /**\n   * Pass any additional props directly to the heading Text component.\n   */\n  HeadingTextProps?: TextProps\n  /**\n   * The content text to display if not using `contentTx`.\n   */\n  content?: TextProps[\"text\"]\n  /**\n   * Content text which is looked up via i18n.\n   */\n  contentTx?: TextProps[\"tx\"]\n  /**\n   * Optional content options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  contentTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for content text.\n   */\n  contentStyle?: StyleProp<TextStyle>\n  /**\n   * Pass any additional props directly to the content Text component.\n   */\n  ContentTextProps?: TextProps\n  /**\n   * The button text to display if not using `buttonTx`.\n   */\n  button?: TextProps[\"text\"]\n  /**\n   * Button text which is looked up via i18n.\n   */\n  buttonTx?: TextProps[\"tx\"]\n  /**\n   * Optional button options to pass to i18n. Useful for interpolation\n   * as well as explicitly setting locale or translation fallbacks.\n   */\n  buttonTxOptions?: TextProps[\"txOptions\"]\n  /**\n   * Style overrides for button.\n   */\n  buttonStyle?: ButtonProps[\"style\"]\n  /**\n   * Style overrides for button text.\n   */\n  buttonTextStyle?: ButtonProps[\"textStyle\"]\n  /**\n   * Called when the button is pressed.\n   */\n  buttonOnPress?: ButtonProps[\"onPress\"]\n  /**\n   * Pass any additional props directly to the Button component.\n   */\n  ButtonProps?: ButtonProps\n}\n\nconst EmptyStatePresets = {\n  generic: {\n    imageSource: sadFace,\n    heading: translate(\"emptyStateComponent.generic.heading\"),\n    content: translate(\"emptyStateComponent.generic.content\"),\n    button: translate(\"emptyStateComponent.generic.button\"),\n  },\n} as const\n\n/**\n * A component to use when there is no data to display. It can be utilized to direct the user what to do next.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Components-EmptyState.md)\n */\nexport function EmptyState(props: EmptyStateProps) {\n  const preset = EmptyStatePresets[props.preset] ? EmptyStatePresets[props.preset] : undefined\n\n  const {\n    button = preset?.button,\n    buttonTx,\n    buttonOnPress,\n    buttonTxOptions,\n    content = preset?.content,\n    contentTx,\n    contentTxOptions,\n    heading = preset?.heading,\n    headingTx,\n    headingTxOptions,\n    imageSource = preset?.imageSource,\n    style: $containerStyleOverride,\n    buttonStyle: $buttonStyleOverride,\n    buttonTextStyle: $buttonTextStyleOverride,\n    contentStyle: $contentStyleOverride,\n    headingStyle: $headingStyleOverride,\n    imageStyle: $imageStyleOverride,\n    ButtonProps,\n    ContentTextProps,\n    HeadingTextProps,\n    ImageProps,\n  } = props\n\n  const isImagePresent = !!imageSource\n  const isHeadingPresent = !!(heading || headingTx)\n  const isContentPresent = !!(content || contentTx)\n  const isButtonPresent = !!(button || buttonTx)\n\n  const $containerStyles = [$containerStyleOverride]\n  const $imageStyles = [\n    $image,\n    (isHeadingPresent || isContentPresent || isButtonPresent) && { marginBottom: spacing.xxxs },\n    $imageStyleOverride,\n    ImageProps?.style,\n  ]\n  const $headingStyles = [\n    $heading,\n    isImagePresent && { marginTop: spacing.xxxs },\n    (isContentPresent || isButtonPresent) && { marginBottom: spacing.xxxs },\n    $headingStyleOverride,\n    HeadingTextProps?.style,\n  ]\n  const $contentStyles = [\n    $content,\n    (isImagePresent || isHeadingPresent) && { marginTop: spacing.xxxs },\n    isButtonPresent && { marginBottom: spacing.xxxs },\n    $contentStyleOverride,\n    ContentTextProps?.style,\n  ]\n  const $buttonStyles = [\n    (isImagePresent || isHeadingPresent || isContentPresent) && { marginTop: spacing.xl },\n    $buttonStyleOverride,\n    ButtonProps?.style,\n  ]\n\n  return (\n    <View style={$containerStyles}>\n      {isImagePresent && <Image source={imageSource} {...ImageProps} style={$imageStyles} />}\n\n      {isHeadingPresent && (\n        <Text\n          preset=\"subheading\"\n          text={heading}\n          tx={headingTx}\n          txOptions={headingTxOptions}\n          {...HeadingTextProps}\n          style={$headingStyles}\n        />\n      )}\n\n      {isContentPresent && (\n        <Text\n          text={content}\n          tx={contentTx}\n          txOptions={contentTxOptions}\n          {...ContentTextProps}\n          style={$contentStyles}\n        />\n      )}\n\n      {isButtonPresent && (\n        <Button\n          onPress={buttonOnPress}\n          text={button}\n          tx={buttonTx}\n          txOptions={buttonTxOptions}\n          textStyle={$buttonTextStyleOverride}\n          {...ButtonProps}\n          style={$buttonStyles}\n        />\n      )}\n    </View>\n  )\n}\n\nconst $image: ImageStyle = { alignSelf: \"center\" }\nconst $heading: TextStyle = { textAlign: \"center\", paddingHorizontal: spacing.lg }\nconst $content: TextStyle = { textAlign: \"center\", paddingHorizontal: spacing.lg }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}