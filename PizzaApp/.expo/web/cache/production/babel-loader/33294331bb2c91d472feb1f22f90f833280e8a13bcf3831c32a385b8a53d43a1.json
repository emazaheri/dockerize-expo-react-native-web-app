{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import{useScrollToTop}from\"@react-navigation/native\";import{StatusBar}from\"expo-status-bar\";import React,{useRef,useState}from\"react\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import{colors}from\"../theme\";import{useSafeAreaInsetsStyle}from\"../utils/useSafeAreaInsetsStyle\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isIos=Platform.OS===\"ios\";function isNonScrolling(preset){return!preset||preset===\"fixed\";}function useAutoPreset(props){var preset=props.preset,scrollEnabledToggleThreshold=props.scrollEnabledToggleThreshold;var _ref=scrollEnabledToggleThreshold||{},_ref$percent=_ref.percent,percent=_ref$percent===void 0?0.92:_ref$percent,_ref$point=_ref.point,point=_ref$point===void 0?0:_ref$point;var scrollViewHeight=useRef(null);var scrollViewContentHeight=useRef(null);var _useState=useState(true),_useState2=_slicedToArray(_useState,2),scrollEnabled=_useState2[0],setScrollEnabled=_useState2[1];function updateScrollState(){if(scrollViewHeight.current===null||scrollViewContentHeight.current===null)return;var contentFitsScreen=function(){if(point){return scrollViewContentHeight.current<scrollViewHeight.current-point;}else{return scrollViewContentHeight.current<scrollViewHeight.current*percent;}}();if(scrollEnabled&&contentFitsScreen)setScrollEnabled(false);if(!scrollEnabled&&!contentFitsScreen)setScrollEnabled(true);}function onContentSizeChange(w,h){scrollViewContentHeight.current=h;updateScrollState();}function onLayout(e){var height=e.nativeEvent.layout.height;scrollViewHeight.current=height;updateScrollState();}if(preset===\"auto\")updateScrollState();return{scrollEnabled:preset===\"auto\"?scrollEnabled:true,onContentSizeChange:onContentSizeChange,onLayout:onLayout};}function ScreenWithoutScrolling(props){var style=props.style,contentContainerStyle=props.contentContainerStyle,children=props.children;return _jsx(View,{style:[$outerStyle,style],children:_jsx(View,{style:[$innerStyle,contentContainerStyle],children:children})});}function ScreenWithScrolling(props){var _ref2=props,children=_ref2.children,_ref2$keyboardShouldP=_ref2.keyboardShouldPersistTaps,keyboardShouldPersistTaps=_ref2$keyboardShouldP===void 0?\"handled\":_ref2$keyboardShouldP,contentContainerStyle=_ref2.contentContainerStyle,ScrollViewProps=_ref2.ScrollViewProps,style=_ref2.style;var ref=useRef();var _useAutoPreset=useAutoPreset(props),scrollEnabled=_useAutoPreset.scrollEnabled,_onContentSizeChange=_useAutoPreset.onContentSizeChange,_onLayout=_useAutoPreset.onLayout;useScrollToTop(ref);return _jsx(ScrollView,_objectSpread(_objectSpread({keyboardShouldPersistTaps:keyboardShouldPersistTaps,scrollEnabled:scrollEnabled,ref:ref},ScrollViewProps),{},{onLayout:function onLayout(e){_onLayout(e);ScrollViewProps==null?void 0:ScrollViewProps.onLayout==null?void 0:ScrollViewProps.onLayout(e);},onContentSizeChange:function onContentSizeChange(w,h){_onContentSizeChange(w,h);ScrollViewProps==null?void 0:ScrollViewProps.onContentSizeChange==null?void 0:ScrollViewProps.onContentSizeChange(w,h);},style:[$outerStyle,ScrollViewProps==null?void 0:ScrollViewProps.style,style],contentContainerStyle:[$innerStyle,ScrollViewProps==null?void 0:ScrollViewProps.contentContainerStyle,contentContainerStyle],children:children}));}export function Screen(props){var _props$backgroundColo=props.backgroundColor,backgroundColor=_props$backgroundColo===void 0?colors.background:_props$backgroundColo,KeyboardAvoidingViewProps=props.KeyboardAvoidingViewProps,_props$keyboardOffset=props.keyboardOffset,keyboardOffset=_props$keyboardOffset===void 0?0:_props$keyboardOffset,safeAreaEdges=props.safeAreaEdges,StatusBarProps=props.StatusBarProps,_props$statusBarStyle=props.statusBarStyle,statusBarStyle=_props$statusBarStyle===void 0?\"dark\":_props$statusBarStyle;var $containerInsets=useSafeAreaInsetsStyle(safeAreaEdges);return _jsxs(View,{style:[$containerStyle,{backgroundColor:backgroundColor},$containerInsets],children:[_jsx(StatusBar,_objectSpread({style:statusBarStyle},StatusBarProps)),_jsx(KeyboardAvoidingView,_objectSpread(_objectSpread({behavior:isIos?\"padding\":undefined,keyboardVerticalOffset:keyboardOffset},KeyboardAvoidingViewProps),{},{style:[$keyboardAvoidingViewStyle,KeyboardAvoidingViewProps==null?void 0:KeyboardAvoidingViewProps.style],children:isNonScrolling(props.preset)?_jsx(ScreenWithoutScrolling,_objectSpread({},props)):_jsx(ScreenWithScrolling,_objectSpread({},props))}))]});}var $containerStyle={flex:1,height:\"100%\",width:\"100%\"};var $keyboardAvoidingViewStyle={flex:1};var $outerStyle={flex:1,height:\"100%\",width:\"100%\"};var $innerStyle={justifyContent:\"flex-start\",alignItems:\"stretch\"};","map":{"version":3,"names":["useScrollToTop","StatusBar","React","useRef","useState","KeyboardAvoidingView","Platform","ScrollView","View","colors","useSafeAreaInsetsStyle","jsx","_jsx","jsxs","_jsxs","isIos","OS","isNonScrolling","preset","useAutoPreset","props","scrollEnabledToggleThreshold","_ref","_ref$percent","percent","_ref$point","point","scrollViewHeight","scrollViewContentHeight","_useState","_useState2","_slicedToArray","scrollEnabled","setScrollEnabled","updateScrollState","current","contentFitsScreen","onContentSizeChange","w","h","onLayout","e","height","nativeEvent","layout","ScreenWithoutScrolling","style","contentContainerStyle","children","$outerStyle","$innerStyle","ScreenWithScrolling","_ref2","_ref2$keyboardShouldP","keyboardShouldPersistTaps","ScrollViewProps","ref","_useAutoPreset","_objectSpread","Screen","_props$backgroundColo","backgroundColor","background","KeyboardAvoidingViewProps","_props$keyboardOffset","keyboardOffset","safeAreaEdges","StatusBarProps","_props$statusBarStyle","statusBarStyle","$containerInsets","$containerStyle","behavior","undefined","keyboardVerticalOffset","$keyboardAvoidingViewStyle","flex","width","justifyContent","alignItems"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/components/Screen.tsx"],"sourcesContent":["import { useScrollToTop } from \"@react-navigation/native\"\nimport { StatusBar, StatusBarProps } from \"expo-status-bar\"\nimport React, { useRef, useState } from \"react\"\nimport {\n  KeyboardAvoidingView,\n  KeyboardAvoidingViewProps,\n  LayoutChangeEvent,\n  Platform,\n  ScrollView,\n  ScrollViewProps,\n  StyleProp,\n  View,\n  ViewStyle,\n} from \"react-native\"\nimport { colors } from \"../theme\"\nimport { ExtendedEdge, useSafeAreaInsetsStyle } from \"../utils/useSafeAreaInsetsStyle\"\n\ninterface BaseScreenProps {\n  /**\n   * Children components.\n   */\n  children?: React.ReactNode\n  /**\n   * Style for the outer content container useful for padding & margin.\n   */\n  style?: StyleProp<ViewStyle>\n  /**\n   * Style for the inner content container useful for padding & margin.\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>\n  /**\n   * Override the default edges for the safe area.\n   */\n  safeAreaEdges?: ExtendedEdge[]\n  /**\n   * Background color\n   */\n  backgroundColor?: string\n  /**\n   * Status bar setting. Defaults to dark.\n   */\n  statusBarStyle?: \"light\" | \"dark\"\n  /**\n   * By how much should we offset the keyboard? Defaults to 0.\n   */\n  keyboardOffset?: number\n  /**\n   * Pass any additional props directly to the StatusBar component.\n   */\n  StatusBarProps?: StatusBarProps\n  /**\n   * Pass any additional props directly to the KeyboardAvoidingView component.\n   */\n  KeyboardAvoidingViewProps?: KeyboardAvoidingViewProps\n}\n\ninterface FixedScreenProps extends BaseScreenProps {\n  preset?: \"fixed\"\n}\ninterface ScrollScreenProps extends BaseScreenProps {\n  preset?: \"scroll\"\n  /**\n   * Should keyboard persist on screen tap. Defaults to handled.\n   * Only applies to scroll preset.\n   */\n  keyboardShouldPersistTaps?: \"handled\" | \"always\" | \"never\"\n  /**\n   * Pass any additional props directly to the ScrollView component.\n   */\n  ScrollViewProps?: ScrollViewProps\n}\n\ninterface AutoScreenProps extends Omit<ScrollScreenProps, \"preset\"> {\n  preset?: \"auto\"\n  /**\n   * Threshold to trigger the automatic disabling/enabling of scroll ability.\n   * Defaults to `{ percent: 0.92 }`.\n   */\n  scrollEnabledToggleThreshold?: { percent?: number; point?: number }\n}\n\nexport type ScreenProps = ScrollScreenProps | FixedScreenProps | AutoScreenProps\n\nconst isIos = Platform.OS === \"ios\"\n\nfunction isNonScrolling(preset?: ScreenProps[\"preset\"]) {\n  return !preset || preset === \"fixed\"\n}\n\nfunction useAutoPreset(props: AutoScreenProps) {\n  const { preset, scrollEnabledToggleThreshold } = props\n  const { percent = 0.92, point = 0 } = scrollEnabledToggleThreshold || {}\n\n  const scrollViewHeight = useRef(null)\n  const scrollViewContentHeight = useRef(null)\n  const [scrollEnabled, setScrollEnabled] = useState(true)\n\n  function updateScrollState() {\n    if (scrollViewHeight.current === null || scrollViewContentHeight.current === null) return\n\n    // check whether content fits the screen then toggle scroll state according to it\n    const contentFitsScreen = (function () {\n      if (point) {\n        return scrollViewContentHeight.current < scrollViewHeight.current - point\n      } else {\n        return scrollViewContentHeight.current < scrollViewHeight.current * percent\n      }\n    })()\n\n    // content is less than the size of the screen, so we can disable scrolling\n    if (scrollEnabled && contentFitsScreen) setScrollEnabled(false)\n\n    // content is greater than the size of the screen, so let's enable scrolling\n    if (!scrollEnabled && !contentFitsScreen) setScrollEnabled(true)\n  }\n\n  function onContentSizeChange(w: number, h: number) {\n    // update scroll-view content height\n    scrollViewContentHeight.current = h\n    updateScrollState()\n  }\n\n  function onLayout(e: LayoutChangeEvent) {\n    const { height } = e.nativeEvent.layout\n    // update scroll-view  height\n    scrollViewHeight.current = height\n    updateScrollState()\n  }\n\n  // update scroll state on every render\n  if (preset === \"auto\") updateScrollState()\n\n  return {\n    scrollEnabled: preset === \"auto\" ? scrollEnabled : true,\n    onContentSizeChange,\n    onLayout,\n  }\n}\n\nfunction ScreenWithoutScrolling(props: ScreenProps) {\n  const { style, contentContainerStyle, children } = props\n  return (\n    <View style={[$outerStyle, style]}>\n      <View style={[$innerStyle, contentContainerStyle]}>{children}</View>\n    </View>\n  )\n}\n\nfunction ScreenWithScrolling(props: ScreenProps) {\n  const {\n    children,\n    keyboardShouldPersistTaps = \"handled\",\n    contentContainerStyle,\n    ScrollViewProps,\n    style,\n  } = props as ScrollScreenProps\n\n  const ref = useRef<ScrollView>()\n\n  const { scrollEnabled, onContentSizeChange, onLayout } = useAutoPreset(props as AutoScreenProps)\n\n  // Add native behavior of pressing the active tab to scroll to the top of the content\n  // More info at: https://reactnavigation.org/docs/use-scroll-to-top/\n  useScrollToTop(ref)\n\n  return (\n    <ScrollView\n      {...{ keyboardShouldPersistTaps, scrollEnabled, ref }}\n      {...ScrollViewProps}\n      onLayout={(e) => {\n        onLayout(e)\n        ScrollViewProps?.onLayout?.(e)\n      }}\n      onContentSizeChange={(w: number, h: number) => {\n        onContentSizeChange(w, h)\n        ScrollViewProps?.onContentSizeChange?.(w, h)\n      }}\n      style={[$outerStyle, ScrollViewProps?.style, style]}\n      contentContainerStyle={[\n        $innerStyle,\n        ScrollViewProps?.contentContainerStyle,\n        contentContainerStyle,\n      ]}\n    >\n      {children}\n    </ScrollView>\n  )\n}\n\nexport function Screen(props: ScreenProps) {\n  const {\n    backgroundColor = colors.background,\n    KeyboardAvoidingViewProps,\n    keyboardOffset = 0,\n    safeAreaEdges,\n    StatusBarProps,\n    statusBarStyle = \"dark\",\n  } = props\n\n  const $containerInsets = useSafeAreaInsetsStyle(safeAreaEdges)\n\n  return (\n    <View style={[$containerStyle, { backgroundColor }, $containerInsets]}>\n      <StatusBar style={statusBarStyle} {...StatusBarProps} />\n\n      <KeyboardAvoidingView\n        behavior={isIos ? \"padding\" : undefined}\n        keyboardVerticalOffset={keyboardOffset}\n        {...KeyboardAvoidingViewProps}\n        style={[$keyboardAvoidingViewStyle, KeyboardAvoidingViewProps?.style]}\n      >\n        {isNonScrolling(props.preset) ? (\n          <ScreenWithoutScrolling {...props} />\n        ) : (\n          <ScreenWithScrolling {...props} />\n        )}\n      </KeyboardAvoidingView>\n    </View>\n  )\n}\n\nconst $containerStyle: ViewStyle = {\n  flex: 1,\n  height: \"100%\",\n  width: \"100%\",\n}\n\nconst $keyboardAvoidingViewStyle: ViewStyle = {\n  flex: 1,\n}\n\nconst $outerStyle: ViewStyle = {\n  flex: 1,\n  height: \"100%\",\n  width: \"100%\",\n}\n\nconst $innerStyle: ViewStyle = {\n  justifyContent: \"flex-start\",\n  alignItems: \"stretch\",\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}