{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React from\"react\";import{useNavigation}from\"@react-navigation/native\";import{Header}from\"../components\";import{jsx as _jsx}from\"react/jsx-runtime\";export function useHeader(headerProps){var deps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var navigation=useNavigation();React.useEffect(function(){navigation.setOptions({headerShown:true,header:function header(){return _jsx(Header,_objectSpread({},headerProps));}});},[].concat(_toConsumableArray(deps),[navigation]));}","map":{"version":3,"names":["React","useNavigation","Header","jsx","_jsx","useHeader","headerProps","deps","arguments","length","undefined","navigation","useEffect","setOptions","headerShown","header","_objectSpread","concat","_toConsumableArray"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/app/utils/useHeader.tsx"],"sourcesContent":["import React, { useLayoutEffect } from \"react\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { Header, HeaderProps } from \"../components\"\n\n/**\n * A hook that can be used to easily set the Header of a react-navigation screen from within the screen's component.\n *\n * - [Documentation and Examples](https://github.com/infinitered/ignite/blob/master/docs/Utils-useHeader.md)\n */\nexport function useHeader(\n  headerProps: HeaderProps,\n  deps: Parameters<typeof useLayoutEffect>[1] = [],\n) {\n  const navigation = useNavigation()\n\n  React.useEffect(() => {\n    navigation.setOptions({\n      headerShown: true,\n      header: () => <Header {...headerProps} />,\n    })\n  }, [...deps, navigation])\n}\n"],"mappings":"wvBAAA,MAAO,CAAAA,KAAK,KAA2B,OAAO,CAC9C,OAASC,aAAa,KAAQ,0BAA0B,CACxD,OAASC,MAAM,qBAAoC,OAAAC,GAAA,IAAAC,IAAA,yBAOnD,MAAO,SAAS,CAAAC,SAASA,CACvBC,WAAwB,CAExB,IADA,CAAAC,IAA2C,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAEhD,GAAM,CAAAG,UAAU,CAAGV,aAAa,CAAC,CAAC,CAElCD,KAAK,CAACY,SAAS,CAAC,UAAM,CACpBD,UAAU,CAACE,UAAU,CAAC,CACpBC,WAAW,CAAE,IAAI,CACjBC,MAAM,CAAE,SAAAA,OAAA,QAAM,CAAAX,IAAA,CAACF,MAAM,CAAAc,aAAA,IAAKV,WAAW,CAAG,CAAC,EAC3C,CAAC,CAAC,CACJ,CAAC,IAAAW,MAAA,CAAAC,kBAAA,CAAMX,IAAI,GAAEI,UAAU,EAAC,CAAC,CAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}