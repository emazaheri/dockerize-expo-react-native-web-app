{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{UnavailabilityError}from'expo-modules-core';import ExpoApplication from\"./ExpoApplication\";export var nativeApplicationVersion=ExpoApplication?ExpoApplication.nativeApplicationVersion||null:null;export var nativeBuildVersion=ExpoApplication?ExpoApplication.nativeBuildVersion||null:null;export var applicationName=ExpoApplication?ExpoApplication.applicationName||null:null;export var applicationId=ExpoApplication?ExpoApplication.applicationId||null:null;export var androidId=ExpoApplication?ExpoApplication.androidId||null:null;export function getInstallReferrerAsync(){return _getInstallReferrerAsync.apply(this,arguments);}function _getInstallReferrerAsync(){_getInstallReferrerAsync=_asyncToGenerator(function*(){if(!ExpoApplication.getInstallReferrerAsync){throw new UnavailabilityError('expo-application','getInstallReferrerAsync');}return yield ExpoApplication.getInstallReferrerAsync();});return _getInstallReferrerAsync.apply(this,arguments);}export function getIosIdForVendorAsync(){return _getIosIdForVendorAsync.apply(this,arguments);}function _getIosIdForVendorAsync(){_getIosIdForVendorAsync=_asyncToGenerator(function*(){var _yield$ExpoApplicatio;if(!ExpoApplication.getIosIdForVendorAsync){throw new UnavailabilityError('expo-application','getIosIdForVendorAsync');}return(_yield$ExpoApplicatio=yield ExpoApplication.getIosIdForVendorAsync())!=null?_yield$ExpoApplicatio:null;});return _getIosIdForVendorAsync.apply(this,arguments);}export var ApplicationReleaseType;(function(ApplicationReleaseType){ApplicationReleaseType[ApplicationReleaseType[\"UNKNOWN\"]=0]=\"UNKNOWN\";ApplicationReleaseType[ApplicationReleaseType[\"SIMULATOR\"]=1]=\"SIMULATOR\";ApplicationReleaseType[ApplicationReleaseType[\"ENTERPRISE\"]=2]=\"ENTERPRISE\";ApplicationReleaseType[ApplicationReleaseType[\"DEVELOPMENT\"]=3]=\"DEVELOPMENT\";ApplicationReleaseType[ApplicationReleaseType[\"AD_HOC\"]=4]=\"AD_HOC\";ApplicationReleaseType[ApplicationReleaseType[\"APP_STORE\"]=5]=\"APP_STORE\";})(ApplicationReleaseType||(ApplicationReleaseType={}));export function getIosApplicationReleaseTypeAsync(){return _getIosApplicationReleaseTypeAsync.apply(this,arguments);}function _getIosApplicationReleaseTypeAsync(){_getIosApplicationReleaseTypeAsync=_asyncToGenerator(function*(){if(!ExpoApplication.getApplicationReleaseTypeAsync){throw new UnavailabilityError('expo-application','getApplicationReleaseTypeAsync');}return yield ExpoApplication.getApplicationReleaseTypeAsync();});return _getIosApplicationReleaseTypeAsync.apply(this,arguments);}export function getIosPushNotificationServiceEnvironmentAsync(){return _getIosPushNotificationServiceEnvironmentAsync.apply(this,arguments);}function _getIosPushNotificationServiceEnvironmentAsync(){_getIosPushNotificationServiceEnvironmentAsync=_asyncToGenerator(function*(){if(!ExpoApplication.getPushNotificationServiceEnvironmentAsync){throw new UnavailabilityError('expo-application','getPushNotificationServiceEnvironmentAsync');}return yield ExpoApplication.getPushNotificationServiceEnvironmentAsync();});return _getIosPushNotificationServiceEnvironmentAsync.apply(this,arguments);}export function getInstallationTimeAsync(){return _getInstallationTimeAsync.apply(this,arguments);}function _getInstallationTimeAsync(){_getInstallationTimeAsync=_asyncToGenerator(function*(){if(!ExpoApplication.getInstallationTimeAsync){throw new UnavailabilityError('expo-application','getInstallationTimeAsync');}var installationTime=yield ExpoApplication.getInstallationTimeAsync();return new Date(installationTime);});return _getInstallationTimeAsync.apply(this,arguments);}export function getLastUpdateTimeAsync(){return _getLastUpdateTimeAsync.apply(this,arguments);}function _getLastUpdateTimeAsync(){_getLastUpdateTimeAsync=_asyncToGenerator(function*(){if(!ExpoApplication.getLastUpdateTimeAsync){throw new UnavailabilityError('expo-application','getLastUpdateTimeAsync');}var lastUpdateTime=yield ExpoApplication.getLastUpdateTimeAsync();return new Date(lastUpdateTime);});return _getLastUpdateTimeAsync.apply(this,arguments);}","map":{"version":3,"names":["UnavailabilityError","ExpoApplication","nativeApplicationVersion","nativeBuildVersion","applicationName","applicationId","androidId","getInstallReferrerAsync","_getInstallReferrerAsync","apply","arguments","_asyncToGenerator","getIosIdForVendorAsync","_getIosIdForVendorAsync","_yield$ExpoApplicatio","ApplicationReleaseType","getIosApplicationReleaseTypeAsync","_getIosApplicationReleaseTypeAsync","getApplicationReleaseTypeAsync","getIosPushNotificationServiceEnvironmentAsync","_getIosPushNotificationServiceEnvironmentAsync","getPushNotificationServiceEnvironmentAsync","getInstallationTimeAsync","_getInstallationTimeAsync","installationTime","Date","getLastUpdateTimeAsync","_getLastUpdateTimeAsync","lastUpdateTime"],"sources":["/home/ehsan/dockerize-expo-rn-web-app/PizzaApp/node_modules/expo-application/src/Application.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoApplication from './ExpoApplication';\n\n// @needsAudit\n/**\n * The human-readable version of the native application that may be displayed in the app store.\n * This is the `Info.plist` value for `CFBundleShortVersionString` on iOS and the version name set\n * by `version` in `app.json` on Android at the time the native app was built.\n * On web, this value is `null`.\n * @example `\"2.11.0\"`\n */\nexport const nativeApplicationVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeApplicationVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The internal build version of the native application that the app store may use to distinguish\n * between different binaries. This is the `Info.plist` value for `CFBundleVersion` on iOS (set with\n * `ios.buildNumber` value in `app.json` in a standalone app) and the version code set by\n * `android.versionCode` in `app.json` on Android at the time the native app was built. On web, this\n * value is `null`. The return type on Android and iOS is `string`.\n * @example iOS: `\"2.11.0\"`, Android: `\"114\"`\n */\nexport const nativeBuildVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeBuildVersion || null\n  : null;\n\n// @needsAudit\n/**\n * The human-readable name of the application that is displayed with the app's icon on the device's\n * home screen or desktop. On Android and iOS, this value is a `string` unless the name could not be\n * retrieved, in which case this value will be `null`. On web this value is `null`.\n * @example `\"Expo\"`, `\"Yelp\"`, `\"Instagram\"`\n */\nexport const applicationName: string | null = ExpoApplication\n  ? ExpoApplication.applicationName || null\n  : null;\n\n// @needsAudit\n/**\n * The ID of the application. On Android, this is the application ID. On iOS, this is the bundle ID.\n * On web, this is `null`.\n * @example `\"com.cocoacasts.scribbles\"`, `\"com.apple.Pages\"`\n */\nexport const applicationId: string | null = ExpoApplication\n  ? ExpoApplication.applicationId || null\n  : null;\n\n// @needsAudit\n/**\n * The value of [`Settings.Secure.ANDROID_ID`](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID).\n * This is a hexadecimal `string` unique to each combination of app-signing key, user, and device.\n * The value may change if a factory reset is performed on the device or if an APK signing key changes.\n * For more information about how the platform handles `ANDROID_ID` in Android 8.0 (API level 26)\n * and higher, see [Android 8.0 Behavior Changes](https://developer.android.com/about/versions/oreo/android-8.0-changes.html#privacy-all).\n * On iOS and web, this value is `null`.\n * > In versions of the platform lower than Android 8.0 (API level 26), this value remains constant\n * > for the lifetime of the user's device. See the [ANDROID_ID](https://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID)\n * > official docs for more information.\n * @example `\"dd96dec43fb81c97\"`\n * @platform android\n */\nexport const androidId: string | null = ExpoApplication ? ExpoApplication.androidId || null : null;\n\n// @needsAudit\n/**\n * Gets the referrer URL of the installed app with the [`Install Referrer API`](https://developer.android.com/google/play/installreferrer)\n * from the Google Play Store. In practice, the referrer URL may not be a complete, absolute URL.\n * @return A `Promise` that fulfills with a `string` of the referrer URL of the installed app.\n *\n * @example\n * ```ts\n * await Application.getInstallReferrerAsync();\n * // \"utm_source=google-play&utm_medium=organic\"\n * ```\n * @platform android\n */\nexport async function getInstallReferrerAsync(): Promise<string> {\n  if (!ExpoApplication.getInstallReferrerAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n  }\n  return await ExpoApplication.getInstallReferrerAsync();\n}\n\n// @needsAudit\n/**\n * Gets the iOS \"identifier for vendor\" ([IDFV](https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor))\n * value, a string ID that uniquely identifies a device to the appâ€™s vendor. This method may\n * sometimes return `nil`, in which case wait and call the method again later. This might happen\n * when the device has been restarted before the user has unlocked the device.\n *\n * The OS will change the vendor identifier if all apps from the current app's vendor have been\n * uninstalled.\n *\n * @return A `Promise` that fulfills with a `string` specifying the app's vendor ID. Apps from the\n * same vendor will return the same ID. See Apple's documentation for more information about the\n * vendor ID's semantics.\n *\n * @example\n * ```ts\n * await Application.getIosIdForVendorAsync();\n * // \"68753A44-4D6F-1226-9C60-0050E4C00067\"\n * ```\n * @platform ios\n */\nexport async function getIosIdForVendorAsync(): Promise<string | null> {\n  if (!ExpoApplication.getIosIdForVendorAsync) {\n    throw new UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n  }\n  return (await ExpoApplication.getIosIdForVendorAsync()) ?? null;\n}\n\n// @docsMissing\nexport enum ApplicationReleaseType {\n  UNKNOWN = 0,\n  SIMULATOR = 1,\n  ENTERPRISE = 2,\n  DEVELOPMENT = 3,\n  AD_HOC = 4,\n  APP_STORE = 5,\n}\n\n// @needsAudit\n/**\n * Gets the iOS application release type.\n * @return Returns a promise which fulfills with an [`ApplicationReleaseType`](#applicationreleasetype).\n * @platform ios\n */\nexport async function getIosApplicationReleaseTypeAsync(): Promise<ApplicationReleaseType> {\n  if (!ExpoApplication.getApplicationReleaseTypeAsync) {\n    throw new UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n  }\n  return await ExpoApplication.getApplicationReleaseTypeAsync();\n}\n\n// @docsMissing\nexport type PushNotificationServiceEnvironment = 'development' | 'production' | null;\n\n// @needsAudit\n/**\n * Gets the current [Apple Push Notification (APN)](https://developer.apple.com/documentation/bundleresources/entitlements/aps-environment?language=objc)\n * service environment.\n * @return Returns a promise fulfilled with the string, either `'development'` or `'production'`,\n * based on the current APN environment, or `null` on the simulator as it does not support registering with APNs.\n * @platform ios\n */\nexport async function getIosPushNotificationServiceEnvironmentAsync(): Promise<PushNotificationServiceEnvironment> {\n  if (!ExpoApplication.getPushNotificationServiceEnvironmentAsync) {\n    throw new UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n  }\n  return await ExpoApplication.getPushNotificationServiceEnvironmentAsync();\n}\n\n// @needsAudit\n/**\n * Gets the time the app was installed onto the device, not counting subsequent updates. If the app\n * is uninstalled and reinstalled, this method returns the time the app was reinstalled.\n * - On iOS, this method uses the [`NSFileCreationDate`](https://developer.apple.com/documentation/foundation/nsfilecreationdate?language=objc)\n * of the app's document root directory.\n * - On Android, this method uses [`PackageInfo.firstInstallTime`](https://developer.android.com/reference/android/content/pm/PackageInfo.html#firstInstallTime).\n * - On web, this method returns `null`.\n *\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the time the app\n * was installed on the device.\n *\n * @example\n * ```ts\n * await Application.getInstallationTimeAsync();\n * // 2019-07-18T18:08:26.121Z\n * ```\n */\nexport async function getInstallationTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getInstallationTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n  }\n  const installationTime = await ExpoApplication.getInstallationTimeAsync();\n  return new Date(installationTime);\n}\n\n// @needsAudit\n/**\n * Gets the last time the app was updated from the Google Play Store.\n * @return Returns a `Promise` that fulfills with a `Date` object that specifies the last time\n * the app was updated via the Google Play Store).\n *\n * @example\n * ```ts\n * await Application.getLastUpdateTimeAsync();\n * // 2019-07-18T21:20:16.887Z\n * ```\n * @platform android\n */\nexport async function getLastUpdateTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getLastUpdateTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n  }\n  const lastUpdateTime = await ExpoApplication.getLastUpdateTimeAsync();\n  return new Date(lastUpdateTime);\n}\n"],"mappings":"uEAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,eAAe,yBAUtB,MAAO,IAAM,CAAAC,wBAAwB,CAAkBD,eAAe,CAClEA,eAAe,CAACC,wBAAwB,EAAI,IAAI,CAChD,IAAI,CAWR,MAAO,IAAM,CAAAC,kBAAkB,CAAkBF,eAAe,CAC5DA,eAAe,CAACE,kBAAkB,EAAI,IAAI,CAC1C,IAAI,CASR,MAAO,IAAM,CAAAC,eAAe,CAAkBH,eAAe,CACzDA,eAAe,CAACG,eAAe,EAAI,IAAI,CACvC,IAAI,CAQR,MAAO,IAAM,CAAAC,aAAa,CAAkBJ,eAAe,CACvDA,eAAe,CAACI,aAAa,EAAI,IAAI,CACrC,IAAI,CAgBR,MAAO,IAAM,CAAAC,SAAS,CAAkBL,eAAe,CAAGA,eAAe,CAACK,SAAS,EAAI,IAAI,CAAG,IAAI,CAelG,eAAsB,CAAAC,uBAAuBA,CAAA,SAAAC,wBAAA,CAAAC,KAAA,MAAAC,SAAA,GAK5C,SAAAF,yBAAA,EAAAA,wBAAA,CAAAG,iBAAA,CALM,WAAsC,CAC3C,GAAI,CAACV,eAAe,CAACM,uBAAuB,CAAE,CAC5C,KAAM,IAAI,CAAAP,mBAAmB,CAAC,kBAAkB,CAAE,yBAAyB,CAAC,C,CAE9E,YAAa,CAAAC,eAAe,CAACM,uBAAuB,EAAE,CACxD,CAAC,SAAAC,wBAAA,CAAAC,KAAA,MAAAC,SAAA,GAuBD,eAAsB,CAAAE,sBAAsBA,CAAA,SAAAC,uBAAA,CAAAJ,KAAA,MAAAC,SAAA,GAK3C,SAAAG,wBAAA,EAAAA,uBAAA,CAAAF,iBAAA,CALM,WAAqC,KAAAG,qBAAA,CAC1C,GAAI,CAACb,eAAe,CAACW,sBAAsB,CAAE,CAC3C,KAAM,IAAI,CAAAZ,mBAAmB,CAAC,kBAAkB,CAAE,wBAAwB,CAAC,C,CAE7E,OAAAc,qBAAA,MAAc,CAAAb,eAAe,CAACW,sBAAsB,EAAE,QAAAE,qBAAA,CAAK,IAAI,CACjE,CAAC,SAAAD,uBAAA,CAAAJ,KAAA,MAAAC,SAAA,GAGD,UAAY,CAAAK,sBAOX,CAPD,UAAYA,sBAAsB,EAChCA,sBAAA,CAAAA,sBAAA,wBAAW,CACXA,sBAAA,CAAAA,sBAAA,4BAAa,CACbA,sBAAA,CAAAA,sBAAA,8BAAc,CACdA,sBAAA,CAAAA,sBAAA,gCAAe,CACfA,sBAAA,CAAAA,sBAAA,sBAAU,CACVA,sBAAA,CAAAA,sBAAA,4BAAa,CACf,CAAC,EAPWA,sBAAsB,GAAtBA,sBAAsB,MAelC,eAAsB,CAAAC,iCAAiCA,CAAA,SAAAC,kCAAA,CAAAR,KAAA,MAAAC,SAAA,GAKtD,SAAAO,mCAAA,EAAAA,kCAAA,CAAAN,iBAAA,CALM,WAAgD,CACrD,GAAI,CAACV,eAAe,CAACiB,8BAA8B,CAAE,CACnD,KAAM,IAAI,CAAAlB,mBAAmB,CAAC,kBAAkB,CAAE,gCAAgC,CAAC,C,CAErF,YAAa,CAAAC,eAAe,CAACiB,8BAA8B,EAAE,CAC/D,CAAC,SAAAD,kCAAA,CAAAR,KAAA,MAAAC,SAAA,GAaD,eAAsB,CAAAS,6CAA6CA,CAAA,SAAAC,8CAAA,CAAAX,KAAA,MAAAC,SAAA,GAKlE,SAAAU,+CAAA,EAAAA,8CAAA,CAAAT,iBAAA,CALM,WAA4D,CACjE,GAAI,CAACV,eAAe,CAACoB,0CAA0C,CAAE,CAC/D,KAAM,IAAI,CAAArB,mBAAmB,CAAC,kBAAkB,CAAE,4CAA4C,CAAC,C,CAEjG,YAAa,CAAAC,eAAe,CAACoB,0CAA0C,EAAE,CAC3E,CAAC,SAAAD,8CAAA,CAAAX,KAAA,MAAAC,SAAA,GAoBD,eAAsB,CAAAY,wBAAwBA,CAAA,SAAAC,yBAAA,CAAAd,KAAA,MAAAC,SAAA,GAM7C,SAAAa,0BAAA,EAAAA,yBAAA,CAAAZ,iBAAA,CANM,WAAuC,CAC5C,GAAI,CAACV,eAAe,CAACqB,wBAAwB,CAAE,CAC7C,KAAM,IAAI,CAAAtB,mBAAmB,CAAC,kBAAkB,CAAE,0BAA0B,CAAC,C,CAE/E,GAAM,CAAAwB,gBAAgB,MAAS,CAAAvB,eAAe,CAACqB,wBAAwB,EAAE,CACzE,MAAO,IAAI,CAAAG,IAAI,CAACD,gBAAgB,CAAC,CACnC,CAAC,SAAAD,yBAAA,CAAAd,KAAA,MAAAC,SAAA,GAeD,eAAsB,CAAAgB,sBAAsBA,CAAA,SAAAC,uBAAA,CAAAlB,KAAA,MAAAC,SAAA,GAM3C,SAAAiB,wBAAA,EAAAA,uBAAA,CAAAhB,iBAAA,CANM,WAAqC,CAC1C,GAAI,CAACV,eAAe,CAACyB,sBAAsB,CAAE,CAC3C,KAAM,IAAI,CAAA1B,mBAAmB,CAAC,kBAAkB,CAAE,wBAAwB,CAAC,C,CAE7E,GAAM,CAAA4B,cAAc,MAAS,CAAA3B,eAAe,CAACyB,sBAAsB,EAAE,CACrE,MAAO,IAAI,CAAAD,IAAI,CAACG,cAAc,CAAC,CACjC,CAAC,SAAAD,uBAAA,CAAAlB,KAAA,MAAAC,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}